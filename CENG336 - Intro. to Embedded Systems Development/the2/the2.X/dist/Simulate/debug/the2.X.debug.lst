

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Apr 20 16:50:22 2024

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F8722 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	idataCOMRAM
    75  00163C                     __pidataCOMRAM:
    76                           	callstack 0
    77                           
    78                           ;initializer for _blink_on
    79  00163C  01                 	db	1
    80  0000                     _LATA	set	3977
    81  0000                     _LATF	set	3982
    82  0000                     _LATE	set	3981
    83  0000                     _LATD	set	3980
    84  0000                     _LATC	set	3979
    85  0000                     _PORTJ	set	3976
    86  0000                     _PORTH	set	3975
    87  0000                     _PORTF	set	3973
    88  0000                     _PORTE	set	3972
    89  0000                     _PORTD	set	3971
    90  0000                     _PORTC	set	3970
    91  0000                     _PORTA	set	3968
    92  0000                     _TRISJ	set	3994
    93  0000                     _TRISH	set	3993
    94  0000                     _TRISF	set	3991
    95  0000                     _TRISE	set	3990
    96  0000                     _TRISD	set	3989
    97  0000                     _TRISC	set	3988
    98  0000                     _TRISB	set	3987
    99  0000                     _TRISA	set	3986
   100  0000                     _T0CON	set	4053
   101  0000                     _PORTB	set	3969
   102  0000                     _TMR0H	set	4055
   103  0000                     _TMR0L	set	4054
   104  0000                     _INTCON	set	4082
   105                           
   106                           ; #config settings
   107                           
   108                           	psect	cinit
   109  0014FE                     __pcinit:
   110                           	callstack 0
   111  0014FE                     start_initialization:
   112                           	callstack 0
   113  0014FE                     __initialization:
   114                           	callstack 0
   115                           
   116                           ; Initialize objects allocated to COMRAM (1 bytes)
   117                           ; load TBLPTR registers with __pidataCOMRAM
   118  0014FE  0E3C               	movlw	low __pidataCOMRAM
   119  001500  6EF6               	movwf	tblptrl,c
   120  001502  0E16               	movlw	high __pidataCOMRAM
   121  001504  6EF7               	movwf	tblptrh,c
   122  001506  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   123  001508  6EF8               	movwf	tblptru,c
   124  00150A  0009               	tblrd		*+	;fetch initializer
   125  00150C  CFF5 F043          	movff	tablat,__pdataCOMRAM
   126                           
   127                           ; Clear objects allocated to BANK0 (66 bytes)
   128  001510  EE00  F060         	lfsr	0,__pbssBANK0
   129  001514  0E42               	movlw	66
   130  001516                     clear_0:
   131  001516  6AEE               	clrf	postinc0,c
   132  001518  06E8               	decf	wreg,f,c
   133  00151A  E1FD               	bnz	clear_0
   134                           
   135                           ; Clear objects allocated to COMRAM (34 bytes)
   136  00151C  EE00  F001         	lfsr	0,__pbssCOMRAM
   137  001520  0E22               	movlw	34
   138  001522                     clear_1:
   139  001522  6AEE               	clrf	postinc0,c
   140  001524  06E8               	decf	wreg,f,c
   141  001526  E1FD               	bnz	clear_1
   142  001528                     end_of_initialization:
   143                           	callstack 0
   144  001528                     __end_of__initialization:
   145                           	callstack 0
   146  001528  9044               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   147  00152A  9244               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   148  00152C  0100               	movlb	0
   149  00152E  EF0E  F00B         	goto	_main	;jump to C main() function
   150                           
   151                           	psect	bssCOMRAM
   152  000001                     __pbssCOMRAM:
   153                           	callstack 0
   154  000001                     _keys:
   155                           	callstack 0
   156  000001                     	ds	6
   157  000007                     _PORTA_current:
   158                           	callstack 0
   159  000007                     	ds	4
   160  00000B                     _PORTA_previous:
   161                           	callstack 0
   162  00000B                     	ds	4
   163  00000F                     move_down@F4756:
   164                           	callstack 0
   165  00000F                     	ds	2
   166  000011                     move_up@F4753:
   167                           	callstack 0
   168  000011                     	ds	2
   169  000013                     move_right@F4750:
   170                           	callstack 0
   171  000013                     	ds	2
   172  000015                     move_left@F4747:
   173                           	callstack 0
   174  000015                     	ds	2
   175  000017                     submit@F4719:
   176                           	callstack 0
   177  000017                     	ds	2
   178  000019                     init@F4605:
   179                           	callstack 0
   180  000019                     	ds	2
   181  00001B                     _position:
   182                           	callstack 0
   183  00001B                     	ds	2
   184  00001D                     _blink_counter:
   185                           	callstack 0
   186  00001D                     	ds	2
   187  00001F                     _prev_submit:
   188                           	callstack 0
   189  00001F                     	ds	1
   190  000020                     _type:
   191                           	callstack 0
   192  000020                     	ds	1
   193  000021                     _rotation:
   194                           	callstack 0
   195  000021                     	ds	1
   196  000022                     _counter250ms:
   197                           	callstack 0
   198  000022                     	ds	1
   199                           
   200                           	psect	dataCOMRAM
   201  000043                     __pdataCOMRAM:
   202                           	callstack 0
   203  000043                     _blink_on:
   204                           	callstack 0
   205  000043                     	ds	1
   206                           
   207                           	psect	bssBANK0
   208  000060                     __pbssBANK0:
   209                           	callstack 0
   210  000060                     _grid:
   211                           	callstack 0
   212  000060                     	ds	32
   213  000080                     draw@F4683:
   214                           	callstack 0
   215  000080                     	ds	2
   216  000082                     draw@F4681:
   217                           	callstack 0
   218  000082                     	ds	2
   219  000084                     draw@F4679:
   220                           	callstack 0
   221  000084                     	ds	2
   222  000086                     draw@F4677:
   223                           	callstack 0
   224  000086                     	ds	2
   225  000088                     draw@F4675:
   226                           	callstack 0
   227  000088                     	ds	2
   228  00008A                     draw@F4673:
   229                           	callstack 0
   230  00008A                     	ds	2
   231  00008C                     draw@F4671:
   232                           	callstack 0
   233  00008C                     	ds	2
   234  00008E                     draw@F4669:
   235                           	callstack 0
   236  00008E                     	ds	2
   237  000090                     draw@F4667:
   238                           	callstack 0
   239  000090                     	ds	2
   240  000092                     draw@F4665:
   241                           	callstack 0
   242  000092                     	ds	2
   243  000094                     draw@F4663:
   244                           	callstack 0
   245  000094                     	ds	2
   246  000096                     draw@F4661:
   247                           	callstack 0
   248  000096                     	ds	2
   249  000098                     draw@F4659:
   250                           	callstack 0
   251  000098                     	ds	2
   252  00009A                     draw@F4657:
   253                           	callstack 0
   254  00009A                     	ds	2
   255  00009C                     draw@F4655:
   256                           	callstack 0
   257  00009C                     	ds	2
   258  00009E                     draw@F4653:
   259                           	callstack 0
   260  00009E                     	ds	2
   261  0000A0                     draw@F4651:
   262                           	callstack 0
   263  0000A0                     	ds	2
   264                           
   265                           	psect	cstackBANK0
   266  0000A2                     __pcstackBANK0:
   267                           	callstack 0
   268  0000A2                     ??_init:
   269  0000A2                     setLed@pos:
   270                           	callstack 0
   271  0000A2                     canMove@position:
   272                           	callstack 0
   273  0000A2                     busy_wait@i:
   274                           	callstack 0
   275                           
   276                           ; 4 bytes @ 0x0
   277  0000A2                     	ds	2
   278  0000A4                     ??_canMove:
   279  0000A4                     setLed@value:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x2
   283  0000A4                     	ds	1
   284  0000A5                     ??_setLed:
   285                           
   286                           ; 1 bytes @ 0x3
   287  0000A5                     	ds	1
   288  0000A6                     canMove@left:
   289                           	callstack 0
   290  0000A6                     init@4606:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x4
   294  0000A6                     	ds	1
   295  0000A7                     ??_draw:
   296  0000A7                     canMove@right:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0x5
   300  0000A7                     	ds	1
   301  0000A8                     canMove@top:
   302                           	callstack 0
   303  0000A8                     init@i:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x6
   307  0000A8                     	ds	1
   308  0000A9                     canMove@bot:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x7
   312  0000A9                     	ds	1
   313  0000AA                     _canMove$263:
   314                           	callstack 0
   315  0000AA                     init@j:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x8
   319  0000AA                     	ds	1
   320  0000AB                     move@newPosition:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x9
   324  0000AB                     	ds	1
   325  0000AC                     init@i_117:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0xA
   329  0000AC                     	ds	1
   330  0000AD                     move_left@newPosition:
   331                           	callstack 0
   332  0000AD                     move_right@newPosition:
   333                           	callstack 0
   334  0000AD                     move_up@newPosition:
   335                           	callstack 0
   336  0000AD                     move_down@newPosition:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0xB
   340  0000AD                     	ds	2
   341  0000AF                     poll_a@i:
   342                           	callstack 0
   343  0000AF                     draw@4652:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0xD
   347  0000AF                     	ds	2
   348  0000B1                     draw@4654:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0xF
   352  0000B1                     	ds	2
   353  0000B3                     draw@4656:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x11
   357  0000B3                     	ds	2
   358  0000B5                     draw@4658:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x13
   362  0000B5                     	ds	2
   363  0000B7                     draw@4660:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x15
   367  0000B7                     	ds	2
   368  0000B9                     draw@4662:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x17
   372  0000B9                     	ds	2
   373  0000BB                     draw@4664:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x19
   377  0000BB                     	ds	2
   378  0000BD                     draw@4666:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x1B
   382  0000BD                     	ds	2
   383  0000BF                     draw@4668:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x1D
   387  0000BF                     	ds	2
   388  0000C1                     draw@4670:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x1F
   392  0000C1                     	ds	2
   393  0000C3                     draw@4672:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x21
   397  0000C3                     	ds	2
   398  0000C5                     draw@4674:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x23
   402  0000C5                     	ds	2
   403  0000C7                     draw@4676:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x25
   407  0000C7                     	ds	2
   408  0000C9                     draw@4678:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x27
   412  0000C9                     	ds	2
   413  0000CB                     draw@4680:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x29
   417  0000CB                     	ds	2
   418  0000CD                     draw@4682:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x2B
   422  0000CD                     	ds	2
   423  0000CF                     draw@4684:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x2D
   427  0000CF                     	ds	2
   428  0000D1                     
   429                           ; 1 bytes @ 0x2F
   430                           
   431                           	psect	cstackCOMRAM
   432  000023                     __pcstackCOMRAM:
   433                           	callstack 0
   434  000023                     ??_not_intersects:
   435  000023                     ?___lwmod:
   436                           	callstack 0
   437  000023                     ___lwmod@dividend:
   438                           	callstack 0
   439  000023                     i2canMove@position:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x0
   443  000023                     	ds	2
   444  000025                     ??i2_canMove:
   445  000025                     ___lwmod@divisor:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x2
   449  000025                     	ds	2
   450  000027                     _not_intersects$120:
   451                           	callstack 0
   452  000027                     ___lwmod@counter:
   453                           	callstack 0
   454  000027                     i2canMove@left:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x4
   458  000027                     	ds	1
   459  000028                     _not_intersects$121:
   460                           	callstack 0
   461  000028                     i2canMove@right:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x5
   465  000028                     	ds	1
   466  000029                     _not_intersects$122:
   467                           	callstack 0
   468  000029                     i2canMove@top:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x6
   472  000029                     	ds	1
   473  00002A                     _not_intersects$123:
   474                           	callstack 0
   475  00002A                     i2canMove@bot:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x7
   479  00002A                     	ds	1
   480  00002B                     _not_intersects$124:
   481                           	callstack 0
   482  00002B                     i2_canMove$263:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x8
   486  00002B                     	ds	1
   487  00002C                     _not_intersects$125:
   488                           	callstack 0
   489  00002C                     i2move@newPosition:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x9
   493  00002C                     	ds	1
   494  00002D                     _not_intersects$126:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0xA
   498  00002D                     	ds	1
   499  00002E                     _not_intersects$127:
   500                           	callstack 0
   501  00002E                     i2move_down@newPosition:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0xB
   505  00002E                     	ds	1
   506  00002F                     _not_intersects$128:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0xC
   510  00002F                     	ds	1
   511  000030                     _not_intersects$129:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0xD
   515  000030                     	ds	1
   516  000031                     _not_intersects$130:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0xE
   520  000031                     	ds	1
   521  000032                     _not_intersects$131:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0xF
   525  000032                     	ds	1
   526  000033                     _not_intersects$132:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x10
   530  000033                     	ds	1
   531  000034                     _not_intersects$133:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x11
   535  000034                     	ds	1
   536  000035                     _not_intersects$134:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x12
   540  000035                     	ds	1
   541  000036                     _not_intersects$135:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x13
   545  000036                     	ds	1
   546  000037                     _not_intersects$136:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0x14
   550  000037                     	ds	1
   551  000038                     not_intersects@intersects:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0x15
   555  000038                     	ds	1
   556  000039                     ??_submit:
   557                           
   558                           ; 1 bytes @ 0x16
   559  000039                     	ds	4
   560  00003D                     submit@4720:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x1A
   564  00003D                     	ds	2
   565  00003F                     ??_HandleInterrupt:
   566                           
   567                           ; 1 bytes @ 0x1C
   568  00003F                     	ds	4
   569                           
   570 ;;
   571 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   572 ;;
   573 ;; *************** function _main *****************
   574 ;; Defined at:
   575 ;;		line 517 in file "main.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;Total ram usage:        0 bytes
   594 ;; Hardware stack levels required when called:    9
   595 ;; This function calls:
   596 ;;		_busy_wait
   597 ;;		_draw
   598 ;;		_init
   599 ;;		_poll_a
   600 ;; This function is called by:
   601 ;;		Startup code after reset
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text0
   606  00161C                     __ptext0:
   607                           	callstack 0
   608  00161C                     _main:
   609                           	callstack 22
   610  00161C                     
   611                           ;main.c: 518:     init();
   612  00161C  ECFB  F007         	call	_init	;wreg free
   613  001620                     
   614                           ;main.c: 519:     busy_wait();
   615  001620  EC3E  F00A         	call	_busy_wait	;wreg free
   616  001624                     l2684:
   617                           
   618                           ;main.c: 522:         poll_a();
   619  001624  ECA0  F008         	call	_poll_a	;wreg free
   620  001628                     
   621                           ;main.c: 523:         draw();
   622  001628  EC30  F003         	call	_draw	;wreg free
   623  00162C  EF12  F00B         	goto	l2684
   624  001630  EF07  F000         	goto	start
   625  001634                     __end_of_main:
   626                           	callstack 0
   627                           
   628 ;; *************** function _poll_a *****************
   629 ;; Defined at:
   630 ;;		line 493 in file "main.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;  i               1   13[BANK0 ] unsigned char 
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   647 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   648 ;;Total ram usage:        1 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; Hardware stack levels required when called:    8
   651 ;; This function calls:
   652 ;;		_move_down
   653 ;;		_move_left
   654 ;;		_move_right
   655 ;;		_move_up
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text1
   662  001140                     __ptext1:
   663                           	callstack 0
   664  001140                     _poll_a:
   665                           	callstack 22
   666  001140                     
   667                           ;main.c: 494:     PORTA_current[KEY_RIGHT] = ((LATA) & (1 << (KEY_RIGHT)));
   668  001140  5089               	movf	137,w,c	;volatile
   669  001142  0B01               	andlw	1
   670  001144  6E07               	movwf	_PORTA_current^0,c
   671                           
   672                           ;main.c: 495:     PORTA_current[KEY_UP] = ((LATA) & (1 << (KEY_UP)));
   673  001146  5089               	movf	137,w,c	;volatile
   674  001148  0B02               	andlw	2
   675  00114A  6E08               	movwf	(_PORTA_current+1)^0,c
   676                           
   677                           ;main.c: 496:     PORTA_current[KEY_DOWN] = ((LATA) & (1 << (KEY_DOWN)));
   678  00114C  5089               	movf	137,w,c	;volatile
   679  00114E  0B04               	andlw	4
   680  001150  6E09               	movwf	(_PORTA_current+2)^0,c
   681                           
   682                           ;main.c: 497:     PORTA_current[KEY_LEFT] = ((LATA) & (1 << (KEY_LEFT)));
   683  001152  5089               	movf	137,w,c	;volatile
   684  001154  0B08               	andlw	8
   685  001156  6E0A               	movwf	(_PORTA_current+3)^0,c
   686  001158                     
   687                           ;main.c: 499:     if (PORTA_current[KEY_RIGHT] && !PORTA_previous[KEY_RIGHT])
   688  001158  5007               	movf	_PORTA_current^0,w,c
   689  00115A  B4D8               	btfsc	status,2,c
   690  00115C  EFB2  F008         	goto	u2131
   691  001160  EFB4  F008         	goto	u2130
   692  001164                     u2131:
   693  001164  EFBE  F008         	goto	l2650
   694  001168                     u2130:
   695  001168  500B               	movf	_PORTA_previous^0,w,c
   696  00116A  A4D8               	btfss	status,2,c
   697  00116C  EFBA  F008         	goto	u2141
   698  001170  EFBC  F008         	goto	u2140
   699  001174                     u2141:
   700  001174  EFBE  F008         	goto	l2650
   701  001178                     u2140:
   702  001178                     
   703                           ;main.c: 500:         move_right();
   704  001178  ECCF  F00A         	call	_move_right	;wreg free
   705  00117C                     l2650:
   706                           
   707                           ;main.c: 501:     if (PORTA_current[KEY_UP] && !PORTA_previous[KEY_UP])
   708  00117C  5008               	movf	(_PORTA_current+1)^0,w,c
   709  00117E  B4D8               	btfsc	status,2,c
   710  001180  EFC4  F008         	goto	u2151
   711  001184  EFC6  F008         	goto	u2150
   712  001188                     u2151:
   713  001188  EFD0  F008         	goto	l2656
   714  00118C                     u2150:
   715  00118C  500C               	movf	(_PORTA_previous+1)^0,w,c
   716  00118E  A4D8               	btfss	status,2,c
   717  001190  EFCC  F008         	goto	u2161
   718  001194  EFCE  F008         	goto	u2160
   719  001198                     u2161:
   720  001198  EFD0  F008         	goto	l2656
   721  00119C                     u2160:
   722  00119C                     
   723                           ;main.c: 502:         move_up();
   724  00119C  ECBF  F00A         	call	_move_up	;wreg free
   725  0011A0                     l2656:
   726                           
   727                           ;main.c: 503:     if (PORTA_current[KEY_DOWN] && !PORTA_previous[KEY_DOWN])
   728  0011A0  5009               	movf	(_PORTA_current+2)^0,w,c
   729  0011A2  B4D8               	btfsc	status,2,c
   730  0011A4  EFD6  F008         	goto	u2171
   731  0011A8  EFD8  F008         	goto	u2170
   732  0011AC                     u2171:
   733  0011AC  EFE2  F008         	goto	l2662
   734  0011B0                     u2170:
   735  0011B0  500D               	movf	(_PORTA_previous+2)^0,w,c
   736  0011B2  A4D8               	btfss	status,2,c
   737  0011B4  EFDE  F008         	goto	u2181
   738  0011B8  EFE0  F008         	goto	u2180
   739  0011BC                     u2181:
   740  0011BC  EFE2  F008         	goto	l2662
   741  0011C0                     u2180:
   742  0011C0                     
   743                           ;main.c: 504:         move_down();
   744  0011C0  ECEF  F00A         	call	_move_down	;wreg free
   745  0011C4                     l2662:
   746                           
   747                           ;main.c: 505:     if (PORTA_current[KEY_LEFT] && !PORTA_previous[KEY_LEFT])
   748  0011C4  500A               	movf	(_PORTA_current+3)^0,w,c
   749  0011C6  B4D8               	btfsc	status,2,c
   750  0011C8  EFE8  F008         	goto	u2191
   751  0011CC  EFEA  F008         	goto	u2190
   752  0011D0                     u2191:
   753  0011D0  EFF4  F008         	goto	l2668
   754  0011D4                     u2190:
   755  0011D4  500E               	movf	(_PORTA_previous+3)^0,w,c
   756  0011D6  A4D8               	btfss	status,2,c
   757  0011D8  EFF0  F008         	goto	u2201
   758  0011DC  EFF2  F008         	goto	u2200
   759  0011E0                     u2201:
   760  0011E0  EFF4  F008         	goto	l2668
   761  0011E4                     u2200:
   762  0011E4                     
   763                           ;main.c: 506:         move_left();
   764  0011E4  ECDF  F00A         	call	_move_left	;wreg free
   765  0011E8                     l2668:
   766                           
   767                           ;main.c: 508:     for (char i = 0; i < ARROW_KEY_COUNT; i++) {
   768  0011E8  0E00               	movlw	0
   769  0011EA  0100               	movlb	0	; () banked
   770  0011EC  6FAF               	movwf	poll_a@i& (0+255),b
   771  0011EE                     l2674:
   772                           
   773                           ; BSR set to: 0
   774                           ;main.c: 509:         PORTA_previous[i] = PORTA_current[i];
   775  0011EE  0E07               	movlw	low _PORTA_current
   776  0011F0  25AF               	addwf	poll_a@i& (0+255),w,b
   777  0011F2  6ED9               	movwf	fsr2l,c
   778  0011F4  6ADA               	clrf	fsr2h,c
   779  0011F6  0E00               	movlw	high _PORTA_current
   780  0011F8  22DA               	addwfc	fsr2h,f,c
   781  0011FA  0E0B               	movlw	low _PORTA_previous
   782  0011FC  25AF               	addwf	poll_a@i& (0+255),w,b
   783  0011FE  6EE1               	movwf	fsr1l,c
   784  001200  6AE2               	clrf	fsr1h,c
   785  001202  0E00               	movlw	high _PORTA_previous
   786  001204  22E2               	addwfc	fsr1h,f,c
   787  001206  CFDF FFE7          	movff	indf2,indf1
   788  00120A                     
   789                           ; BSR set to: 0
   790                           ;main.c: 510:     }
   791  00120A  2BAF               	incf	poll_a@i& (0+255),f,b
   792  00120C                     
   793                           ; BSR set to: 0
   794  00120C  0E03               	movlw	3
   795  00120E  65AF               	cpfsgt	poll_a@i& (0+255),b
   796  001210  EF0C  F009         	goto	u2211
   797  001214  EF0E  F009         	goto	u2210
   798  001218                     u2211:
   799  001218  EFF7  F008         	goto	l2674
   800  00121C                     u2210:
   801  00121C                     
   802                           ; BSR set to: 0
   803  00121C  0012               	return		;funcret
   804  00121E                     __end_of_poll_a:
   805                           	callstack 0
   806                           
   807 ;; *************** function _move_up *****************
   808 ;; Defined at:
   809 ;;		line 483 in file "main.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  newPosition     2   11[BANK0 ] struct Position
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, status,2, status,0, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;Total ram usage:        2 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; Hardware stack levels required when called:    7
   830 ;; This function calls:
   831 ;;		_move
   832 ;; This function is called by:
   833 ;;		_poll_a
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text2
   838  00157E                     __ptext2:
   839                           	callstack 0
   840  00157E                     _move_up:
   841                           	callstack 22
   842  00157E                     
   843                           ;main.c: 484:     Position newPosition = {position.x, position.y - 1};
   844  00157E  C011  F0AD         	movff	move_up@F4753,move_up@newPosition
   845  001582  C012  F0AE         	movff	move_up@F4753+1,move_up@newPosition+1
   846  001586  C01B  F0AD         	movff	_position,move_up@newPosition
   847  00158A  041C               	decf	(_position+1)^0,w,c
   848  00158C  0100               	movlb	0	; () banked
   849  00158E  6FAE               	movwf	(move_up@newPosition+1)& (0+255),b
   850  001590                     
   851                           ; BSR set to: 0
   852                           ;main.c: 485:     move(newPosition);
   853  001590  C0AD  F0AB         	movff	move_up@newPosition,move@newPosition
   854  001594  C0AE  F0AC         	movff	move_up@newPosition+1,move@newPosition+1
   855  001598  EC99  F00A         	call	_move	;wreg free
   856  00159C  0012               	return		;funcret
   857  00159E                     __end_of_move_up:
   858                           	callstack 0
   859                           
   860 ;; *************** function _move_right *****************
   861 ;; Defined at:
   862 ;;		line 478 in file "main.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  newPosition     2   11[BANK0 ] struct Position
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, status,2, status,0, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;Total ram usage:        2 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; Hardware stack levels required when called:    7
   883 ;; This function calls:
   884 ;;		_move
   885 ;; This function is called by:
   886 ;;		_poll_a
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text3
   891  00159E                     __ptext3:
   892                           	callstack 0
   893  00159E                     _move_right:
   894                           	callstack 22
   895  00159E                     
   896                           ;main.c: 479:     Position newPosition = {position.x + 1, position.y};
   897  00159E  C013  F0AD         	movff	move_right@F4750,move_right@newPosition
   898  0015A2  C014  F0AE         	movff	move_right@F4750+1,move_right@newPosition+1
   899  0015A6  281B               	incf	_position^0,w,c
   900  0015A8  0100               	movlb	0	; () banked
   901  0015AA  6FAD               	movwf	move_right@newPosition& (0+255),b
   902  0015AC                     
   903                           ; BSR set to: 0
   904  0015AC  C01C  F0AE         	movff	_position+1,move_right@newPosition+1
   905  0015B0                     
   906                           ; BSR set to: 0
   907                           ;main.c: 480:     move(newPosition);
   908  0015B0  C0AD  F0AB         	movff	move_right@newPosition,move@newPosition
   909  0015B4  C0AE  F0AC         	movff	move_right@newPosition+1,move@newPosition+1
   910  0015B8  EC99  F00A         	call	_move	;wreg free
   911  0015BC  0012               	return		;funcret
   912  0015BE                     __end_of_move_right:
   913                           	callstack 0
   914                           
   915 ;; *************** function _move_left *****************
   916 ;; Defined at:
   917 ;;		line 473 in file "main.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  newPosition     2   11[BANK0 ] struct Position
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		wreg, status,2, status,0, cstack
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;Total ram usage:        2 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:    7
   938 ;; This function calls:
   939 ;;		_move
   940 ;; This function is called by:
   941 ;;		_poll_a
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text4
   946  0015BE                     __ptext4:
   947                           	callstack 0
   948  0015BE                     _move_left:
   949                           	callstack 22
   950  0015BE                     
   951                           ;main.c: 474:     Position newPosition = {position.x - 1, position.y};
   952  0015BE  C015  F0AD         	movff	move_left@F4747,move_left@newPosition
   953  0015C2  C016  F0AE         	movff	move_left@F4747+1,move_left@newPosition+1
   954  0015C6  041B               	decf	_position^0,w,c
   955  0015C8  0100               	movlb	0	; () banked
   956  0015CA  6FAD               	movwf	move_left@newPosition& (0+255),b
   957  0015CC                     
   958                           ; BSR set to: 0
   959  0015CC  C01C  F0AE         	movff	_position+1,move_left@newPosition+1
   960  0015D0                     
   961                           ; BSR set to: 0
   962                           ;main.c: 475:     move(newPosition);
   963  0015D0  C0AD  F0AB         	movff	move_left@newPosition,move@newPosition
   964  0015D4  C0AE  F0AC         	movff	move_left@newPosition+1,move@newPosition+1
   965  0015D8  EC99  F00A         	call	_move	;wreg free
   966  0015DC  0012               	return		;funcret
   967  0015DE                     __end_of_move_left:
   968                           	callstack 0
   969                           
   970 ;; *************** function _move_down *****************
   971 ;; Defined at:
   972 ;;		line 488 in file "main.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;		None
   975 ;; Auto vars:     Size  Location     Type
   976 ;;  newPosition     2   11[BANK0 ] struct Position
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1    wreg      void 
   979 ;; Registers used:
   980 ;;		wreg, status,2, status,0, cstack
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   987 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;Total ram usage:        2 bytes
   991 ;; Hardware stack levels used:    1
   992 ;; Hardware stack levels required when called:    7
   993 ;; This function calls:
   994 ;;		_move
   995 ;; This function is called by:
   996 ;;		_poll_a
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           	psect	text5
  1001  0015DE                     __ptext5:
  1002                           	callstack 0
  1003  0015DE                     _move_down:
  1004                           	callstack 22
  1005  0015DE                     
  1006                           ;main.c: 489:     Position newPosition = {position.x, position.y + 1};
  1007  0015DE  C00F  F0AD         	movff	move_down@F4756,move_down@newPosition
  1008  0015E2  C010  F0AE         	movff	move_down@F4756+1,move_down@newPosition+1
  1009  0015E6  C01B  F0AD         	movff	_position,move_down@newPosition
  1010  0015EA  281C               	incf	(_position+1)^0,w,c
  1011  0015EC  0100               	movlb	0	; () banked
  1012  0015EE  6FAE               	movwf	(move_down@newPosition+1)& (0+255),b
  1013  0015F0                     
  1014                           ; BSR set to: 0
  1015                           ;main.c: 490:     move(newPosition);
  1016  0015F0  C0AD  F0AB         	movff	move_down@newPosition,move@newPosition
  1017  0015F4  C0AE  F0AC         	movff	move_down@newPosition+1,move@newPosition+1
  1018  0015F8  EC99  F00A         	call	_move	;wreg free
  1019  0015FC  0012               	return		;funcret
  1020  0015FE                     __end_of_move_down:
  1021                           	callstack 0
  1022                           
  1023 ;; *************** function _move *****************
  1024 ;; Defined at:
  1025 ;;		line 467 in file "main.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;  newPosition     2    9[BANK0 ] struct Position
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;		None
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1039 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;Total ram usage:        2 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    6
  1046 ;; This function calls:
  1047 ;;		_canMove
  1048 ;; This function is called by:
  1049 ;;		_move_left
  1050 ;;		_move_right
  1051 ;;		_move_up
  1052 ;;		_move_down
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text6
  1057  001532                     __ptext6:
  1058                           	callstack 0
  1059  001532                     _move:
  1060                           	callstack 22
  1061  001532                     
  1062                           ;main.c: 468:     if (canMove(newPosition)) {
  1063  001532  C0AB  F0A2         	movff	move@newPosition,canMove@position
  1064  001536  C0AC  F0A3         	movff	move@newPosition+1,canMove@position+1
  1065  00153A  EC0F  F009         	call	_canMove	;wreg free
  1066  00153E  0900               	iorlw	0
  1067  001540  B4D8               	btfsc	status,2,c
  1068  001542  EFA5  F00A         	goto	u1841
  1069  001546  EFA7  F00A         	goto	u1840
  1070  00154A                     u1841:
  1071  00154A  EFAB  F00A         	goto	l255
  1072  00154E                     u1840:
  1073  00154E                     
  1074                           ;main.c: 469:         position = newPosition;
  1075  00154E  C0AB  F01B         	movff	move@newPosition,_position
  1076  001552  C0AC  F01C         	movff	move@newPosition+1,_position+1
  1077  001556                     l255:
  1078  001556  0012               	return		;funcret
  1079  001558                     __end_of_move:
  1080                           	callstack 0
  1081                           
  1082 ;; *************** function _canMove *****************
  1083 ;; Defined at:
  1084 ;;		line 445 in file "main.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  position        2    0[BANK0 ] struct Position
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  bot             1    7[BANK0 ] unsigned char 
  1089 ;;  top             1    6[BANK0 ] unsigned char 
  1090 ;;  right           1    5[BANK0 ] unsigned char 
  1091 ;;  left            1    4[BANK0 ] unsigned char 
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      unsigned char 
  1094 ;; Registers used:
  1095 ;;		wreg, status,2, status,0
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1101 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1102 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1103 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1104 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1105 ;;Total ram usage:        9 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; Hardware stack levels required when called:    5
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_move
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text7
  1116  00121E                     __ptext7:
  1117                           	callstack 0
  1118  00121E                     _canMove:
  1119                           	callstack 22
  1120  00121E                     
  1121                           ;main.c: 446:     unsigned char left, right, top, bot;;main.c: 447:     switch (type) {
  1122  00121E  EF25  F009         	goto	l2396
  1123  001222                     l245:
  1124                           
  1125                           ; BSR set to: 0
  1126                           ;main.c: 449:         {;main.c: 450:             left = right = position.x;
  1127  001222  C0A2  F0A7         	movff	canMove@position,canMove@right
  1128  001226  C0A7  F0A6         	movff	canMove@right,canMove@left
  1129                           
  1130                           ;main.c: 451:             top = bot = position.y;
  1131  00122A  C0A3  F0A9         	movff	canMove@position+1,canMove@bot
  1132  00122E  C0A9  F0A8         	movff	canMove@bot,canMove@top
  1133                           
  1134                           ;main.c: 452:             break;
  1135  001232  EF3F  F009         	goto	l2398
  1136  001236                     l248:
  1137                           
  1138                           ; BSR set to: 0
  1139                           ;main.c: 456:         {;main.c: 457:             left = position.x;
  1140  001236  C0A2  F0A6         	movff	canMove@position,canMove@left
  1141  00123A                     
  1142                           ; BSR set to: 0
  1143                           ;main.c: 458:             right = position.x + 1;
  1144  00123A  29A2               	incf	canMove@position& (0+255),w,b
  1145  00123C  6FA7               	movwf	canMove@right& (0+255),b
  1146  00123E                     
  1147                           ; BSR set to: 0
  1148                           ;main.c: 459:             top = position.y;
  1149  00123E  C0A3  F0A8         	movff	canMove@position+1,canMove@top
  1150                           
  1151                           ;main.c: 460:             bot = position.y + 1;
  1152  001242  29A3               	incf	(canMove@position+1)& (0+255),w,b
  1153  001244  6FA9               	movwf	canMove@bot& (0+255),b
  1154                           
  1155                           ;main.c: 461:             break;
  1156  001246  EF3F  F009         	goto	l2398
  1157  00124A                     l2396:
  1158  00124A  5020               	movf	_type^0,w,c
  1159  00124C  0100               	movlb	0	; () banked
  1160  00124E  6FA4               	movwf	??_canMove& (0+255),b
  1161  001250  6BA5               	clrf	(??_canMove+1)& (0+255),b
  1162                           
  1163                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1164                           ; Switch size 1, requested type "simple"
  1165                           ; Number of cases is 1, Range of values is 0 to 0
  1166                           ; switch strategies available:
  1167                           ; Name         Instructions Cycles
  1168                           ; simple_byte            4     3 (average)
  1169                           ;	Chosen strategy is simple_byte
  1170  001252  51A5               	movf	(??_canMove+1)& (0+255),w,b
  1171  001254  0A00               	xorlw	0	; case 0
  1172  001256  B4D8               	btfsc	status,2,c
  1173  001258  EF30  F009         	goto	l2898
  1174  00125C  EF3F  F009         	goto	l2398
  1175  001260                     l2898:
  1176                           
  1177                           ; BSR set to: 0
  1178                           ; Switch size 1, requested type "simple"
  1179                           ; Number of cases is 3, Range of values is 0 to 2
  1180                           ; switch strategies available:
  1181                           ; Name         Instructions Cycles
  1182                           ; simple_byte           10     6 (average)
  1183                           ;	Chosen strategy is simple_byte
  1184  001260  51A4               	movf	??_canMove& (0+255),w,b
  1185  001262  0A00               	xorlw	0	; case 0
  1186  001264  B4D8               	btfsc	status,2,c
  1187  001266  EF11  F009         	goto	l245
  1188  00126A  0A01               	xorlw	1	; case 1
  1189  00126C  B4D8               	btfsc	status,2,c
  1190  00126E  EF1B  F009         	goto	l248
  1191  001272  0A03               	xorlw	3	; case 2
  1192  001274  B4D8               	btfsc	status,2,c
  1193  001276  EF1B  F009         	goto	l248
  1194  00127A  EF3F  F009         	goto	l2398
  1195  00127E                     l2398:
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;main.c: 464:     return (left < 4 && right < 4 && top < 8 && bot < 8);
  1199  00127E  0E00               	movlw	0
  1200  001280  6FAA               	movwf	_canMove$263& (0+255),b
  1201  001282                     
  1202                           ; BSR set to: 0
  1203  001282  0E04               	movlw	4
  1204  001284  61A6               	cpfslt	canMove@left& (0+255),b
  1205  001286  EF47  F009         	goto	u1801
  1206  00128A  EF49  F009         	goto	u1800
  1207  00128E                     u1801:
  1208  00128E  EF63  F009         	goto	l250
  1209  001292                     u1800:
  1210  001292                     
  1211                           ; BSR set to: 0
  1212  001292  0E04               	movlw	4
  1213  001294  61A7               	cpfslt	canMove@right& (0+255),b
  1214  001296  EF4F  F009         	goto	u1811
  1215  00129A  EF51  F009         	goto	u1810
  1216  00129E                     u1811:
  1217  00129E  EF63  F009         	goto	l250
  1218  0012A2                     u1810:
  1219  0012A2                     
  1220                           ; BSR set to: 0
  1221  0012A2  0E08               	movlw	8
  1222  0012A4  61A8               	cpfslt	canMove@top& (0+255),b
  1223  0012A6  EF57  F009         	goto	u1821
  1224  0012AA  EF59  F009         	goto	u1820
  1225  0012AE                     u1821:
  1226  0012AE  EF63  F009         	goto	l250
  1227  0012B2                     u1820:
  1228  0012B2                     
  1229                           ; BSR set to: 0
  1230  0012B2  0E08               	movlw	8
  1231  0012B4  61A9               	cpfslt	canMove@bot& (0+255),b
  1232  0012B6  EF5F  F009         	goto	u1831
  1233  0012BA  EF61  F009         	goto	u1830
  1234  0012BE                     u1831:
  1235  0012BE  EF63  F009         	goto	l250
  1236  0012C2                     u1830:
  1237  0012C2                     
  1238                           ; BSR set to: 0
  1239  0012C2  0E01               	movlw	1
  1240  0012C4  6FAA               	movwf	_canMove$263& (0+255),b
  1241  0012C6                     l250:
  1242                           
  1243                           ; BSR set to: 0
  1244  0012C6  51AA               	movf	_canMove$263& (0+255),w,b
  1245  0012C8                     
  1246                           ; BSR set to: 0
  1247  0012C8  0012               	return		;funcret
  1248  0012CA                     __end_of_canMove:
  1249                           	callstack 0
  1250                           
  1251 ;; *************** function _init *****************
  1252 ;; Defined at:
  1253 ;;		line 156 in file "main.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  j               2    8[BANK0 ] int 
  1258 ;;  i               2   10[BANK0 ] int 
  1259 ;;  i               2    6[BANK0 ] int 
  1260 ;;  4606            2    4[BANK0 ] struct Position
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;Total ram usage:       12 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:    5
  1277 ;; This function calls:
  1278 ;;		Nothing
  1279 ;; This function is called by:
  1280 ;;		_main
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text8
  1285  000FF6                     __ptext8:
  1286                           	callstack 0
  1287  000FF6                     _init:
  1288                           	callstack 25
  1289  000FF6                     
  1290                           ;main.c: 190:     position = (Position){0, 0};;main.c: 157:     INTCON = (1 << 5) | (1 <
      +                          < 3);
  1291  000FF6  0E28               	movlw	40
  1292  000FF8  6EF2               	movwf	242,c	;volatile
  1293                           
  1294                           ;main.c: 158:     T0CON = (1 << 3) | (1 << 7);
  1295  000FFA  0E88               	movlw	136
  1296  000FFC  6ED5               	movwf	213,c	;volatile
  1297                           
  1298                           ;main.c: 160:     for (int i = 0; i < 4; i++) {
  1299  000FFE  0E00               	movlw	0
  1300  001000  0100               	movlb	0	; () banked
  1301  001002  6FA9               	movwf	(init@i+1)& (0+255),b
  1302  001004  0E00               	movlw	0
  1303  001006  6FA8               	movwf	init@i& (0+255),b
  1304  001008                     l2500:
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;main.c: 161:         for (int j = 0; j < 8; j++) {
  1308  001008  0E00               	movlw	0
  1309  00100A  6FAB               	movwf	(init@j+1)& (0+255),b
  1310  00100C  0E00               	movlw	0
  1311  00100E  6FAA               	movwf	init@j& (0+255),b
  1312  001010                     l2506:
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;main.c: 162:             grid[i][j] = LED_OFF;
  1316  001010  C0A8  F0A2         	movff	init@i,??_init
  1317  001014  C0A9  F0A3         	movff	init@i+1,??_init+1
  1318  001018  90D8               	bcf	status,0,c
  1319  00101A  37A2               	rlcf	??_init& (0+255),f,b
  1320  00101C  37A3               	rlcf	(??_init+1)& (0+255),f,b
  1321  00101E  90D8               	bcf	status,0,c
  1322  001020  37A2               	rlcf	??_init& (0+255),f,b
  1323  001022  37A3               	rlcf	(??_init+1)& (0+255),f,b
  1324  001024  90D8               	bcf	status,0,c
  1325  001026  37A2               	rlcf	??_init& (0+255),f,b
  1326  001028  37A3               	rlcf	(??_init+1)& (0+255),f,b
  1327  00102A  0E60               	movlw	low _grid
  1328  00102C  6FA4               	movwf	(??_init+2)& (0+255),b
  1329  00102E  0E00               	movlw	high _grid
  1330  001030  6FA5               	movwf	(??_init+3)& (0+255),b
  1331  001032  51A2               	movf	??_init& (0+255),w,b
  1332  001034  27A4               	addwf	(??_init+2)& (0+255),f,b
  1333  001036  51A3               	movf	(??_init+1)& (0+255),w,b
  1334  001038  23A5               	addwfc	(??_init+3)& (0+255),f,b
  1335  00103A  51AA               	movf	init@j& (0+255),w,b
  1336  00103C  25A4               	addwf	(??_init+2)& (0+255),w,b
  1337  00103E  6ED9               	movwf	fsr2l,c
  1338  001040  51AB               	movf	(init@j+1)& (0+255),w,b
  1339  001042  21A5               	addwfc	(??_init+3)& (0+255),w,b
  1340  001044  6EDA               	movwf	fsr2h,c
  1341  001046  0E00               	movlw	0
  1342  001048  6EDF               	movwf	indf2,c
  1343  00104A                     
  1344                           ; BSR set to: 0
  1345                           ;main.c: 163:         }
  1346  00104A  4BAA               	infsnz	init@j& (0+255),f,b
  1347  00104C  2BAB               	incf	(init@j+1)& (0+255),f,b
  1348  00104E                     
  1349                           ; BSR set to: 0
  1350  00104E  BFAB               	btfsc	(init@j+1)& (0+255),7,b
  1351  001050  EF33  F008         	goto	u1981
  1352  001054  51AB               	movf	(init@j+1)& (0+255),w,b
  1353  001056  E109               	bnz	u1980
  1354  001058  0E08               	movlw	8
  1355  00105A  5DAA               	subwf	init@j& (0+255),w,b
  1356  00105C  A0D8               	btfss	status,0,c
  1357  00105E  EF33  F008         	goto	u1981
  1358  001062  EF35  F008         	goto	u1980
  1359  001066                     u1981:
  1360  001066  EF08  F008         	goto	l2506
  1361  00106A                     u1980:
  1362  00106A                     
  1363                           ; BSR set to: 0
  1364                           ;main.c: 164:     }
  1365  00106A  4BA8               	infsnz	init@i& (0+255),f,b
  1366  00106C  2BA9               	incf	(init@i+1)& (0+255),f,b
  1367  00106E                     
  1368                           ; BSR set to: 0
  1369  00106E  BFA9               	btfsc	(init@i+1)& (0+255),7,b
  1370  001070  EF43  F008         	goto	u1991
  1371  001074  51A9               	movf	(init@i+1)& (0+255),w,b
  1372  001076  E109               	bnz	u1990
  1373  001078  0E04               	movlw	4
  1374  00107A  5DA8               	subwf	init@i& (0+255),w,b
  1375  00107C  A0D8               	btfss	status,0,c
  1376  00107E  EF43  F008         	goto	u1991
  1377  001082  EF45  F008         	goto	u1990
  1378  001086                     u1991:
  1379  001086  EF04  F008         	goto	l2500
  1380  00108A                     u1990:
  1381  00108A                     
  1382                           ; BSR set to: 0
  1383                           ;main.c: 166:     blink_counter = 0;
  1384  00108A  0E00               	movlw	0
  1385  00108C  6E1E               	movwf	(_blink_counter+1)^0,c
  1386  00108E  0E00               	movlw	0
  1387  001090  6E1D               	movwf	_blink_counter^0,c
  1388                           
  1389                           ;main.c: 167:     counter250ms = 0;
  1390  001092  0E00               	movlw	0
  1391  001094  6E22               	movwf	_counter250ms^0,c
  1392                           
  1393                           ;main.c: 169:     TRISA = 0b00001111;
  1394  001096  0E0F               	movlw	15
  1395  001098  6E92               	movwf	146,c	;volatile
  1396                           
  1397                           ;main.c: 170:     TRISB = 0b01100000;
  1398  00109A  0E60               	movlw	96
  1399  00109C  6E93               	movwf	147,c	;volatile
  1400                           
  1401                           ;main.c: 171:     TRISC = 0x00;
  1402  00109E  0E00               	movlw	0
  1403  0010A0  6E94               	movwf	148,c	;volatile
  1404                           
  1405                           ;main.c: 172:     TRISD = 0x00;
  1406  0010A2  0E00               	movlw	0
  1407  0010A4  6E95               	movwf	149,c	;volatile
  1408                           
  1409                           ;main.c: 173:     TRISE = 0x00;
  1410  0010A6  0E00               	movlw	0
  1411  0010A8  6E96               	movwf	150,c	;volatile
  1412                           
  1413                           ;main.c: 174:     TRISF = 0x00;
  1414  0010AA  0E00               	movlw	0
  1415  0010AC  6E97               	movwf	151,c	;volatile
  1416                           
  1417                           ;main.c: 175:     TRISH = 0x00;
  1418  0010AE  0E00               	movlw	0
  1419  0010B0  6E99               	movwf	153,c	;volatile
  1420                           
  1421                           ;main.c: 176:     TRISJ = 0x00;
  1422  0010B2  0E00               	movlw	0
  1423  0010B4  6E9A               	movwf	154,c	;volatile
  1424                           
  1425                           ;main.c: 177:     PORTA = 0;
  1426  0010B6  0E00               	movlw	0
  1427  0010B8  6E80               	movwf	128,c	;volatile
  1428                           
  1429                           ;main.c: 178:     PORTB = 0;
  1430  0010BA  0E00               	movlw	0
  1431  0010BC  6E81               	movwf	129,c	;volatile
  1432                           
  1433                           ;main.c: 179:     PORTC = 0;
  1434  0010BE  0E00               	movlw	0
  1435  0010C0  6E82               	movwf	130,c	;volatile
  1436                           
  1437                           ;main.c: 180:     PORTD = 0;
  1438  0010C2  0E00               	movlw	0
  1439  0010C4  6E83               	movwf	131,c	;volatile
  1440                           
  1441                           ;main.c: 181:     PORTE = 0;
  1442  0010C6  0E00               	movlw	0
  1443  0010C8  6E84               	movwf	132,c	;volatile
  1444                           
  1445                           ;main.c: 182:     PORTF = 0;
  1446  0010CA  0E00               	movlw	0
  1447  0010CC  6E85               	movwf	133,c	;volatile
  1448                           
  1449                           ;main.c: 183:     PORTH = 0b00001111;
  1450  0010CE  0E0F               	movlw	15
  1451  0010D0  6E87               	movwf	135,c	;volatile
  1452                           
  1453                           ;main.c: 184:     PORTJ = 0b00011111;
  1454  0010D2  0E1F               	movlw	31
  1455  0010D4  6E88               	movwf	136,c	;volatile
  1456                           
  1457                           ;main.c: 186:     TMR0L = 0xCE;
  1458  0010D6  0ECE               	movlw	206
  1459  0010D8  6ED6               	movwf	214,c	;volatile
  1460                           
  1461                           ;main.c: 187:     TMR0H = 0x3C;
  1462  0010DA  0E3C               	movlw	60
  1463  0010DC  6ED7               	movwf	215,c	;volatile
  1464                           
  1465                           ;main.c: 189:     type = 0;
  1466  0010DE  0E00               	movlw	0
  1467  0010E0  6E20               	movwf	_type^0,c
  1468  0010E2                     
  1469                           ; BSR set to: 0
  1470                           ;main.c: 190:     position = (Position){0, 0};
  1471  0010E2  C019  F0A6         	movff	init@F4605,init@4606
  1472  0010E6  C01A  F0A7         	movff	init@F4605+1,init@4606+1
  1473  0010EA                     
  1474                           ; BSR set to: 0
  1475  0010EA  C0A6  F01B         	movff	init@4606,_position
  1476  0010EE  C0A7  F01C         	movff	init@4606+1,_position+1
  1477                           
  1478                           ;main.c: 191:     rotation = 0;
  1479  0010F2  0E00               	movlw	0
  1480  0010F4  6E21               	movwf	_rotation^0,c
  1481                           
  1482                           ;main.c: 193:     for (int i=0; i<ARROW_KEY_COUNT; i++)
  1483  0010F6  0E00               	movlw	0
  1484  0010F8  6FAD               	movwf	(init@i_117+1)& (0+255),b
  1485  0010FA  0E00               	movlw	0
  1486  0010FC  6FAC               	movwf	init@i_117& (0+255),b
  1487  0010FE                     l2526:
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;main.c: 194:     {;main.c: 195:         PORTA_previous[i] = 0;
  1491  0010FE  0E0B               	movlw	low _PORTA_previous
  1492  001100  25AC               	addwf	init@i_117& (0+255),w,b
  1493  001102  6ED9               	movwf	fsr2l,c
  1494  001104  0E00               	movlw	high _PORTA_previous
  1495  001106  21AD               	addwfc	(init@i_117+1)& (0+255),w,b
  1496  001108  6EDA               	movwf	fsr2h,c
  1497  00110A  0E00               	movlw	0
  1498  00110C  6EDF               	movwf	indf2,c
  1499                           
  1500                           ;main.c: 196:         PORTA_current[i] = 0;
  1501  00110E  0E07               	movlw	low _PORTA_current
  1502  001110  25AC               	addwf	init@i_117& (0+255),w,b
  1503  001112  6ED9               	movwf	fsr2l,c
  1504  001114  0E00               	movlw	high _PORTA_current
  1505  001116  21AD               	addwfc	(init@i_117+1)& (0+255),w,b
  1506  001118  6EDA               	movwf	fsr2h,c
  1507  00111A  0E00               	movlw	0
  1508  00111C  6EDF               	movwf	indf2,c
  1509  00111E                     
  1510                           ; BSR set to: 0
  1511                           ;main.c: 197:     }
  1512  00111E  4BAC               	infsnz	init@i_117& (0+255),f,b
  1513  001120  2BAD               	incf	(init@i_117+1)& (0+255),f,b
  1514  001122                     
  1515                           ; BSR set to: 0
  1516  001122  BFAD               	btfsc	(init@i_117+1)& (0+255),7,b
  1517  001124  EF9D  F008         	goto	u2001
  1518  001128  51AD               	movf	(init@i_117+1)& (0+255),w,b
  1519  00112A  E109               	bnz	u2000
  1520  00112C  0E04               	movlw	4
  1521  00112E  5DAC               	subwf	init@i_117& (0+255),w,b
  1522  001130  A0D8               	btfss	status,0,c
  1523  001132  EF9D  F008         	goto	u2001
  1524  001136  EF9F  F008         	goto	u2000
  1525  00113A                     u2001:
  1526  00113A  EF7F  F008         	goto	l2526
  1527  00113E                     u2000:
  1528  00113E                     
  1529                           ; BSR set to: 0
  1530  00113E  0012               	return		;funcret
  1531  001140                     __end_of_init:
  1532                           	callstack 0
  1533                           
  1534 ;; *************** function _draw *****************
  1535 ;; Defined at:
  1536 ;;		line 284 in file "main.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  4684            2   45[BANK0 ] struct Position
  1541 ;;  4682            2   43[BANK0 ] struct Position
  1542 ;;  4680            2   41[BANK0 ] struct Position
  1543 ;;  4678            2   39[BANK0 ] struct Position
  1544 ;;  4676            2   37[BANK0 ] struct Position
  1545 ;;  4674            2   35[BANK0 ] struct Position
  1546 ;;  4672            2   33[BANK0 ] struct Position
  1547 ;;  4670            2   31[BANK0 ] struct Position
  1548 ;;  4668            2   29[BANK0 ] struct Position
  1549 ;;  4666            2   27[BANK0 ] struct Position
  1550 ;;  4664            2   25[BANK0 ] struct Position
  1551 ;;  4662            2   23[BANK0 ] struct Position
  1552 ;;  4660            2   21[BANK0 ] struct Position
  1553 ;;  4658            2   19[BANK0 ] struct Position
  1554 ;;  4656            2   17[BANK0 ] struct Position
  1555 ;;  4654            2   15[BANK0 ] struct Position
  1556 ;;  4652            2   13[BANK0 ] struct Position
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;      Totals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;Total ram usage:       42 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; Hardware stack levels required when called:    6
  1573 ;; This function calls:
  1574 ;;		_setLed
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text9
  1581  000660                     __ptext9:
  1582                           	callstack 0
  1583  000660                     _draw:
  1584                           	callstack 24
  1585  000660                     
  1586                           ;main.c: 295:             }, blink_on);;main.c: 303:             }, blink_on);;main.c: 3
      +                          07:             }, blink_on);;main.c: 311:             }, blink_on);;main.c: 315:       
      +                                }, blink_on);;main.c: 325:                     }, blink_on);;main.c: 329:         
      +                                      }, blink_on);;main.c: 333:                     }, blink_on);;main.c: 339:   
      +                                            }, blink_on);;main.c: 343:                     }, blink_on);;main.c: 3
      +                          47:                     }, blink_on);;main.c: 353:                     }, blink_on);
  1587  000660  0100               	movlb	0	; () banked
  1588  000662  6BA7               	clrf	??_draw& (0+255),b
  1589  000664  A167               	btfss	(_grid+7)& (0+255),0,b
  1590  000666  D001               	bra	u2015
  1591  000668  8FA7               	bsf	??_draw& (0+255),7,b
  1592  00066A                     u2015:
  1593  00066A  C066  F0A8         	movff	_grid+6,??_draw+1
  1594  00066E  0E06               	movlw	6
  1595  000670  6FA9               	movwf	(??_draw+2)& (0+255),b
  1596  000672                     u2025:
  1597  000672  90D8               	bcf	status,0,c
  1598  000674  37A8               	rlcf	(??_draw+1)& (0+255),f,b
  1599  000676  2FA9               	decfsz	(??_draw+2)& (0+255),f,b
  1600  000678  EF39  F003         	goto	u2025
  1601  00067C  C065  F0AA         	movff	_grid+5,??_draw+3
  1602  000680  0E05               	movlw	5
  1603  000682  6FAB               	movwf	(??_draw+4)& (0+255),b
  1604  000684                     u2035:
  1605  000684  90D8               	bcf	status,0,c
  1606  000686  37AA               	rlcf	(??_draw+3)& (0+255),f,b
  1607  000688  2FAB               	decfsz	(??_draw+4)& (0+255),f,b
  1608  00068A  EF42  F003         	goto	u2035
  1609  00068E  C064  F0AC         	movff	_grid+4,??_draw+5
  1610  000692  3BAC               	swapf	(??_draw+5)& (0+255),f,b
  1611  000694  0EF0               	movlw	240
  1612  000696  17AC               	andwf	(??_draw+5)& (0+255),f,b
  1613  000698  C063  F0AD         	movff	_grid+3,??_draw+6
  1614  00069C  90D8               	bcf	status,0,c
  1615  00069E  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1616  0006A0  90D8               	bcf	status,0,c
  1617  0006A2  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1618  0006A4  90D8               	bcf	status,0,c
  1619  0006A6  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1620  0006A8  C062  F0AE         	movff	_grid+2,??_draw+7
  1621  0006AC  90D8               	bcf	status,0,c
  1622  0006AE  37AE               	rlcf	(??_draw+7)& (0+255),f,b
  1623  0006B0  90D8               	bcf	status,0,c
  1624  0006B2  37AE               	rlcf	(??_draw+7)& (0+255),f,b
  1625  0006B4  5161               	movf	(_grid+1)& (0+255),w,b
  1626  0006B6  2561               	addwf	(_grid+1)& (0+255),w,b
  1627  0006B8  11AE               	iorwf	(??_draw+7)& (0+255),w,b
  1628  0006BA  11AD               	iorwf	(??_draw+6)& (0+255),w,b
  1629  0006BC  11AC               	iorwf	(??_draw+5)& (0+255),w,b
  1630  0006BE  11AA               	iorwf	(??_draw+3)& (0+255),w,b
  1631  0006C0  11A8               	iorwf	(??_draw+1)& (0+255),w,b
  1632  0006C2  11A7               	iorwf	??_draw& (0+255),w,b
  1633  0006C4  1160               	iorwf	_grid& (0+255),w,b
  1634  0006C6  6E8B               	movwf	139,c	;volatile
  1635                           
  1636                           ;main.c: 286:     LATD = (unsigned char) ((grid[1][0] << 0) | (grid[1][1] << 1) | (grid[
      +                          1][2] << 2) | (grid[1][3] << 3) | (grid[1][4] << 4) | (grid[1][5] << 5) | (grid[1][6] <<
      +                           6) | (grid[1][7] << 7));
  1637  0006C8  6BA7               	clrf	??_draw& (0+255),b
  1638  0006CA  A16F               	btfss	(_grid+15)& (0+255),0,b
  1639  0006CC  D001               	bra	u2045
  1640  0006CE  8FA7               	bsf	??_draw& (0+255),7,b
  1641  0006D0                     u2045:
  1642  0006D0  C06E  F0A8         	movff	_grid+14,??_draw+1
  1643  0006D4  0E06               	movlw	6
  1644  0006D6  6FA9               	movwf	(??_draw+2)& (0+255),b
  1645  0006D8                     u2055:
  1646  0006D8  90D8               	bcf	status,0,c
  1647  0006DA  37A8               	rlcf	(??_draw+1)& (0+255),f,b
  1648  0006DC  2FA9               	decfsz	(??_draw+2)& (0+255),f,b
  1649  0006DE  EF6C  F003         	goto	u2055
  1650  0006E2  C06D  F0AA         	movff	_grid+13,??_draw+3
  1651  0006E6  0E05               	movlw	5
  1652  0006E8  6FAB               	movwf	(??_draw+4)& (0+255),b
  1653  0006EA                     u2065:
  1654  0006EA  90D8               	bcf	status,0,c
  1655  0006EC  37AA               	rlcf	(??_draw+3)& (0+255),f,b
  1656  0006EE  2FAB               	decfsz	(??_draw+4)& (0+255),f,b
  1657  0006F0  EF75  F003         	goto	u2065
  1658  0006F4  C06C  F0AC         	movff	_grid+12,??_draw+5
  1659  0006F8  3BAC               	swapf	(??_draw+5)& (0+255),f,b
  1660  0006FA  0EF0               	movlw	240
  1661  0006FC  17AC               	andwf	(??_draw+5)& (0+255),f,b
  1662  0006FE  C06B  F0AD         	movff	_grid+11,??_draw+6
  1663  000702  90D8               	bcf	status,0,c
  1664  000704  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1665  000706  90D8               	bcf	status,0,c
  1666  000708  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1667  00070A  90D8               	bcf	status,0,c
  1668  00070C  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1669  00070E  C06A  F0AE         	movff	_grid+10,??_draw+7
  1670  000712  90D8               	bcf	status,0,c
  1671  000714  37AE               	rlcf	(??_draw+7)& (0+255),f,b
  1672  000716  90D8               	bcf	status,0,c
  1673  000718  37AE               	rlcf	(??_draw+7)& (0+255),f,b
  1674  00071A  5169               	movf	(_grid+9)& (0+255),w,b
  1675  00071C  2569               	addwf	(_grid+9)& (0+255),w,b
  1676  00071E  11AE               	iorwf	(??_draw+7)& (0+255),w,b
  1677  000720  11AD               	iorwf	(??_draw+6)& (0+255),w,b
  1678  000722  11AC               	iorwf	(??_draw+5)& (0+255),w,b
  1679  000724  11AA               	iorwf	(??_draw+3)& (0+255),w,b
  1680  000726  11A8               	iorwf	(??_draw+1)& (0+255),w,b
  1681  000728  11A7               	iorwf	??_draw& (0+255),w,b
  1682  00072A  1168               	iorwf	(_grid+8)& (0+255),w,b
  1683  00072C  6E8C               	movwf	140,c	;volatile
  1684                           
  1685                           ;main.c: 287:     LATE = (unsigned char) ((grid[2][0] << 0) | (grid[2][1] << 1) | (grid[
      +                          2][2] << 2) | (grid[2][3] << 3) | (grid[2][4] << 4) | (grid[2][5] << 5) | (grid[2][6] <<
      +                           6) | (grid[2][7] << 7));
  1686  00072E  6BA7               	clrf	??_draw& (0+255),b
  1687  000730  A177               	btfss	(_grid+23)& (0+255),0,b
  1688  000732  D001               	bra	u2075
  1689  000734  8FA7               	bsf	??_draw& (0+255),7,b
  1690  000736                     u2075:
  1691  000736  C076  F0A8         	movff	_grid+22,??_draw+1
  1692  00073A  0E06               	movlw	6
  1693  00073C  6FA9               	movwf	(??_draw+2)& (0+255),b
  1694  00073E                     u2085:
  1695  00073E  90D8               	bcf	status,0,c
  1696  000740  37A8               	rlcf	(??_draw+1)& (0+255),f,b
  1697  000742  2FA9               	decfsz	(??_draw+2)& (0+255),f,b
  1698  000744  EF9F  F003         	goto	u2085
  1699  000748  C075  F0AA         	movff	_grid+21,??_draw+3
  1700  00074C  0E05               	movlw	5
  1701  00074E  6FAB               	movwf	(??_draw+4)& (0+255),b
  1702  000750                     u2095:
  1703  000750  90D8               	bcf	status,0,c
  1704  000752  37AA               	rlcf	(??_draw+3)& (0+255),f,b
  1705  000754  2FAB               	decfsz	(??_draw+4)& (0+255),f,b
  1706  000756  EFA8  F003         	goto	u2095
  1707  00075A  C074  F0AC         	movff	_grid+20,??_draw+5
  1708  00075E  3BAC               	swapf	(??_draw+5)& (0+255),f,b
  1709  000760  0EF0               	movlw	240
  1710  000762  17AC               	andwf	(??_draw+5)& (0+255),f,b
  1711  000764  C073  F0AD         	movff	_grid+19,??_draw+6
  1712  000768  90D8               	bcf	status,0,c
  1713  00076A  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1714  00076C  90D8               	bcf	status,0,c
  1715  00076E  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1716  000770  90D8               	bcf	status,0,c
  1717  000772  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1718  000774  C072  F0AE         	movff	_grid+18,??_draw+7
  1719  000778  90D8               	bcf	status,0,c
  1720  00077A  37AE               	rlcf	(??_draw+7)& (0+255),f,b
  1721  00077C  90D8               	bcf	status,0,c
  1722  00077E  37AE               	rlcf	(??_draw+7)& (0+255),f,b
  1723  000780  5171               	movf	(_grid+17)& (0+255),w,b
  1724  000782  2571               	addwf	(_grid+17)& (0+255),w,b
  1725  000784  11AE               	iorwf	(??_draw+7)& (0+255),w,b
  1726  000786  11AD               	iorwf	(??_draw+6)& (0+255),w,b
  1727  000788  11AC               	iorwf	(??_draw+5)& (0+255),w,b
  1728  00078A  11AA               	iorwf	(??_draw+3)& (0+255),w,b
  1729  00078C  11A8               	iorwf	(??_draw+1)& (0+255),w,b
  1730  00078E  11A7               	iorwf	??_draw& (0+255),w,b
  1731  000790  1170               	iorwf	(_grid+16)& (0+255),w,b
  1732  000792  6E8D               	movwf	141,c	;volatile
  1733                           
  1734                           ;main.c: 288:     LATF = (unsigned char) ((grid[3][0] << 0) | (grid[3][1] << 1) | (grid[
      +                          3][2] << 2) | (grid[3][3] << 3) | (grid[3][4] << 4) | (grid[3][5] << 5) | (grid[3][6] <<
      +                           6) | (grid[3][7] << 7));
  1735  000794  6BA7               	clrf	??_draw& (0+255),b
  1736  000796  A17F               	btfss	(_grid+31)& (0+255),0,b
  1737  000798  D001               	bra	u2105
  1738  00079A  8FA7               	bsf	??_draw& (0+255),7,b
  1739  00079C                     u2105:
  1740  00079C  C07E  F0A8         	movff	_grid+30,??_draw+1
  1741  0007A0  0E06               	movlw	6
  1742  0007A2  6FA9               	movwf	(??_draw+2)& (0+255),b
  1743  0007A4                     u2115:
  1744  0007A4  90D8               	bcf	status,0,c
  1745  0007A6  37A8               	rlcf	(??_draw+1)& (0+255),f,b
  1746  0007A8  2FA9               	decfsz	(??_draw+2)& (0+255),f,b
  1747  0007AA  EFD2  F003         	goto	u2115
  1748  0007AE  C07D  F0AA         	movff	_grid+29,??_draw+3
  1749  0007B2  0E05               	movlw	5
  1750  0007B4  6FAB               	movwf	(??_draw+4)& (0+255),b
  1751  0007B6                     u2125:
  1752  0007B6  90D8               	bcf	status,0,c
  1753  0007B8  37AA               	rlcf	(??_draw+3)& (0+255),f,b
  1754  0007BA  2FAB               	decfsz	(??_draw+4)& (0+255),f,b
  1755  0007BC  EFDB  F003         	goto	u2125
  1756  0007C0  C07C  F0AC         	movff	_grid+28,??_draw+5
  1757  0007C4  3BAC               	swapf	(??_draw+5)& (0+255),f,b
  1758  0007C6  0EF0               	movlw	240
  1759  0007C8  17AC               	andwf	(??_draw+5)& (0+255),f,b
  1760  0007CA  C07B  F0AD         	movff	_grid+27,??_draw+6
  1761  0007CE  90D8               	bcf	status,0,c
  1762  0007D0  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1763  0007D2  90D8               	bcf	status,0,c
  1764  0007D4  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1765  0007D6  90D8               	bcf	status,0,c
  1766  0007D8  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1767  0007DA  C07A  F0AE         	movff	_grid+26,??_draw+7
  1768  0007DE  90D8               	bcf	status,0,c
  1769  0007E0  37AE               	rlcf	(??_draw+7)& (0+255),f,b
  1770  0007E2  90D8               	bcf	status,0,c
  1771  0007E4  37AE               	rlcf	(??_draw+7)& (0+255),f,b
  1772  0007E6  5179               	movf	(_grid+25)& (0+255),w,b
  1773  0007E8  2579               	addwf	(_grid+25)& (0+255),w,b
  1774  0007EA  11AE               	iorwf	(??_draw+7)& (0+255),w,b
  1775  0007EC  11AD               	iorwf	(??_draw+6)& (0+255),w,b
  1776  0007EE  11AC               	iorwf	(??_draw+5)& (0+255),w,b
  1777  0007F0  11AA               	iorwf	(??_draw+3)& (0+255),w,b
  1778  0007F2  11A8               	iorwf	(??_draw+1)& (0+255),w,b
  1779  0007F4  11A7               	iorwf	??_draw& (0+255),w,b
  1780  0007F6  1178               	iorwf	(_grid+24)& (0+255),w,b
  1781  0007F8  6E8E               	movwf	142,c	;volatile
  1782                           
  1783                           ;main.c: 290:     switch (type) {
  1784  0007FA  EF3B  F005         	goto	l2628
  1785  0007FE                     l211:
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;main.c: 292:         {;main.c: 293:             setLed((Position) {
  1789  0007FE  C0A0  F0AF         	movff	draw@F4651,draw@4652
  1790  000802  C0A1  F0B0         	movff	draw@F4651+1,draw@4652+1
  1791  000806  C01B  F0AF         	movff	_position,draw@4652
  1792  00080A  C01C  F0B0         	movff	_position+1,draw@4652+1
  1793  00080E                     
  1794                           ; BSR set to: 0
  1795  00080E  C0AF  F0A2         	movff	draw@4652,setLed@pos
  1796  000812  C0B0  F0A3         	movff	draw@4652+1,setLed@pos+1
  1797  000816  C043  F0A4         	movff	_blink_on,setLed@value
  1798  00081A  EC2E  F007         	call	_setLed	;wreg free
  1799                           
  1800                           ;main.c: 296:             break;
  1801  00081E  EF54  F005         	goto	l221
  1802  000822                     l213:
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;main.c: 299:         {;main.c: 301:             setLed((Position) {
  1806  000822  C09E  F0B1         	movff	draw@F4653,draw@4654
  1807  000826  C09F  F0B2         	movff	draw@F4653+1,draw@4654+1
  1808  00082A  C01B  F0B1         	movff	_position,draw@4654
  1809  00082E  C01C  F0B2         	movff	_position+1,draw@4654+1
  1810  000832                     
  1811                           ; BSR set to: 0
  1812  000832  C0B1  F0A2         	movff	draw@4654,setLed@pos
  1813  000836  C0B2  F0A3         	movff	draw@4654+1,setLed@pos+1
  1814  00083A  C043  F0A4         	movff	_blink_on,setLed@value
  1815  00083E  EC2E  F007         	call	_setLed	;wreg free
  1816  000842                     
  1817                           ;main.c: 305:             setLed((Position) {
  1818  000842  C09C  F0B3         	movff	draw@F4655,draw@4656
  1819  000846  C09D  F0B4         	movff	draw@F4655+1,draw@4656+1
  1820  00084A  281B               	incf	_position^0,w,c
  1821  00084C  0100               	movlb	0	; () banked
  1822  00084E  6FB3               	movwf	draw@4656& (0+255),b
  1823  000850                     
  1824                           ; BSR set to: 0
  1825  000850  C01C  F0B4         	movff	_position+1,draw@4656+1
  1826  000854                     
  1827                           ; BSR set to: 0
  1828  000854  C0B3  F0A2         	movff	draw@4656,setLed@pos
  1829  000858  C0B4  F0A3         	movff	draw@4656+1,setLed@pos+1
  1830  00085C  C043  F0A4         	movff	_blink_on,setLed@value
  1831  000860  EC2E  F007         	call	_setLed	;wreg free
  1832  000864                     
  1833                           ;main.c: 309:             setLed((Position) {
  1834  000864  C09A  F0B5         	movff	draw@F4657,draw@4658
  1835  000868  C09B  F0B6         	movff	draw@F4657+1,draw@4658+1
  1836  00086C  C01B  F0B5         	movff	_position,draw@4658
  1837  000870  281C               	incf	(_position+1)^0,w,c
  1838  000872  0100               	movlb	0	; () banked
  1839  000874  6FB6               	movwf	(draw@4658+1)& (0+255),b
  1840  000876                     
  1841                           ; BSR set to: 0
  1842  000876  C0B5  F0A2         	movff	draw@4658,setLed@pos
  1843  00087A  C0B6  F0A3         	movff	draw@4658+1,setLed@pos+1
  1844  00087E  C043  F0A4         	movff	_blink_on,setLed@value
  1845  000882  EC2E  F007         	call	_setLed	;wreg free
  1846  000886                     
  1847                           ;main.c: 313:             setLed((Position) {
  1848  000886  C098  F0B7         	movff	draw@F4659,draw@4660
  1849  00088A  C099  F0B8         	movff	draw@F4659+1,draw@4660+1
  1850  00088E  281B               	incf	_position^0,w,c
  1851  000890  0100               	movlb	0	; () banked
  1852  000892  6FB7               	movwf	draw@4660& (0+255),b
  1853  000894                     
  1854                           ; BSR set to: 0
  1855  000894  281C               	incf	(_position+1)^0,w,c
  1856  000896  6FB8               	movwf	(draw@4660+1)& (0+255),b
  1857  000898                     
  1858                           ; BSR set to: 0
  1859  000898  C0B7  F0A2         	movff	draw@4660,setLed@pos
  1860  00089C  C0B8  F0A3         	movff	draw@4660+1,setLed@pos+1
  1861  0008A0  C043  F0A4         	movff	_blink_on,setLed@value
  1862  0008A4  EC2E  F007         	call	_setLed	;wreg free
  1863                           
  1864                           ;main.c: 316:             break;
  1865  0008A8  EF54  F005         	goto	l221
  1866  0008AC                     l216:
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;main.c: 323:                     setLed((Position) {
  1870  0008AC  C096  F0B9         	movff	draw@F4661,draw@4662
  1871  0008B0  C097  F0BA         	movff	draw@F4661+1,draw@4662+1
  1872  0008B4  C01B  F0B9         	movff	_position,draw@4662
  1873  0008B8  C01C  F0BA         	movff	_position+1,draw@4662+1
  1874  0008BC                     
  1875                           ; BSR set to: 0
  1876  0008BC  C0B9  F0A2         	movff	draw@4662,setLed@pos
  1877  0008C0  C0BA  F0A3         	movff	draw@4662+1,setLed@pos+1
  1878  0008C4  C043  F0A4         	movff	_blink_on,setLed@value
  1879  0008C8  EC2E  F007         	call	_setLed	;wreg free
  1880  0008CC                     
  1881                           ;main.c: 327:                     setLed((Position) {
  1882  0008CC  C094  F0BB         	movff	draw@F4663,draw@4664
  1883  0008D0  C095  F0BC         	movff	draw@F4663+1,draw@4664+1
  1884  0008D4  281B               	incf	_position^0,w,c
  1885  0008D6  0100               	movlb	0	; () banked
  1886  0008D8  6FBB               	movwf	draw@4664& (0+255),b
  1887  0008DA                     
  1888                           ; BSR set to: 0
  1889  0008DA  C01C  F0BC         	movff	_position+1,draw@4664+1
  1890  0008DE                     
  1891                           ; BSR set to: 0
  1892  0008DE  C0BB  F0A2         	movff	draw@4664,setLed@pos
  1893  0008E2  C0BC  F0A3         	movff	draw@4664+1,setLed@pos+1
  1894  0008E6  C043  F0A4         	movff	_blink_on,setLed@value
  1895  0008EA  EC2E  F007         	call	_setLed	;wreg free
  1896  0008EE                     
  1897                           ;main.c: 331:                     setLed((Position) {
  1898  0008EE  C092  F0BD         	movff	draw@F4665,draw@4666
  1899  0008F2  C093  F0BE         	movff	draw@F4665+1,draw@4666+1
  1900  0008F6  281B               	incf	_position^0,w,c
  1901  0008F8  0100               	movlb	0	; () banked
  1902  0008FA  6FBD               	movwf	draw@4666& (0+255),b
  1903  0008FC  281C               	incf	(_position+1)^0,w,c
  1904  0008FE  6FBE               	movwf	(draw@4666+1)& (0+255),b
  1905  000900                     
  1906                           ; BSR set to: 0
  1907  000900  C0BD  F0A2         	movff	draw@4666,setLed@pos
  1908  000904  C0BE  F0A3         	movff	draw@4666+1,setLed@pos+1
  1909  000908  C043  F0A4         	movff	_blink_on,setLed@value
  1910  00090C  EC2E  F007         	call	_setLed	;wreg free
  1911                           
  1912                           ;main.c: 334:                     break;
  1913  000910  EF54  F005         	goto	l221
  1914  000914                     l218:
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;main.c: 337:                     setLed((Position) {
  1918  000914  C090  F0BF         	movff	draw@F4667,draw@4668
  1919  000918  C091  F0C0         	movff	draw@F4667+1,draw@4668+1
  1920  00091C  C01B  F0BF         	movff	_position,draw@4668
  1921  000920  C01C  F0C0         	movff	_position+1,draw@4668+1
  1922  000924                     
  1923                           ; BSR set to: 0
  1924  000924  C0BF  F0A2         	movff	draw@4668,setLed@pos
  1925  000928  C0C0  F0A3         	movff	draw@4668+1,setLed@pos+1
  1926  00092C  C043  F0A4         	movff	_blink_on,setLed@value
  1927  000930  EC2E  F007         	call	_setLed	;wreg free
  1928  000934                     
  1929                           ;main.c: 341:                     setLed((Position) {
  1930  000934  C08E  F0C1         	movff	draw@F4669,draw@4670
  1931  000938  C08F  F0C2         	movff	draw@F4669+1,draw@4670+1
  1932  00093C  281B               	incf	_position^0,w,c
  1933  00093E  0100               	movlb	0	; () banked
  1934  000940  6FC1               	movwf	draw@4670& (0+255),b
  1935  000942                     
  1936                           ; BSR set to: 0
  1937  000942  C01C  F0C2         	movff	_position+1,draw@4670+1
  1938  000946                     
  1939                           ; BSR set to: 0
  1940  000946  C0C1  F0A2         	movff	draw@4670,setLed@pos
  1941  00094A  C0C2  F0A3         	movff	draw@4670+1,setLed@pos+1
  1942  00094E  C043  F0A4         	movff	_blink_on,setLed@value
  1943  000952  EC2E  F007         	call	_setLed	;wreg free
  1944  000956                     
  1945                           ;main.c: 345:                     setLed((Position) {
  1946  000956  C08C  F0C3         	movff	draw@F4671,draw@4672
  1947  00095A  C08D  F0C4         	movff	draw@F4671+1,draw@4672+1
  1948  00095E  C01B  F0C3         	movff	_position,draw@4672
  1949  000962  281C               	incf	(_position+1)^0,w,c
  1950  000964  0100               	movlb	0	; () banked
  1951  000966  6FC4               	movwf	(draw@4672+1)& (0+255),b
  1952  000968                     
  1953                           ; BSR set to: 0
  1954  000968  C0C3  F0A2         	movff	draw@4672,setLed@pos
  1955  00096C  C0C4  F0A3         	movff	draw@4672+1,setLed@pos+1
  1956  000970  C043  F0A4         	movff	_blink_on,setLed@value
  1957  000974  EC2E  F007         	call	_setLed	;wreg free
  1958                           
  1959                           ;main.c: 348:                     break;
  1960  000978  EF54  F005         	goto	l221
  1961  00097C                     l219:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;main.c: 351:                     setLed((Position) {
  1965  00097C  C08A  F0C5         	movff	draw@F4673,draw@4674
  1966  000980  C08B  F0C6         	movff	draw@F4673+1,draw@4674+1
  1967  000984                     
  1968                           ; BSR set to: 0
  1969  000984  281B               	incf	_position^0,w,c
  1970  000986  6FC5               	movwf	draw@4674& (0+255),b
  1971  000988                     
  1972                           ; BSR set to: 0
  1973  000988  C01C  F0C6         	movff	_position+1,draw@4674+1
  1974  00098C                     
  1975                           ; BSR set to: 0
  1976  00098C  C0C5  F0A2         	movff	draw@4674,setLed@pos
  1977  000990  C0C6  F0A3         	movff	draw@4674+1,setLed@pos+1
  1978  000994  C043  F0A4         	movff	_blink_on,setLed@value
  1979  000998  EC2E  F007         	call	_setLed	;wreg free
  1980  00099C  C01B  F0C7         	movff	_position,draw@4676
  1981  0009A0  281C               	incf	(_position+1)^0,w,c
  1982  0009A2  0100               	movlb	0	; () banked
  1983  0009A4  6FC8               	movwf	(draw@4676+1)& (0+255),b
  1984  0009A6  C0C7  F0A2         	movff	draw@4676,setLed@pos
  1985  0009AA  C0C8  F0A3         	movff	draw@4676+1,setLed@pos+1
  1986  0009AE  C043  F0A4         	movff	_blink_on,setLed@value
  1987  0009B2  EC2E  F007         	call	_setLed	;wreg free
  1988  0009B6  281B               	incf	_position^0,w,c
  1989  0009B8  0100               	movlb	0	; () banked
  1990  0009BA  6FC9               	movwf	draw@4678& (0+255),b
  1991  0009BC                     
  1992                           ; BSR set to: 0
  1993  0009BC  281C               	incf	(_position+1)^0,w,c
  1994  0009BE  6FCA               	movwf	(draw@4678+1)& (0+255),b
  1995  0009C0  C0C9  F0A2         	movff	draw@4678,setLed@pos
  1996  0009C4  C0CA  F0A3         	movff	draw@4678+1,setLed@pos+1
  1997  0009C8  C043  F0A4         	movff	_blink_on,setLed@value
  1998  0009CC  EC2E  F007         	call	_setLed	;wreg free
  1999                           
  2000                           ;main.c: 362:                     break;
  2001  0009D0  EF54  F005         	goto	l221
  2002  0009D4                     l220:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;main.c: 365:                     setLed((Position) {
  2006  0009D4  C084  F0CB         	movff	draw@F4679,draw@4680
  2007  0009D8  C085  F0CC         	movff	draw@F4679+1,draw@4680+1
  2008  0009DC  C01B  F0CB         	movff	_position,draw@4680
  2009  0009E0  C01C  F0CC         	movff	_position+1,draw@4680+1
  2010  0009E4                     
  2011                           ; BSR set to: 0
  2012  0009E4  C0CB  F0A2         	movff	draw@4680,setLed@pos
  2013  0009E8  C0CC  F0A3         	movff	draw@4680+1,setLed@pos+1
  2014  0009EC  C043  F0A4         	movff	_blink_on,setLed@value
  2015  0009F0  EC2E  F007         	call	_setLed	;wreg free
  2016  0009F4                     
  2017                           ;main.c: 369:                     setLed((Position) {
  2018  0009F4  C082  F0CD         	movff	draw@F4681,draw@4682
  2019  0009F8  C083  F0CE         	movff	draw@F4681+1,draw@4682+1
  2020  0009FC  C01B  F0CD         	movff	_position,draw@4682
  2021  000A00  281C               	incf	(_position+1)^0,w,c
  2022  000A02  0100               	movlb	0	; () banked
  2023  000A04  6FCE               	movwf	(draw@4682+1)& (0+255),b
  2024  000A06                     
  2025                           ; BSR set to: 0
  2026  000A06  C0CD  F0A2         	movff	draw@4682,setLed@pos
  2027  000A0A  C0CE  F0A3         	movff	draw@4682+1,setLed@pos+1
  2028  000A0E  C043  F0A4         	movff	_blink_on,setLed@value
  2029  000A12  EC2E  F007         	call	_setLed	;wreg free
  2030  000A16                     
  2031                           ;main.c: 373:                     setLed((Position) {
  2032  000A16  C080  F0CF         	movff	draw@F4683,draw@4684
  2033  000A1A  C081  F0D0         	movff	draw@F4683+1,draw@4684+1
  2034  000A1E  281B               	incf	_position^0,w,c
  2035  000A20  0100               	movlb	0	; () banked
  2036  000A22  6FCF               	movwf	draw@4684& (0+255),b
  2037  000A24  281C               	incf	(_position+1)^0,w,c
  2038  000A26  6FD0               	movwf	(draw@4684+1)& (0+255),b
  2039  000A28                     
  2040                           ; BSR set to: 0
  2041  000A28  C0CF  F0A2         	movff	draw@4684,setLed@pos
  2042  000A2C  C0D0  F0A3         	movff	draw@4684+1,setLed@pos+1
  2043  000A30  C043  F0A4         	movff	_blink_on,setLed@value
  2044  000A34  EC2E  F007         	call	_setLed	;wreg free
  2045                           
  2046                           ;main.c: 376:                     break;
  2047  000A38  EF54  F005         	goto	l221
  2048  000A3C                     l2624:
  2049                           
  2050                           ; BSR set to: 0
  2051  000A3C  5021               	movf	_rotation^0,w,c
  2052  000A3E  6FA7               	movwf	??_draw& (0+255),b
  2053  000A40  6BA8               	clrf	(??_draw+1)& (0+255),b
  2054                           
  2055                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2056                           ; Switch size 1, requested type "simple"
  2057                           ; Number of cases is 1, Range of values is 0 to 0
  2058                           ; switch strategies available:
  2059                           ; Name         Instructions Cycles
  2060                           ; simple_byte            4     3 (average)
  2061                           ;	Chosen strategy is simple_byte
  2062  000A42  51A8               	movf	(??_draw+1)& (0+255),w,b
  2063  000A44  0A00               	xorlw	0	; case 0
  2064  000A46  B4D8               	btfsc	status,2,c
  2065  000A48  EF28  F005         	goto	l2900
  2066  000A4C  EF54  F005         	goto	l221
  2067  000A50                     l2900:
  2068                           
  2069                           ; BSR set to: 0
  2070                           ; Switch size 1, requested type "simple"
  2071                           ; Number of cases is 4, Range of values is 0 to 3
  2072                           ; switch strategies available:
  2073                           ; Name         Instructions Cycles
  2074                           ; simple_byte           13     7 (average)
  2075                           ;	Chosen strategy is simple_byte
  2076  000A50  51A7               	movf	??_draw& (0+255),w,b
  2077  000A52  0A00               	xorlw	0	; case 0
  2078  000A54  B4D8               	btfsc	status,2,c
  2079  000A56  EF56  F004         	goto	l216
  2080  000A5A  0A01               	xorlw	1	; case 1
  2081  000A5C  B4D8               	btfsc	status,2,c
  2082  000A5E  EFBE  F004         	goto	l219
  2083  000A62  0A03               	xorlw	3	; case 2
  2084  000A64  B4D8               	btfsc	status,2,c
  2085  000A66  EFEA  F004         	goto	l220
  2086  000A6A  0A01               	xorlw	1	; case 3
  2087  000A6C  B4D8               	btfsc	status,2,c
  2088  000A6E  EF8A  F004         	goto	l218
  2089  000A72  EF54  F005         	goto	l221
  2090  000A76                     l2628:
  2091                           
  2092                           ; BSR set to: 0
  2093  000A76  5020               	movf	_type^0,w,c
  2094  000A78  6FA7               	movwf	??_draw& (0+255),b
  2095  000A7A  6BA8               	clrf	(??_draw+1)& (0+255),b
  2096                           
  2097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2098                           ; Switch size 1, requested type "simple"
  2099                           ; Number of cases is 1, Range of values is 0 to 0
  2100                           ; switch strategies available:
  2101                           ; Name         Instructions Cycles
  2102                           ; simple_byte            4     3 (average)
  2103                           ;	Chosen strategy is simple_byte
  2104  000A7C  51A8               	movf	(??_draw+1)& (0+255),w,b
  2105  000A7E  0A00               	xorlw	0	; case 0
  2106  000A80  B4D8               	btfsc	status,2,c
  2107  000A82  EF45  F005         	goto	l2902
  2108  000A86  EF54  F005         	goto	l221
  2109  000A8A                     l2902:
  2110                           
  2111                           ; BSR set to: 0
  2112                           ; Switch size 1, requested type "simple"
  2113                           ; Number of cases is 3, Range of values is 0 to 2
  2114                           ; switch strategies available:
  2115                           ; Name         Instructions Cycles
  2116                           ; simple_byte           10     6 (average)
  2117                           ;	Chosen strategy is simple_byte
  2118  000A8A  51A7               	movf	??_draw& (0+255),w,b
  2119  000A8C  0A00               	xorlw	0	; case 0
  2120  000A8E  B4D8               	btfsc	status,2,c
  2121  000A90  EFFF  F003         	goto	l211
  2122  000A94  0A01               	xorlw	1	; case 1
  2123  000A96  B4D8               	btfsc	status,2,c
  2124  000A98  EF11  F004         	goto	l213
  2125  000A9C  0A03               	xorlw	3	; case 2
  2126  000A9E  B4D8               	btfsc	status,2,c
  2127  000AA0  EF1E  F005         	goto	l2624
  2128  000AA4  EF54  F005         	goto	l221
  2129  000AA8                     l221:
  2130  000AA8  0012               	return		;funcret
  2131  000AAA                     __end_of_draw:
  2132                           	callstack 0
  2133                           
  2134 ;; *************** function _setLed *****************
  2135 ;; Defined at:
  2136 ;;		line 255 in file "main.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;  pos             2    0[BANK0 ] struct Position
  2139 ;;  value           1    2[BANK0 ] unsigned char 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;		None
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		wreg, status,2, status,0
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2151 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;Total ram usage:        5 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; Hardware stack levels required when called:    5
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_draw
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text10
  2166  000E5C                     __ptext10:
  2167                           	callstack 0
  2168  000E5C                     _setLed:
  2169                           	callstack 24
  2170  000E5C                     
  2171                           ;main.c: 256:     switch (pos.x) {
  2172  000E5C  EFDC  F007         	goto	l2456
  2173  000E60                     l2430:
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;main.c: 258:             if (value)
  2177  000E60  51A4               	movf	setLed@value& (0+255),w,b
  2178  000E62  B4D8               	btfsc	status,2,c
  2179  000E64  EF36  F007         	goto	u1851
  2180  000E68  EF38  F007         	goto	u1850
  2181  000E6C                     u1851:
  2182  000E6C  EF49  F007         	goto	l2434
  2183  000E70                     u1850:
  2184  000E70                     
  2185                           ; BSR set to: 0
  2186                           ;main.c: 259:                 LATC |= (1 << pos.y);
  2187  000E70  C0A3  F0A5         	movff	setLed@pos+1,??_setLed
  2188  000E74  0E01               	movlw	1
  2189  000E76  6FA6               	movwf	(??_setLed+1)& (0+255),b
  2190  000E78  2BA5               	incf	??_setLed& (0+255),f,b
  2191  000E7A  EF41  F007         	goto	u1864
  2192  000E7E                     u1865:
  2193  000E7E  90D8               	bcf	status,0,c
  2194  000E80  37A6               	rlcf	(??_setLed+1)& (0+255),f,b
  2195  000E82                     u1864:
  2196  000E82  2FA5               	decfsz	??_setLed& (0+255),f,b
  2197  000E84  EF3F  F007         	goto	u1865
  2198  000E88  0100               	movlb	0	; () banked
  2199  000E8A  51A6               	movf	(??_setLed+1)& (0+255),w,b
  2200  000E8C  128B               	iorwf	139,f,c	;volatile
  2201  000E8E  EFFA  F007         	goto	l173
  2202  000E92                     l2434:
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;main.c: 261:                 LATC &= ~(1 << pos.y);
  2206  000E92  C0A3  F0A5         	movff	setLed@pos+1,??_setLed
  2207  000E96  0E01               	movlw	1
  2208  000E98  6FA6               	movwf	(??_setLed+1)& (0+255),b
  2209  000E9A  2BA5               	incf	??_setLed& (0+255),f,b
  2210  000E9C  EF52  F007         	goto	u1874
  2211  000EA0                     u1875:
  2212  000EA0  90D8               	bcf	status,0,c
  2213  000EA2  37A6               	rlcf	(??_setLed+1)& (0+255),f,b
  2214  000EA4                     u1874:
  2215  000EA4  2FA5               	decfsz	??_setLed& (0+255),f,b
  2216  000EA6  EF50  F007         	goto	u1875
  2217  000EAA  0100               	movlb	0	; () banked
  2218  000EAC  51A6               	movf	(??_setLed+1)& (0+255),w,b
  2219  000EAE  0AFF               	xorlw	255
  2220  000EB0  168B               	andwf	139,f,c	;volatile
  2221  000EB2  EFFA  F007         	goto	l173
  2222  000EB6                     l2436:
  2223                           
  2224                           ; BSR set to: 0
  2225                           ;main.c: 264:             if (value)
  2226  000EB6  51A4               	movf	setLed@value& (0+255),w,b
  2227  000EB8  B4D8               	btfsc	status,2,c
  2228  000EBA  EF61  F007         	goto	u1881
  2229  000EBE  EF63  F007         	goto	u1880
  2230  000EC2                     u1881:
  2231  000EC2  EF74  F007         	goto	l2440
  2232  000EC6                     u1880:
  2233  000EC6                     
  2234                           ; BSR set to: 0
  2235                           ;main.c: 265:                 LATD |= (1 << pos.y);
  2236  000EC6  C0A3  F0A5         	movff	setLed@pos+1,??_setLed
  2237  000ECA  0E01               	movlw	1
  2238  000ECC  6FA6               	movwf	(??_setLed+1)& (0+255),b
  2239  000ECE  2BA5               	incf	??_setLed& (0+255),f,b
  2240  000ED0  EF6C  F007         	goto	u1894
  2241  000ED4                     u1895:
  2242  000ED4  90D8               	bcf	status,0,c
  2243  000ED6  37A6               	rlcf	(??_setLed+1)& (0+255),f,b
  2244  000ED8                     u1894:
  2245  000ED8  2FA5               	decfsz	??_setLed& (0+255),f,b
  2246  000EDA  EF6A  F007         	goto	u1895
  2247  000EDE  0100               	movlb	0	; () banked
  2248  000EE0  51A6               	movf	(??_setLed+1)& (0+255),w,b
  2249  000EE2  128C               	iorwf	140,f,c	;volatile
  2250  000EE4  EFFA  F007         	goto	l173
  2251  000EE8                     l2440:
  2252                           
  2253                           ; BSR set to: 0
  2254                           ;main.c: 267:                 LATD &= ~(1 << pos.y);
  2255  000EE8  C0A3  F0A5         	movff	setLed@pos+1,??_setLed
  2256  000EEC  0E01               	movlw	1
  2257  000EEE  6FA6               	movwf	(??_setLed+1)& (0+255),b
  2258  000EF0  2BA5               	incf	??_setLed& (0+255),f,b
  2259  000EF2  EF7D  F007         	goto	u1904
  2260  000EF6                     u1905:
  2261  000EF6  90D8               	bcf	status,0,c
  2262  000EF8  37A6               	rlcf	(??_setLed+1)& (0+255),f,b
  2263  000EFA                     u1904:
  2264  000EFA  2FA5               	decfsz	??_setLed& (0+255),f,b
  2265  000EFC  EF7B  F007         	goto	u1905
  2266  000F00  0100               	movlb	0	; () banked
  2267  000F02  51A6               	movf	(??_setLed+1)& (0+255),w,b
  2268  000F04  0AFF               	xorlw	255
  2269  000F06  168C               	andwf	140,f,c	;volatile
  2270  000F08  EFFA  F007         	goto	l173
  2271  000F0C                     l2442:
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;main.c: 270:             if (value)
  2275  000F0C  51A4               	movf	setLed@value& (0+255),w,b
  2276  000F0E  B4D8               	btfsc	status,2,c
  2277  000F10  EF8C  F007         	goto	u1911
  2278  000F14  EF8E  F007         	goto	u1910
  2279  000F18                     u1911:
  2280  000F18  EF9F  F007         	goto	l2446
  2281  000F1C                     u1910:
  2282  000F1C                     
  2283                           ; BSR set to: 0
  2284                           ;main.c: 271:                 LATE |= (1 << pos.y);
  2285  000F1C  C0A3  F0A5         	movff	setLed@pos+1,??_setLed
  2286  000F20  0E01               	movlw	1
  2287  000F22  6FA6               	movwf	(??_setLed+1)& (0+255),b
  2288  000F24  2BA5               	incf	??_setLed& (0+255),f,b
  2289  000F26  EF97  F007         	goto	u1924
  2290  000F2A                     u1925:
  2291  000F2A  90D8               	bcf	status,0,c
  2292  000F2C  37A6               	rlcf	(??_setLed+1)& (0+255),f,b
  2293  000F2E                     u1924:
  2294  000F2E  2FA5               	decfsz	??_setLed& (0+255),f,b
  2295  000F30  EF95  F007         	goto	u1925
  2296  000F34  0100               	movlb	0	; () banked
  2297  000F36  51A6               	movf	(??_setLed+1)& (0+255),w,b
  2298  000F38  128D               	iorwf	141,f,c	;volatile
  2299  000F3A  EFFA  F007         	goto	l173
  2300  000F3E                     l2446:
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;main.c: 273:                 LATE &= ~(1 << pos.y);
  2304  000F3E  C0A3  F0A5         	movff	setLed@pos+1,??_setLed
  2305  000F42  0E01               	movlw	1
  2306  000F44  6FA6               	movwf	(??_setLed+1)& (0+255),b
  2307  000F46  2BA5               	incf	??_setLed& (0+255),f,b
  2308  000F48  EFA8  F007         	goto	u1934
  2309  000F4C                     u1935:
  2310  000F4C  90D8               	bcf	status,0,c
  2311  000F4E  37A6               	rlcf	(??_setLed+1)& (0+255),f,b
  2312  000F50                     u1934:
  2313  000F50  2FA5               	decfsz	??_setLed& (0+255),f,b
  2314  000F52  EFA6  F007         	goto	u1935
  2315  000F56  0100               	movlb	0	; () banked
  2316  000F58  51A6               	movf	(??_setLed+1)& (0+255),w,b
  2317  000F5A  0AFF               	xorlw	255
  2318  000F5C  168D               	andwf	141,f,c	;volatile
  2319  000F5E  EFFA  F007         	goto	l173
  2320  000F62                     l2448:
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;main.c: 276:             if (value)
  2324  000F62  51A4               	movf	setLed@value& (0+255),w,b
  2325  000F64  B4D8               	btfsc	status,2,c
  2326  000F66  EFB7  F007         	goto	u1941
  2327  000F6A  EFB9  F007         	goto	u1940
  2328  000F6E                     u1941:
  2329  000F6E  EFCA  F007         	goto	l2452
  2330  000F72                     u1940:
  2331  000F72                     
  2332                           ; BSR set to: 0
  2333                           ;main.c: 277:                 LATF |= (1 << pos.y);
  2334  000F72  C0A3  F0A5         	movff	setLed@pos+1,??_setLed
  2335  000F76  0E01               	movlw	1
  2336  000F78  6FA6               	movwf	(??_setLed+1)& (0+255),b
  2337  000F7A  2BA5               	incf	??_setLed& (0+255),f,b
  2338  000F7C  EFC2  F007         	goto	u1954
  2339  000F80                     u1955:
  2340  000F80  90D8               	bcf	status,0,c
  2341  000F82  37A6               	rlcf	(??_setLed+1)& (0+255),f,b
  2342  000F84                     u1954:
  2343  000F84  2FA5               	decfsz	??_setLed& (0+255),f,b
  2344  000F86  EFC0  F007         	goto	u1955
  2345  000F8A  0100               	movlb	0	; () banked
  2346  000F8C  51A6               	movf	(??_setLed+1)& (0+255),w,b
  2347  000F8E  128E               	iorwf	142,f,c	;volatile
  2348  000F90  EFFA  F007         	goto	l173
  2349  000F94                     l2452:
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;main.c: 279:                 LATF &= ~(1 << pos.y);
  2353  000F94  C0A3  F0A5         	movff	setLed@pos+1,??_setLed
  2354  000F98  0E01               	movlw	1
  2355  000F9A  6FA6               	movwf	(??_setLed+1)& (0+255),b
  2356  000F9C  2BA5               	incf	??_setLed& (0+255),f,b
  2357  000F9E  EFD3  F007         	goto	u1964
  2358  000FA2                     u1965:
  2359  000FA2  90D8               	bcf	status,0,c
  2360  000FA4  37A6               	rlcf	(??_setLed+1)& (0+255),f,b
  2361  000FA6                     u1964:
  2362  000FA6  2FA5               	decfsz	??_setLed& (0+255),f,b
  2363  000FA8  EFD1  F007         	goto	u1965
  2364  000FAC  0100               	movlb	0	; () banked
  2365  000FAE  51A6               	movf	(??_setLed+1)& (0+255),w,b
  2366  000FB0  0AFF               	xorlw	255
  2367  000FB2  168E               	andwf	142,f,c	;volatile
  2368  000FB4  EFFA  F007         	goto	l173
  2369  000FB8                     l2456:
  2370  000FB8  0100               	movlb	0	; () banked
  2371  000FBA  51A2               	movf	setLed@pos& (0+255),w,b
  2372  000FBC  6FA5               	movwf	??_setLed& (0+255),b
  2373  000FBE  6BA6               	clrf	(??_setLed+1)& (0+255),b
  2374                           
  2375                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2376                           ; Switch size 1, requested type "simple"
  2377                           ; Number of cases is 1, Range of values is 0 to 0
  2378                           ; switch strategies available:
  2379                           ; Name         Instructions Cycles
  2380                           ; simple_byte            4     3 (average)
  2381                           ;	Chosen strategy is simple_byte
  2382  000FC0  51A6               	movf	(??_setLed+1)& (0+255),w,b
  2383  000FC2  0A00               	xorlw	0	; case 0
  2384  000FC4  B4D8               	btfsc	status,2,c
  2385  000FC6  EFE7  F007         	goto	l2904
  2386  000FCA  EFFA  F007         	goto	l173
  2387  000FCE                     l2904:
  2388                           
  2389                           ; BSR set to: 0
  2390                           ; Switch size 1, requested type "simple"
  2391                           ; Number of cases is 4, Range of values is 0 to 3
  2392                           ; switch strategies available:
  2393                           ; Name         Instructions Cycles
  2394                           ; simple_byte           13     7 (average)
  2395                           ;	Chosen strategy is simple_byte
  2396  000FCE  51A5               	movf	??_setLed& (0+255),w,b
  2397  000FD0  0A00               	xorlw	0	; case 0
  2398  000FD2  B4D8               	btfsc	status,2,c
  2399  000FD4  EF30  F007         	goto	l2430
  2400  000FD8  0A01               	xorlw	1	; case 1
  2401  000FDA  B4D8               	btfsc	status,2,c
  2402  000FDC  EF5B  F007         	goto	l2436
  2403  000FE0  0A03               	xorlw	3	; case 2
  2404  000FE2  B4D8               	btfsc	status,2,c
  2405  000FE4  EF86  F007         	goto	l2442
  2406  000FE8  0A01               	xorlw	1	; case 3
  2407  000FEA  B4D8               	btfsc	status,2,c
  2408  000FEC  EFB1  F007         	goto	l2448
  2409  000FF0  EFFA  F007         	goto	l173
  2410  000FF4                     l173:
  2411                           
  2412                           ; BSR set to: 0
  2413  000FF4  0012               	return		;funcret
  2414  000FF6                     __end_of_setLed:
  2415                           	callstack 0
  2416                           
  2417 ;; *************** function _busy_wait *****************
  2418 ;; Defined at:
  2419 ;;		line 112 in file "main.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;		None
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  i               4    0[BANK0 ] long 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		wreg, status,2, status,0
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2434 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;Total ram usage:        4 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    5
  2440 ;; This function calls:
  2441 ;;		Nothing
  2442 ;; This function is called by:
  2443 ;;		_main
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text11
  2448  00147C                     __ptext11:
  2449                           	callstack 0
  2450  00147C                     _busy_wait:
  2451                           	callstack 25
  2452  00147C                     
  2453                           ;main.c: 113:     for (long int i = 0; i <= 454544; i++);
  2454  00147C  0E00               	movlw	0
  2455  00147E  0100               	movlb	0	; () banked
  2456  001480  6FA2               	movwf	busy_wait@i& (0+255),b
  2457  001482  0E00               	movlw	0
  2458  001484  6FA3               	movwf	(busy_wait@i+1)& (0+255),b
  2459  001486  0E00               	movlw	0
  2460  001488  6FA4               	movwf	(busy_wait@i+2)& (0+255),b
  2461  00148A  0E00               	movlw	0
  2462  00148C  6FA5               	movwf	(busy_wait@i+3)& (0+255),b
  2463  00148E                     l2490:
  2464                           
  2465                           ; BSR set to: 0
  2466  00148E  0E01               	movlw	1
  2467  001490  27A2               	addwf	busy_wait@i& (0+255),f,b
  2468  001492  0E00               	movlw	0
  2469  001494  23A3               	addwfc	(busy_wait@i+1)& (0+255),f,b
  2470  001496  23A4               	addwfc	(busy_wait@i+2)& (0+255),f,b
  2471  001498  23A5               	addwfc	(busy_wait@i+3)& (0+255),f,b
  2472  00149A  BFA5               	btfsc	(busy_wait@i+3)& (0+255),7,b
  2473  00149C  EF5D  F00A         	goto	u1971
  2474  0014A0  51A5               	movf	(busy_wait@i+3)& (0+255),w,b
  2475  0014A2  E10D               	bnz	u1970
  2476  0014A4  0E91               	movlw	145
  2477  0014A6  5DA2               	subwf	busy_wait@i& (0+255),w,b
  2478  0014A8  0EEF               	movlw	239
  2479  0014AA  59A3               	subwfb	(busy_wait@i+1)& (0+255),w,b
  2480  0014AC  0E06               	movlw	6
  2481  0014AE  59A4               	subwfb	(busy_wait@i+2)& (0+255),w,b
  2482  0014B0  A0D8               	btfss	status,0,c
  2483  0014B2  EF5D  F00A         	goto	u1971
  2484  0014B6  EF5F  F00A         	goto	u1970
  2485  0014BA                     u1971:
  2486  0014BA  EF47  F00A         	goto	l2490
  2487  0014BE                     u1970:
  2488  0014BE                     
  2489                           ; BSR set to: 0
  2490                           ;main.c: 114:     INTCON |= (1 << 7);
  2491  0014BE  8EF2               	bsf	242,7,c	;volatile
  2492  0014C0                     
  2493                           ; BSR set to: 0
  2494  0014C0  0012               	return		;funcret
  2495  0014C2                     __end_of_busy_wait:
  2496                           	callstack 0
  2497                           
  2498 ;; *************** function _HandleInterrupt *****************
  2499 ;; Defined at:
  2500 ;;		line 131 in file "main.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;		None
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      void 
  2507 ;; Registers used:
  2508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;Total ram usage:        4 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    4
  2521 ;; This function calls:
  2522 ;;		_blink
  2523 ;;		_rotate
  2524 ;;		_submit
  2525 ;; This function is called by:
  2526 ;;		Interrupt level 2
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           	psect	intcode
  2531  000008                     __pintcode:
  2532                           	callstack 0
  2533  000008                     _HandleInterrupt:
  2534                           	callstack 22
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;incstack = 0
  2538  000008  8244               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2539  00000A  EDBA  F009         	call	int_func,f	;refresh shadow registers
  2540                           
  2541                           	psect	intcode_body
  2542  001374                     __pintcode_body:
  2543                           	callstack 22
  2544  001374                     int_func:
  2545                           	callstack 22
  2546  001374  0006               	pop		; remove dummy address from shadow register refresh
  2547  001376  CFD9 F03F          	movff	fsr2l,??_HandleInterrupt
  2548  00137A  CFDA F040          	movff	fsr2h,??_HandleInterrupt+1
  2549  00137E  CFF3 F041          	movff	prodl,??_HandleInterrupt+2
  2550  001382  CFF4 F042          	movff	prodh,??_HandleInterrupt+3
  2551  001386                     
  2552                           ;main.c: 132:     if (((INTCON) & (1 << (2))))
  2553  001386  A4F2               	btfss	242,2,c	;volatile
  2554  001388  EFC8  F009         	goto	i2u174_41
  2555  00138C  EFCA  F009         	goto	i2u174_40
  2556  001390                     i2u174_41:
  2557  001390  EFDC  F009         	goto	i2l2144
  2558  001394                     i2u174_40:
  2559  001394                     
  2560                           ;main.c: 133:     {;main.c: 134:         blink_counter += 1;
  2561  001394  4A1D               	infsnz	_blink_counter^0,f,c
  2562  001396  2A1E               	incf	(_blink_counter+1)^0,f,c
  2563  001398                     
  2564                           ;main.c: 135:         if (blink_counter == 50) {
  2565  001398  0E32               	movlw	50
  2566  00139A  181D               	xorwf	_blink_counter^0,w,c
  2567  00139C  101E               	iorwf	(_blink_counter+1)^0,w,c
  2568  00139E  A4D8               	btfss	status,2,c
  2569  0013A0  EFD4  F009         	goto	i2u175_41
  2570  0013A4  EFD6  F009         	goto	i2u175_40
  2571  0013A8                     i2u175_41:
  2572  0013A8  EFD8  F009         	goto	i2l2140
  2573  0013AC                     i2u175_40:
  2574  0013AC                     
  2575                           ;main.c: 136:             blink();
  2576  0013AC  EC61  F00A         	call	_blink	;wreg free
  2577  0013B0                     i2l2140:
  2578                           
  2579                           ;main.c: 139:         TMR0L = 0xCE;
  2580  0013B0  0ECE               	movlw	206
  2581  0013B2  6ED6               	movwf	214,c	;volatile
  2582  0013B4                     
  2583                           ;main.c: 140:         TMR0H = 0x3C;
  2584  0013B4  0E3C               	movlw	60
  2585  0013B6  6ED7               	movwf	215,c	;volatile
  2586  0013B8                     i2l2144:
  2587                           
  2588                           ;main.c: 143:     if (((INTCON) & (1 << (0))))
  2589  0013B8  A0F2               	btfss	242,0,c	;volatile
  2590  0013BA  EFE1  F009         	goto	i2u176_41
  2591  0013BE  EFE3  F009         	goto	i2u176_40
  2592  0013C2                     i2u176_41:
  2593  0013C2  EF00  F00A         	goto	i2l2158
  2594  0013C6                     i2u176_40:
  2595  0013C6                     
  2596                           ;main.c: 144:     {;main.c: 145:         if (((PORTB) & (1 << (5))))
  2597  0013C6  AA81               	btfss	129,5,c	;volatile
  2598  0013C8  EFE8  F009         	goto	i2u177_41
  2599  0013CC  EFEA  F009         	goto	i2u177_40
  2600  0013D0                     i2u177_41:
  2601  0013D0  EFEC  F009         	goto	i2l2150
  2602  0013D4                     i2u177_40:
  2603  0013D4                     
  2604                           ;main.c: 146:             rotate();
  2605  0013D4  EC1A  F00B         	call	_rotate	;wreg free
  2606  0013D8                     i2l2150:
  2607                           
  2608                           ;main.c: 147:         if (!prev_submit && ((PORTB) & (1 << (6)))) {
  2609  0013D8  501F               	movf	_prev_submit^0,w,c
  2610  0013DA  A4D8               	btfss	status,2,c
  2611  0013DC  EFF2  F009         	goto	i2u178_41
  2612  0013E0  EFF4  F009         	goto	i2u178_40
  2613  0013E4                     i2u178_41:
  2614  0013E4  EFFD  F009         	goto	i2l2156
  2615  0013E8                     i2u178_40:
  2616  0013E8  AC81               	btfss	129,6,c	;volatile
  2617  0013EA  EFF9  F009         	goto	i2u179_41
  2618  0013EE  EFFB  F009         	goto	i2u179_40
  2619  0013F2                     i2u179_41:
  2620  0013F2  EFFD  F009         	goto	i2l2156
  2621  0013F6                     i2u179_40:
  2622  0013F6                     
  2623                           ;main.c: 148:             submit();
  2624  0013F6  EC55  F005         	call	_submit	;wreg free
  2625  0013FA                     i2l2156:
  2626                           
  2627                           ;main.c: 150:         prev_submit = ((PORTB) & (1 << (6)));
  2628  0013FA  5081               	movf	129,w,c	;volatile
  2629  0013FC  0B40               	andlw	64
  2630  0013FE  6E1F               	movwf	_prev_submit^0,c
  2631  001400                     i2l2158:
  2632                           
  2633                           ;main.c: 153:     INTCON &= ~((1 << 0) | (1 << 1) | (1 << 2));
  2634  001400  0EF8               	movlw	248
  2635  001402  16F2               	andwf	242,f,c	;volatile
  2636  001404  C042  FFF4         	movff	??_HandleInterrupt+3,prodh
  2637  001408  C041  FFF3         	movff	??_HandleInterrupt+2,prodl
  2638  00140C  C040  FFDA         	movff	??_HandleInterrupt+1,fsr2h
  2639  001410  C03F  FFD9         	movff	??_HandleInterrupt,fsr2l
  2640  001414  9244               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2641  001416  0011               	retfie		f
  2642  001418                     __end_of_HandleInterrupt:
  2643                           	callstack 0
  2644                           
  2645 ;; *************** function _submit *****************
  2646 ;; Defined at:
  2647 ;;		line 387 in file "main.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  4720            2   26[COMRAM] struct Position
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;Total ram usage:        6 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:    1
  2668 ;; This function calls:
  2669 ;;		___lwmod
  2670 ;;		_not_intersects
  2671 ;; This function is called by:
  2672 ;;		_HandleInterrupt
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text13
  2677  000AAA                     __ptext13:
  2678                           	callstack 0
  2679  000AAA                     _submit:
  2680                           	callstack 24
  2681  000AAA                     
  2682                           ;main.c: 440:         position = (Position){0, 0};;main.c: 388:     if (not_intersects()
      +                          ) {
  2683  000AAA  EC09  F000         	call	_not_intersects	;wreg free
  2684  000AAE  0900               	iorlw	0
  2685  000AB0  B4D8               	btfsc	status,2,c
  2686  000AB2  EF5D  F005         	goto	i2u149_41
  2687  000AB6  EF5F  F005         	goto	i2u149_40
  2688  000ABA                     i2u149_41:
  2689  000ABA  EF2D  F007         	goto	i2l241
  2690  000ABE                     i2u149_40:
  2691  000ABE  EFFC  F006         	goto	i2l1924
  2692  000AC2                     i2l1888:
  2693                           
  2694                           ;main.c: 391:             {;main.c: 392:                 grid[position.x][position.y] = 
      +                          1;
  2695  000AC2  501B               	movf	_position^0,w,c
  2696  000AC4  0D08               	mullw	8
  2697  000AC6  0E60               	movlw	low _grid
  2698  000AC8  6E39               	movwf	??_submit^0,c
  2699  000ACA  0E00               	movlw	high _grid
  2700  000ACC  6E3A               	movwf	(??_submit+1)^0,c
  2701  000ACE  50F3               	movf	243,w,c
  2702  000AD0  2639               	addwf	??_submit^0,f,c
  2703  000AD2  50F4               	movf	244,w,c
  2704  000AD4  223A               	addwfc	(??_submit+1)^0,f,c
  2705  000AD6  501C               	movf	(_position+1)^0,w,c
  2706  000AD8  2439               	addwf	??_submit^0,w,c
  2707  000ADA  6ED9               	movwf	fsr2l,c
  2708  000ADC  0E00               	movlw	0
  2709  000ADE  203A               	addwfc	(??_submit+1)^0,w,c
  2710  000AE0  6EDA               	movwf	fsr2h,c
  2711  000AE2  0E01               	movlw	1
  2712  000AE4  6EDF               	movwf	indf2,c
  2713                           
  2714                           ;main.c: 393:                 break;
  2715  000AE6  EF15  F007         	goto	i2l1926
  2716  000AEA                     i2l1890:
  2717                           
  2718                           ;main.c: 396:             {;main.c: 397:                 grid[position.x][position.y] = 
      +                          1;
  2719  000AEA  501B               	movf	_position^0,w,c
  2720  000AEC  0D08               	mullw	8
  2721  000AEE  0E60               	movlw	low _grid
  2722  000AF0  6E39               	movwf	??_submit^0,c
  2723  000AF2  0E00               	movlw	high _grid
  2724  000AF4  6E3A               	movwf	(??_submit+1)^0,c
  2725  000AF6  50F3               	movf	243,w,c
  2726  000AF8  2639               	addwf	??_submit^0,f,c
  2727  000AFA  50F4               	movf	244,w,c
  2728  000AFC  223A               	addwfc	(??_submit+1)^0,f,c
  2729  000AFE  501C               	movf	(_position+1)^0,w,c
  2730  000B00  2439               	addwf	??_submit^0,w,c
  2731  000B02  6ED9               	movwf	fsr2l,c
  2732  000B04  0E00               	movlw	0
  2733  000B06  203A               	addwfc	(??_submit+1)^0,w,c
  2734  000B08  6EDA               	movwf	fsr2h,c
  2735  000B0A  0E01               	movlw	1
  2736  000B0C  6EDF               	movwf	indf2,c
  2737  000B0E                     
  2738                           ;main.c: 398:                 grid[position.x + 1][position.y] = 1;
  2739  000B0E  501B               	movf	_position^0,w,c
  2740  000B10  6E39               	movwf	??_submit^0,c
  2741  000B12  6A3A               	clrf	(??_submit+1)^0,c
  2742  000B14  90D8               	bcf	status,0,c
  2743  000B16  3639               	rlcf	??_submit^0,f,c
  2744  000B18  363A               	rlcf	(??_submit+1)^0,f,c
  2745  000B1A  90D8               	bcf	status,0,c
  2746  000B1C  3639               	rlcf	??_submit^0,f,c
  2747  000B1E  363A               	rlcf	(??_submit+1)^0,f,c
  2748  000B20  90D8               	bcf	status,0,c
  2749  000B22  3639               	rlcf	??_submit^0,f,c
  2750  000B24  363A               	rlcf	(??_submit+1)^0,f,c
  2751  000B26  0E60               	movlw	low _grid
  2752  000B28  6E3B               	movwf	(??_submit+2)^0,c
  2753  000B2A  0E00               	movlw	high _grid
  2754  000B2C  6E3C               	movwf	(??_submit+3)^0,c
  2755  000B2E  0E08               	movlw	8
  2756  000B30  263B               	addwf	(??_submit+2)^0,f,c
  2757  000B32  0E00               	movlw	0
  2758  000B34  223C               	addwfc	(??_submit+3)^0,f,c
  2759  000B36  5039               	movf	??_submit^0,w,c
  2760  000B38  263B               	addwf	(??_submit+2)^0,f,c
  2761  000B3A  503A               	movf	(??_submit+1)^0,w,c
  2762  000B3C  223C               	addwfc	(??_submit+3)^0,f,c
  2763  000B3E  501C               	movf	(_position+1)^0,w,c
  2764  000B40  243B               	addwf	(??_submit+2)^0,w,c
  2765  000B42  6ED9               	movwf	fsr2l,c
  2766  000B44  0E00               	movlw	0
  2767  000B46  203C               	addwfc	(??_submit+3)^0,w,c
  2768  000B48  6EDA               	movwf	fsr2h,c
  2769  000B4A  0E01               	movlw	1
  2770  000B4C  6EDF               	movwf	indf2,c
  2771  000B4E                     
  2772                           ;main.c: 399:                 grid[position.x][position.y + 1] = 1;
  2773  000B4E  501B               	movf	_position^0,w,c
  2774  000B50  0D08               	mullw	8
  2775  000B52  0E60               	movlw	low _grid
  2776  000B54  6E39               	movwf	??_submit^0,c
  2777  000B56  0E00               	movlw	high _grid
  2778  000B58  6E3A               	movwf	(??_submit+1)^0,c
  2779  000B5A  0E01               	movlw	1
  2780  000B5C  2639               	addwf	??_submit^0,f,c
  2781  000B5E  0E00               	movlw	0
  2782  000B60  223A               	addwfc	(??_submit+1)^0,f,c
  2783  000B62  50F3               	movf	243,w,c
  2784  000B64  2639               	addwf	??_submit^0,f,c
  2785  000B66  50F4               	movf	244,w,c
  2786  000B68  223A               	addwfc	(??_submit+1)^0,f,c
  2787  000B6A  501C               	movf	(_position+1)^0,w,c
  2788  000B6C  2439               	addwf	??_submit^0,w,c
  2789  000B6E  6ED9               	movwf	fsr2l,c
  2790  000B70  0E00               	movlw	0
  2791  000B72  203A               	addwfc	(??_submit+1)^0,w,c
  2792  000B74  6EDA               	movwf	fsr2h,c
  2793  000B76  0E01               	movlw	1
  2794  000B78  6EDF               	movwf	indf2,c
  2795                           
  2796                           ;main.c: 400:                 grid[position.x + 1][position.y + 1] = 1;
  2797  000B7A  501B               	movf	_position^0,w,c
  2798  000B7C  6E39               	movwf	??_submit^0,c
  2799  000B7E  6A3A               	clrf	(??_submit+1)^0,c
  2800  000B80  90D8               	bcf	status,0,c
  2801  000B82  3639               	rlcf	??_submit^0,f,c
  2802  000B84  363A               	rlcf	(??_submit+1)^0,f,c
  2803  000B86  90D8               	bcf	status,0,c
  2804  000B88  3639               	rlcf	??_submit^0,f,c
  2805  000B8A  363A               	rlcf	(??_submit+1)^0,f,c
  2806  000B8C  90D8               	bcf	status,0,c
  2807  000B8E  3639               	rlcf	??_submit^0,f,c
  2808  000B90  363A               	rlcf	(??_submit+1)^0,f,c
  2809  000B92  0E60               	movlw	low _grid
  2810  000B94  6E3B               	movwf	(??_submit+2)^0,c
  2811  000B96  0E00               	movlw	high _grid
  2812  000B98  6E3C               	movwf	(??_submit+3)^0,c
  2813  000B9A  0E09               	movlw	9
  2814  000B9C  263B               	addwf	(??_submit+2)^0,f,c
  2815  000B9E  0E00               	movlw	0
  2816  000BA0  223C               	addwfc	(??_submit+3)^0,f,c
  2817  000BA2  501C               	movf	(_position+1)^0,w,c
  2818  000BA4  263B               	addwf	(??_submit+2)^0,f,c
  2819  000BA6  0E00               	movlw	0
  2820  000BA8  223C               	addwfc	(??_submit+3)^0,f,c
  2821  000BAA  5039               	movf	??_submit^0,w,c
  2822  000BAC  243B               	addwf	(??_submit+2)^0,w,c
  2823  000BAE  6ED9               	movwf	fsr2l,c
  2824  000BB0  503A               	movf	(??_submit+1)^0,w,c
  2825  000BB2  203C               	addwfc	(??_submit+3)^0,w,c
  2826  000BB4  6EDA               	movwf	fsr2h,c
  2827  000BB6  0E01               	movlw	1
  2828  000BB8  6EDF               	movwf	indf2,c
  2829                           
  2830                           ;main.c: 401:                 break;
  2831  000BBA  EF15  F007         	goto	i2l1926
  2832  000BBE                     i2l1896:
  2833                           
  2834                           ;main.c: 407:                     {;main.c: 408:                         grid[position.x
      +                          ][position.y] = 1;
  2835  000BBE  501B               	movf	_position^0,w,c
  2836  000BC0  0D08               	mullw	8
  2837  000BC2  0E60               	movlw	low _grid
  2838  000BC4  6E39               	movwf	??_submit^0,c
  2839  000BC6  0E00               	movlw	high _grid
  2840  000BC8  6E3A               	movwf	(??_submit+1)^0,c
  2841  000BCA  50F3               	movf	243,w,c
  2842  000BCC  2639               	addwf	??_submit^0,f,c
  2843  000BCE  50F4               	movf	244,w,c
  2844  000BD0  223A               	addwfc	(??_submit+1)^0,f,c
  2845  000BD2  501C               	movf	(_position+1)^0,w,c
  2846  000BD4  2439               	addwf	??_submit^0,w,c
  2847  000BD6  6ED9               	movwf	fsr2l,c
  2848  000BD8  0E00               	movlw	0
  2849  000BDA  203A               	addwfc	(??_submit+1)^0,w,c
  2850  000BDC  6EDA               	movwf	fsr2h,c
  2851  000BDE  0E01               	movlw	1
  2852  000BE0  6EDF               	movwf	indf2,c
  2853  000BE2                     
  2854                           ;main.c: 409:                         grid[position.x + 1][position.y] = 1;
  2855  000BE2  501B               	movf	_position^0,w,c
  2856  000BE4  6E39               	movwf	??_submit^0,c
  2857  000BE6  6A3A               	clrf	(??_submit+1)^0,c
  2858  000BE8  90D8               	bcf	status,0,c
  2859  000BEA  3639               	rlcf	??_submit^0,f,c
  2860  000BEC  363A               	rlcf	(??_submit+1)^0,f,c
  2861  000BEE  90D8               	bcf	status,0,c
  2862  000BF0  3639               	rlcf	??_submit^0,f,c
  2863  000BF2  363A               	rlcf	(??_submit+1)^0,f,c
  2864  000BF4  90D8               	bcf	status,0,c
  2865  000BF6  3639               	rlcf	??_submit^0,f,c
  2866  000BF8  363A               	rlcf	(??_submit+1)^0,f,c
  2867  000BFA  0E60               	movlw	low _grid
  2868  000BFC  6E3B               	movwf	(??_submit+2)^0,c
  2869  000BFE  0E00               	movlw	high _grid
  2870  000C00  6E3C               	movwf	(??_submit+3)^0,c
  2871  000C02  0E08               	movlw	8
  2872  000C04  263B               	addwf	(??_submit+2)^0,f,c
  2873  000C06  0E00               	movlw	0
  2874  000C08  223C               	addwfc	(??_submit+3)^0,f,c
  2875  000C0A  5039               	movf	??_submit^0,w,c
  2876  000C0C  263B               	addwf	(??_submit+2)^0,f,c
  2877  000C0E  503A               	movf	(??_submit+1)^0,w,c
  2878  000C10  223C               	addwfc	(??_submit+3)^0,f,c
  2879  000C12  501C               	movf	(_position+1)^0,w,c
  2880  000C14  243B               	addwf	(??_submit+2)^0,w,c
  2881  000C16  6ED9               	movwf	fsr2l,c
  2882  000C18  0E00               	movlw	0
  2883  000C1A  203C               	addwfc	(??_submit+3)^0,w,c
  2884  000C1C  6EDA               	movwf	fsr2h,c
  2885  000C1E  0E01               	movlw	1
  2886  000C20  6EDF               	movwf	indf2,c
  2887  000C22                     i2l1900:
  2888                           
  2889                           ;main.c: 410:                         grid[position.x + 1][position.y + 1] = 1;
  2890  000C22  501B               	movf	_position^0,w,c
  2891  000C24  6E39               	movwf	??_submit^0,c
  2892  000C26  6A3A               	clrf	(??_submit+1)^0,c
  2893  000C28  90D8               	bcf	status,0,c
  2894  000C2A  3639               	rlcf	??_submit^0,f,c
  2895  000C2C  363A               	rlcf	(??_submit+1)^0,f,c
  2896  000C2E  90D8               	bcf	status,0,c
  2897  000C30  3639               	rlcf	??_submit^0,f,c
  2898  000C32  363A               	rlcf	(??_submit+1)^0,f,c
  2899  000C34  90D8               	bcf	status,0,c
  2900  000C36  3639               	rlcf	??_submit^0,f,c
  2901  000C38  363A               	rlcf	(??_submit+1)^0,f,c
  2902  000C3A  0E60               	movlw	low _grid
  2903  000C3C  6E3B               	movwf	(??_submit+2)^0,c
  2904  000C3E  0E00               	movlw	high _grid
  2905  000C40  6E3C               	movwf	(??_submit+3)^0,c
  2906  000C42  0E09               	movlw	9
  2907  000C44  263B               	addwf	(??_submit+2)^0,f,c
  2908  000C46  0E00               	movlw	0
  2909  000C48  223C               	addwfc	(??_submit+3)^0,f,c
  2910  000C4A  501C               	movf	(_position+1)^0,w,c
  2911  000C4C  263B               	addwf	(??_submit+2)^0,f,c
  2912  000C4E  0E00               	movlw	0
  2913  000C50  223C               	addwfc	(??_submit+3)^0,f,c
  2914  000C52  5039               	movf	??_submit^0,w,c
  2915  000C54  243B               	addwf	(??_submit+2)^0,w,c
  2916  000C56  6ED9               	movwf	fsr2l,c
  2917  000C58  503A               	movf	(??_submit+1)^0,w,c
  2918  000C5A  203C               	addwfc	(??_submit+3)^0,w,c
  2919  000C5C  6EDA               	movwf	fsr2h,c
  2920  000C5E  0E01               	movlw	1
  2921  000C60  6EDF               	movwf	indf2,c
  2922                           
  2923                           ;main.c: 411:                         break;
  2924  000C62  EF15  F007         	goto	i2l1926
  2925  000C66                     i2l1902:
  2926                           
  2927                           ;main.c: 414:                     {;main.c: 415:                         grid[position.x
      +                           + 1][position.y] = 1;
  2928  000C66  501B               	movf	_position^0,w,c
  2929  000C68  6E39               	movwf	??_submit^0,c
  2930  000C6A  6A3A               	clrf	(??_submit+1)^0,c
  2931  000C6C  90D8               	bcf	status,0,c
  2932  000C6E  3639               	rlcf	??_submit^0,f,c
  2933  000C70  363A               	rlcf	(??_submit+1)^0,f,c
  2934  000C72  90D8               	bcf	status,0,c
  2935  000C74  3639               	rlcf	??_submit^0,f,c
  2936  000C76  363A               	rlcf	(??_submit+1)^0,f,c
  2937  000C78  90D8               	bcf	status,0,c
  2938  000C7A  3639               	rlcf	??_submit^0,f,c
  2939  000C7C  363A               	rlcf	(??_submit+1)^0,f,c
  2940  000C7E  0E60               	movlw	low _grid
  2941  000C80  6E3B               	movwf	(??_submit+2)^0,c
  2942  000C82  0E00               	movlw	high _grid
  2943  000C84  6E3C               	movwf	(??_submit+3)^0,c
  2944  000C86  0E08               	movlw	8
  2945  000C88  263B               	addwf	(??_submit+2)^0,f,c
  2946  000C8A  0E00               	movlw	0
  2947  000C8C  223C               	addwfc	(??_submit+3)^0,f,c
  2948  000C8E  5039               	movf	??_submit^0,w,c
  2949  000C90  263B               	addwf	(??_submit+2)^0,f,c
  2950  000C92  503A               	movf	(??_submit+1)^0,w,c
  2951  000C94  223C               	addwfc	(??_submit+3)^0,f,c
  2952  000C96  501C               	movf	(_position+1)^0,w,c
  2953  000C98  243B               	addwf	(??_submit+2)^0,w,c
  2954  000C9A  6ED9               	movwf	fsr2l,c
  2955  000C9C  0E00               	movlw	0
  2956  000C9E  203C               	addwfc	(??_submit+3)^0,w,c
  2957  000CA0  6EDA               	movwf	fsr2h,c
  2958  000CA2  0E01               	movlw	1
  2959  000CA4  6EDF               	movwf	indf2,c
  2960  000CA6                     
  2961                           ;main.c: 416:                         grid[position.x][position.y + 1] = 1;
  2962  000CA6  501B               	movf	_position^0,w,c
  2963  000CA8  0D08               	mullw	8
  2964  000CAA  0E60               	movlw	low _grid
  2965  000CAC  6E39               	movwf	??_submit^0,c
  2966  000CAE  0E00               	movlw	high _grid
  2967  000CB0  6E3A               	movwf	(??_submit+1)^0,c
  2968  000CB2  0E01               	movlw	1
  2969  000CB4  2639               	addwf	??_submit^0,f,c
  2970  000CB6  0E00               	movlw	0
  2971  000CB8  223A               	addwfc	(??_submit+1)^0,f,c
  2972  000CBA  50F3               	movf	243,w,c
  2973  000CBC  2639               	addwf	??_submit^0,f,c
  2974  000CBE  50F4               	movf	244,w,c
  2975  000CC0  223A               	addwfc	(??_submit+1)^0,f,c
  2976  000CC2  501C               	movf	(_position+1)^0,w,c
  2977  000CC4  2439               	addwf	??_submit^0,w,c
  2978  000CC6  6ED9               	movwf	fsr2l,c
  2979  000CC8  0E00               	movlw	0
  2980  000CCA  203A               	addwfc	(??_submit+1)^0,w,c
  2981  000CCC  6EDA               	movwf	fsr2h,c
  2982  000CCE  0E01               	movlw	1
  2983  000CD0  6EDF               	movwf	indf2,c
  2984  000CD2  EF11  F006         	goto	i2l1900
  2985  000CD6                     i2l1908:
  2986                           
  2987                           ;main.c: 421:                     {;main.c: 422:                         grid[position.x
      +                          ][position.y] = 1;
  2988  000CD6  501B               	movf	_position^0,w,c
  2989  000CD8  0D08               	mullw	8
  2990  000CDA  0E60               	movlw	low _grid
  2991  000CDC  6E39               	movwf	??_submit^0,c
  2992  000CDE  0E00               	movlw	high _grid
  2993  000CE0  6E3A               	movwf	(??_submit+1)^0,c
  2994  000CE2  50F3               	movf	243,w,c
  2995  000CE4  2639               	addwf	??_submit^0,f,c
  2996  000CE6  50F4               	movf	244,w,c
  2997  000CE8  223A               	addwfc	(??_submit+1)^0,f,c
  2998  000CEA  501C               	movf	(_position+1)^0,w,c
  2999  000CEC  2439               	addwf	??_submit^0,w,c
  3000  000CEE  6ED9               	movwf	fsr2l,c
  3001  000CF0  0E00               	movlw	0
  3002  000CF2  203A               	addwfc	(??_submit+1)^0,w,c
  3003  000CF4  6EDA               	movwf	fsr2h,c
  3004  000CF6  0E01               	movlw	1
  3005  000CF8  6EDF               	movwf	indf2,c
  3006                           
  3007                           ;main.c: 423:                         grid[position.x][position.y + 1] = 1;
  3008  000CFA  501B               	movf	_position^0,w,c
  3009  000CFC  0D08               	mullw	8
  3010  000CFE  0E60               	movlw	low _grid
  3011  000D00  6E39               	movwf	??_submit^0,c
  3012  000D02  0E00               	movlw	high _grid
  3013  000D04  6E3A               	movwf	(??_submit+1)^0,c
  3014  000D06  0E01               	movlw	1
  3015  000D08  2639               	addwf	??_submit^0,f,c
  3016  000D0A  0E00               	movlw	0
  3017  000D0C  223A               	addwfc	(??_submit+1)^0,f,c
  3018  000D0E  50F3               	movf	243,w,c
  3019  000D10  2639               	addwf	??_submit^0,f,c
  3020  000D12  50F4               	movf	244,w,c
  3021  000D14  223A               	addwfc	(??_submit+1)^0,f,c
  3022  000D16  501C               	movf	(_position+1)^0,w,c
  3023  000D18  2439               	addwf	??_submit^0,w,c
  3024  000D1A  6ED9               	movwf	fsr2l,c
  3025  000D1C  0E00               	movlw	0
  3026  000D1E  203A               	addwfc	(??_submit+1)^0,w,c
  3027  000D20  6EDA               	movwf	fsr2h,c
  3028  000D22  0E01               	movlw	1
  3029  000D24  6EDF               	movwf	indf2,c
  3030  000D26  EF11  F006         	goto	i2l1900
  3031  000D2A                     i2l1912:
  3032                           
  3033                           ;main.c: 428:                     {;main.c: 429:                         grid[position.x
      +                          ][position.y] = 1;
  3034  000D2A  501B               	movf	_position^0,w,c
  3035  000D2C  0D08               	mullw	8
  3036  000D2E  0E60               	movlw	low _grid
  3037  000D30  6E39               	movwf	??_submit^0,c
  3038  000D32  0E00               	movlw	high _grid
  3039  000D34  6E3A               	movwf	(??_submit+1)^0,c
  3040  000D36  50F3               	movf	243,w,c
  3041  000D38  2639               	addwf	??_submit^0,f,c
  3042  000D3A  50F4               	movf	244,w,c
  3043  000D3C  223A               	addwfc	(??_submit+1)^0,f,c
  3044  000D3E  501C               	movf	(_position+1)^0,w,c
  3045  000D40  2439               	addwf	??_submit^0,w,c
  3046  000D42  6ED9               	movwf	fsr2l,c
  3047  000D44  0E00               	movlw	0
  3048  000D46  203A               	addwfc	(??_submit+1)^0,w,c
  3049  000D48  6EDA               	movwf	fsr2h,c
  3050  000D4A  0E01               	movlw	1
  3051  000D4C  6EDF               	movwf	indf2,c
  3052  000D4E                     
  3053                           ;main.c: 430:                         grid[position.x + 1][position.y] = 1;
  3054  000D4E  501B               	movf	_position^0,w,c
  3055  000D50  6E39               	movwf	??_submit^0,c
  3056  000D52  6A3A               	clrf	(??_submit+1)^0,c
  3057  000D54  90D8               	bcf	status,0,c
  3058  000D56  3639               	rlcf	??_submit^0,f,c
  3059  000D58  363A               	rlcf	(??_submit+1)^0,f,c
  3060  000D5A  90D8               	bcf	status,0,c
  3061  000D5C  3639               	rlcf	??_submit^0,f,c
  3062  000D5E  363A               	rlcf	(??_submit+1)^0,f,c
  3063  000D60  90D8               	bcf	status,0,c
  3064  000D62  3639               	rlcf	??_submit^0,f,c
  3065  000D64  363A               	rlcf	(??_submit+1)^0,f,c
  3066  000D66  0E60               	movlw	low _grid
  3067  000D68  6E3B               	movwf	(??_submit+2)^0,c
  3068  000D6A  0E00               	movlw	high _grid
  3069  000D6C  6E3C               	movwf	(??_submit+3)^0,c
  3070  000D6E  0E08               	movlw	8
  3071  000D70  263B               	addwf	(??_submit+2)^0,f,c
  3072  000D72  0E00               	movlw	0
  3073  000D74  223C               	addwfc	(??_submit+3)^0,f,c
  3074  000D76  5039               	movf	??_submit^0,w,c
  3075  000D78  263B               	addwf	(??_submit+2)^0,f,c
  3076  000D7A  503A               	movf	(??_submit+1)^0,w,c
  3077  000D7C  223C               	addwfc	(??_submit+3)^0,f,c
  3078  000D7E  501C               	movf	(_position+1)^0,w,c
  3079  000D80  243B               	addwf	(??_submit+2)^0,w,c
  3080  000D82  6ED9               	movwf	fsr2l,c
  3081  000D84  0E00               	movlw	0
  3082  000D86  203C               	addwfc	(??_submit+3)^0,w,c
  3083  000D88  6EDA               	movwf	fsr2h,c
  3084  000D8A  0E01               	movlw	1
  3085  000D8C  6EDF               	movwf	indf2,c
  3086  000D8E                     
  3087                           ;main.c: 431:                         grid[position.x][position.y + 1] = 1;
  3088  000D8E  501B               	movf	_position^0,w,c
  3089  000D90  0D08               	mullw	8
  3090  000D92  0E60               	movlw	low _grid
  3091  000D94  6E39               	movwf	??_submit^0,c
  3092  000D96  0E00               	movlw	high _grid
  3093  000D98  6E3A               	movwf	(??_submit+1)^0,c
  3094  000D9A  0E01               	movlw	1
  3095  000D9C  2639               	addwf	??_submit^0,f,c
  3096  000D9E  0E00               	movlw	0
  3097  000DA0  223A               	addwfc	(??_submit+1)^0,f,c
  3098  000DA2  50F3               	movf	243,w,c
  3099  000DA4  2639               	addwf	??_submit^0,f,c
  3100  000DA6  50F4               	movf	244,w,c
  3101  000DA8  223A               	addwfc	(??_submit+1)^0,f,c
  3102  000DAA  501C               	movf	(_position+1)^0,w,c
  3103  000DAC  2439               	addwf	??_submit^0,w,c
  3104  000DAE  6ED9               	movwf	fsr2l,c
  3105  000DB0  0E00               	movlw	0
  3106  000DB2  203A               	addwfc	(??_submit+1)^0,w,c
  3107  000DB4  6EDA               	movwf	fsr2h,c
  3108  000DB6  0E01               	movlw	1
  3109  000DB8  6EDF               	movwf	indf2,c
  3110                           
  3111                           ;main.c: 432:                         break;
  3112  000DBA  EF15  F007         	goto	i2l1926
  3113  000DBE                     i2l1920:
  3114  000DBE  5021               	movf	_rotation^0,w,c
  3115  000DC0  6E39               	movwf	??_submit^0,c
  3116  000DC2  6A3A               	clrf	(??_submit+1)^0,c
  3117                           
  3118                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3119                           ; Switch size 1, requested type "simple"
  3120                           ; Number of cases is 1, Range of values is 0 to 0
  3121                           ; switch strategies available:
  3122                           ; Name         Instructions Cycles
  3123                           ; simple_byte            4     3 (average)
  3124                           ;	Chosen strategy is simple_byte
  3125  000DC4  503A               	movf	(??_submit+1)^0,w,c
  3126  000DC6  0A00               	xorlw	0	; case 0
  3127  000DC8  B4D8               	btfsc	status,2,c
  3128  000DCA  EFE9  F006         	goto	i2l2906
  3129  000DCE  EF15  F007         	goto	i2l1926
  3130  000DD2                     i2l2906:
  3131                           
  3132                           ; Switch size 1, requested type "simple"
  3133                           ; Number of cases is 4, Range of values is 0 to 3
  3134                           ; switch strategies available:
  3135                           ; Name         Instructions Cycles
  3136                           ; simple_byte           13     7 (average)
  3137                           ;	Chosen strategy is simple_byte
  3138  000DD2  5039               	movf	??_submit^0,w,c
  3139  000DD4  0A00               	xorlw	0	; case 0
  3140  000DD6  B4D8               	btfsc	status,2,c
  3141  000DD8  EFDF  F005         	goto	i2l1896
  3142  000DDC  0A01               	xorlw	1	; case 1
  3143  000DDE  B4D8               	btfsc	status,2,c
  3144  000DE0  EF33  F006         	goto	i2l1902
  3145  000DE4  0A03               	xorlw	3	; case 2
  3146  000DE6  B4D8               	btfsc	status,2,c
  3147  000DE8  EF6B  F006         	goto	i2l1908
  3148  000DEC  0A01               	xorlw	1	; case 3
  3149  000DEE  B4D8               	btfsc	status,2,c
  3150  000DF0  EF95  F006         	goto	i2l1912
  3151  000DF4  EF15  F007         	goto	i2l1926
  3152  000DF8                     i2l1924:
  3153  000DF8  5020               	movf	_type^0,w,c
  3154  000DFA  6E39               	movwf	??_submit^0,c
  3155  000DFC  6A3A               	clrf	(??_submit+1)^0,c
  3156                           
  3157                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3158                           ; Switch size 1, requested type "simple"
  3159                           ; Number of cases is 1, Range of values is 0 to 0
  3160                           ; switch strategies available:
  3161                           ; Name         Instructions Cycles
  3162                           ; simple_byte            4     3 (average)
  3163                           ;	Chosen strategy is simple_byte
  3164  000DFE  503A               	movf	(??_submit+1)^0,w,c
  3165  000E00  0A00               	xorlw	0	; case 0
  3166  000E02  B4D8               	btfsc	status,2,c
  3167  000E04  EF06  F007         	goto	i2l2908
  3168  000E08  EF15  F007         	goto	i2l1926
  3169  000E0C                     i2l2908:
  3170                           
  3171                           ; Switch size 1, requested type "simple"
  3172                           ; Number of cases is 3, Range of values is 0 to 2
  3173                           ; switch strategies available:
  3174                           ; Name         Instructions Cycles
  3175                           ; simple_byte           10     6 (average)
  3176                           ;	Chosen strategy is simple_byte
  3177  000E0C  5039               	movf	??_submit^0,w,c
  3178  000E0E  0A00               	xorlw	0	; case 0
  3179  000E10  B4D8               	btfsc	status,2,c
  3180  000E12  EF61  F005         	goto	i2l1888
  3181  000E16  0A01               	xorlw	1	; case 1
  3182  000E18  B4D8               	btfsc	status,2,c
  3183  000E1A  EF75  F005         	goto	i2l1890
  3184  000E1E  0A03               	xorlw	3	; case 2
  3185  000E20  B4D8               	btfsc	status,2,c
  3186  000E22  EFDF  F006         	goto	i2l1920
  3187  000E26  EF15  F007         	goto	i2l1926
  3188  000E2A                     i2l1926:
  3189                           
  3190                           ;main.c: 439:         type = (type + 1) % 3;
  3191  000E2A  0E01               	movlw	1
  3192  000E2C  2420               	addwf	_type^0,w,c
  3193  000E2E  6E23               	movwf	___lwmod@dividend^0,c
  3194  000E30  6A24               	clrf	(___lwmod@dividend+1)^0,c
  3195  000E32  0E00               	movlw	0
  3196  000E34  2224               	addwfc	(___lwmod@dividend+1)^0,f,c
  3197  000E36  0E00               	movlw	0
  3198  000E38  6E26               	movwf	(___lwmod@divisor+1)^0,c
  3199  000E3A  0E03               	movlw	3
  3200  000E3C  6E25               	movwf	___lwmod@divisor^0,c
  3201  000E3E  EC0C  F00A         	call	___lwmod	;wreg free
  3202  000E42  5023               	movf	?___lwmod^0,w,c
  3203  000E44  6E20               	movwf	_type^0,c
  3204  000E46                     
  3205                           ;main.c: 440:         position = (Position){0, 0};
  3206  000E46  C017  F03D         	movff	submit@F4719,submit@4720
  3207  000E4A  C018  F03E         	movff	submit@F4719+1,submit@4720+1
  3208  000E4E  C03D  F01B         	movff	submit@4720,_position
  3209  000E52  C03E  F01C         	movff	submit@4720+1,_position+1
  3210  000E56                     
  3211                           ;main.c: 441:         rotation = 0;
  3212  000E56  0E00               	movlw	0
  3213  000E58  6E21               	movwf	_rotation^0,c
  3214  000E5A                     i2l241:
  3215  000E5A  0012               	return		;funcret
  3216  000E5C                     __end_of_submit:
  3217                           	callstack 0
  3218                           
  3219 ;; *************** function _not_intersects *****************
  3220 ;; Defined at:
  3221 ;;		line 200 in file "main.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;		None
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  intersects      1   21[COMRAM] unsigned char 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      unsigned char 
  3228 ;; Registers used:
  3229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3237 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3238 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;Total ram usage:       22 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_submit
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text14
  3249  000012                     __ptext14:
  3250                           	callstack 0
  3251  000012                     _not_intersects:
  3252                           	callstack 24
  3253  000012                     
  3254                           ;main.c: 201:     unsigned char intersects = 0;
  3255  000012  0E00               	movlw	0
  3256  000014  6E38               	movwf	not_intersects@intersects^0,c
  3257                           
  3258                           ;main.c: 202:     switch (type) {
  3259  000016  EF0C  F003         	goto	i2l1780
  3260  00001A                     i2l1660:
  3261                           
  3262                           ;main.c: 204:         {;main.c: 205:             intersects = intersects || grid[positio
      +                          n.x][position.y];
  3263  00001A  0E01               	movlw	1
  3264  00001C  6E27               	movwf	_not_intersects$120^0,c
  3265  00001E  501B               	movf	_position^0,w,c
  3266  000020  0D08               	mullw	8
  3267  000022  0E60               	movlw	low _grid
  3268  000024  6E23               	movwf	??_not_intersects^0,c
  3269  000026  0E00               	movlw	high _grid
  3270  000028  6E24               	movwf	(??_not_intersects+1)^0,c
  3271  00002A  50F3               	movf	243,w,c
  3272  00002C  2623               	addwf	??_not_intersects^0,f,c
  3273  00002E  50F4               	movf	244,w,c
  3274  000030  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3275  000032  501C               	movf	(_position+1)^0,w,c
  3276  000034  2423               	addwf	??_not_intersects^0,w,c
  3277  000036  6ED9               	movwf	fsr2l,c
  3278  000038  0E00               	movlw	0
  3279  00003A  2024               	addwfc	(??_not_intersects+1)^0,w,c
  3280  00003C  6EDA               	movwf	fsr2h,c
  3281  00003E  50DF               	movf	indf2,w,c
  3282  000040  A4D8               	btfss	status,2,c
  3283  000042  EF25  F000         	goto	i2u101_41
  3284  000046  EF27  F000         	goto	i2u101_40
  3285  00004A                     i2u101_41:
  3286  00004A  EF29  F000         	goto	i2l1666
  3287  00004E                     i2u101_40:
  3288  00004E  0E00               	movlw	0
  3289  000050  6E27               	movwf	_not_intersects$120^0,c
  3290  000052                     i2l1666:
  3291  000052  C027  F038         	movff	_not_intersects$120,not_intersects@intersects
  3292                           
  3293                           ;main.c: 206:             break;
  3294  000056  EF25  F003         	goto	i2l1782
  3295  00005A                     i2l1668:
  3296                           
  3297                           ;main.c: 209:         {;main.c: 210:             intersects = intersects || grid[positio
      +                          n.x][position.y];
  3298  00005A  0E01               	movlw	1
  3299  00005C  6E28               	movwf	_not_intersects$121^0,c
  3300  00005E  501B               	movf	_position^0,w,c
  3301  000060  0D08               	mullw	8
  3302  000062  0E60               	movlw	low _grid
  3303  000064  6E23               	movwf	??_not_intersects^0,c
  3304  000066  0E00               	movlw	high _grid
  3305  000068  6E24               	movwf	(??_not_intersects+1)^0,c
  3306  00006A  50F3               	movf	243,w,c
  3307  00006C  2623               	addwf	??_not_intersects^0,f,c
  3308  00006E  50F4               	movf	244,w,c
  3309  000070  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3310  000072  501C               	movf	(_position+1)^0,w,c
  3311  000074  2423               	addwf	??_not_intersects^0,w,c
  3312  000076  6ED9               	movwf	fsr2l,c
  3313  000078  0E00               	movlw	0
  3314  00007A  2024               	addwfc	(??_not_intersects+1)^0,w,c
  3315  00007C  6EDA               	movwf	fsr2h,c
  3316  00007E  50DF               	movf	indf2,w,c
  3317  000080  A4D8               	btfss	status,2,c
  3318  000082  EF45  F000         	goto	i2u102_41
  3319  000086  EF47  F000         	goto	i2u102_40
  3320  00008A                     i2u102_41:
  3321  00008A  EF49  F000         	goto	i2l1674
  3322  00008E                     i2u102_40:
  3323  00008E  0E00               	movlw	0
  3324  000090  6E28               	movwf	_not_intersects$121^0,c
  3325  000092                     i2l1674:
  3326  000092  C028  F038         	movff	_not_intersects$121,not_intersects@intersects
  3327                           
  3328                           ;main.c: 211:             intersects = intersects || grid[position.x + 1][position.y];
  3329  000096  0E01               	movlw	1
  3330  000098  6E29               	movwf	_not_intersects$122^0,c
  3331  00009A  5038               	movf	not_intersects@intersects^0,w,c
  3332  00009C  A4D8               	btfss	status,2,c
  3333  00009E  EF53  F000         	goto	i2u103_41
  3334  0000A2  EF55  F000         	goto	i2u103_40
  3335  0000A6                     i2u103_41:
  3336  0000A6  EF7D  F000         	goto	i2l1680
  3337  0000AA                     i2u103_40:
  3338  0000AA  501B               	movf	_position^0,w,c
  3339  0000AC  6E23               	movwf	??_not_intersects^0,c
  3340  0000AE  6A24               	clrf	(??_not_intersects+1)^0,c
  3341  0000B0  90D8               	bcf	status,0,c
  3342  0000B2  3623               	rlcf	??_not_intersects^0,f,c
  3343  0000B4  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3344  0000B6  90D8               	bcf	status,0,c
  3345  0000B8  3623               	rlcf	??_not_intersects^0,f,c
  3346  0000BA  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3347  0000BC  90D8               	bcf	status,0,c
  3348  0000BE  3623               	rlcf	??_not_intersects^0,f,c
  3349  0000C0  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3350  0000C2  0E60               	movlw	low _grid
  3351  0000C4  6E25               	movwf	(??_not_intersects+2)^0,c
  3352  0000C6  0E00               	movlw	high _grid
  3353  0000C8  6E26               	movwf	(??_not_intersects+3)^0,c
  3354  0000CA  0E08               	movlw	8
  3355  0000CC  2625               	addwf	(??_not_intersects+2)^0,f,c
  3356  0000CE  0E00               	movlw	0
  3357  0000D0  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3358  0000D2  5023               	movf	??_not_intersects^0,w,c
  3359  0000D4  2625               	addwf	(??_not_intersects+2)^0,f,c
  3360  0000D6  5024               	movf	(??_not_intersects+1)^0,w,c
  3361  0000D8  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3362  0000DA  501C               	movf	(_position+1)^0,w,c
  3363  0000DC  2425               	addwf	(??_not_intersects+2)^0,w,c
  3364  0000DE  6ED9               	movwf	fsr2l,c
  3365  0000E0  0E00               	movlw	0
  3366  0000E2  2026               	addwfc	(??_not_intersects+3)^0,w,c
  3367  0000E4  6EDA               	movwf	fsr2h,c
  3368  0000E6  50DF               	movf	indf2,w,c
  3369  0000E8  A4D8               	btfss	status,2,c
  3370  0000EA  EF79  F000         	goto	i2u104_41
  3371  0000EE  EF7B  F000         	goto	i2u104_40
  3372  0000F2                     i2u104_41:
  3373  0000F2  EF7D  F000         	goto	i2l1680
  3374  0000F6                     i2u104_40:
  3375  0000F6  0E00               	movlw	0
  3376  0000F8  6E29               	movwf	_not_intersects$122^0,c
  3377  0000FA                     i2l1680:
  3378  0000FA  C029  F038         	movff	_not_intersects$122,not_intersects@intersects
  3379                           
  3380                           ;main.c: 212:             intersects = intersects || grid[position.x][position.y + 1];
  3381  0000FE  0E01               	movlw	1
  3382  000100  6E2A               	movwf	_not_intersects$123^0,c
  3383  000102  5038               	movf	not_intersects@intersects^0,w,c
  3384  000104  A4D8               	btfss	status,2,c
  3385  000106  EF87  F000         	goto	i2u105_41
  3386  00010A  EF89  F000         	goto	i2u105_40
  3387  00010E                     i2u105_41:
  3388  00010E  EFA7  F000         	goto	i2l1686
  3389  000112                     i2u105_40:
  3390  000112  501B               	movf	_position^0,w,c
  3391  000114  0D08               	mullw	8
  3392  000116  0E60               	movlw	low _grid
  3393  000118  6E23               	movwf	??_not_intersects^0,c
  3394  00011A  0E00               	movlw	high _grid
  3395  00011C  6E24               	movwf	(??_not_intersects+1)^0,c
  3396  00011E  0E01               	movlw	1
  3397  000120  2623               	addwf	??_not_intersects^0,f,c
  3398  000122  0E00               	movlw	0
  3399  000124  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3400  000126  50F3               	movf	243,w,c
  3401  000128  2623               	addwf	??_not_intersects^0,f,c
  3402  00012A  50F4               	movf	244,w,c
  3403  00012C  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3404  00012E  501C               	movf	(_position+1)^0,w,c
  3405  000130  2423               	addwf	??_not_intersects^0,w,c
  3406  000132  6ED9               	movwf	fsr2l,c
  3407  000134  0E00               	movlw	0
  3408  000136  2024               	addwfc	(??_not_intersects+1)^0,w,c
  3409  000138  6EDA               	movwf	fsr2h,c
  3410  00013A  50DF               	movf	indf2,w,c
  3411  00013C  A4D8               	btfss	status,2,c
  3412  00013E  EFA3  F000         	goto	i2u106_41
  3413  000142  EFA5  F000         	goto	i2u106_40
  3414  000146                     i2u106_41:
  3415  000146  EFA7  F000         	goto	i2l1686
  3416  00014A                     i2u106_40:
  3417  00014A  0E00               	movlw	0
  3418  00014C  6E2A               	movwf	_not_intersects$123^0,c
  3419  00014E                     i2l1686:
  3420  00014E  C02A  F038         	movff	_not_intersects$123,not_intersects@intersects
  3421                           
  3422                           ;main.c: 213:             intersects = intersects || grid[position.x + 1][position.y + 1
      +                          ];
  3423  000152  0E01               	movlw	1
  3424  000154  6E2B               	movwf	_not_intersects$124^0,c
  3425  000156  5038               	movf	not_intersects@intersects^0,w,c
  3426  000158  A4D8               	btfss	status,2,c
  3427  00015A  EFB1  F000         	goto	i2u107_41
  3428  00015E  EFB3  F000         	goto	i2u107_40
  3429  000162                     i2u107_41:
  3430  000162  EFDB  F000         	goto	i2l1692
  3431  000166                     i2u107_40:
  3432  000166  501B               	movf	_position^0,w,c
  3433  000168  6E23               	movwf	??_not_intersects^0,c
  3434  00016A  6A24               	clrf	(??_not_intersects+1)^0,c
  3435  00016C  90D8               	bcf	status,0,c
  3436  00016E  3623               	rlcf	??_not_intersects^0,f,c
  3437  000170  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3438  000172  90D8               	bcf	status,0,c
  3439  000174  3623               	rlcf	??_not_intersects^0,f,c
  3440  000176  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3441  000178  90D8               	bcf	status,0,c
  3442  00017A  3623               	rlcf	??_not_intersects^0,f,c
  3443  00017C  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3444  00017E  0E60               	movlw	low _grid
  3445  000180  6E25               	movwf	(??_not_intersects+2)^0,c
  3446  000182  0E00               	movlw	high _grid
  3447  000184  6E26               	movwf	(??_not_intersects+3)^0,c
  3448  000186  0E09               	movlw	9
  3449  000188  2625               	addwf	(??_not_intersects+2)^0,f,c
  3450  00018A  0E00               	movlw	0
  3451  00018C  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3452  00018E  501C               	movf	(_position+1)^0,w,c
  3453  000190  2625               	addwf	(??_not_intersects+2)^0,f,c
  3454  000192  0E00               	movlw	0
  3455  000194  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3456  000196  5023               	movf	??_not_intersects^0,w,c
  3457  000198  2425               	addwf	(??_not_intersects+2)^0,w,c
  3458  00019A  6ED9               	movwf	fsr2l,c
  3459  00019C  5024               	movf	(??_not_intersects+1)^0,w,c
  3460  00019E  2026               	addwfc	(??_not_intersects+3)^0,w,c
  3461  0001A0  6EDA               	movwf	fsr2h,c
  3462  0001A2  50DF               	movf	indf2,w,c
  3463  0001A4  A4D8               	btfss	status,2,c
  3464  0001A6  EFD7  F000         	goto	i2u108_41
  3465  0001AA  EFD9  F000         	goto	i2u108_40
  3466  0001AE                     i2u108_41:
  3467  0001AE  EFDB  F000         	goto	i2l1692
  3468  0001B2                     i2u108_40:
  3469  0001B2  0E00               	movlw	0
  3470  0001B4  6E2B               	movwf	_not_intersects$124^0,c
  3471  0001B6                     i2l1692:
  3472  0001B6  C02B  F038         	movff	_not_intersects$124,not_intersects@intersects
  3473                           
  3474                           ;main.c: 214:             break;
  3475  0001BA  EF25  F003         	goto	i2l1782
  3476  0001BE                     i2l1694:
  3477                           
  3478                           ;main.c: 220:                 {;main.c: 221:                     intersects = intersects
      +                           || grid[position.x][position.y];
  3479  0001BE  0E01               	movlw	1
  3480  0001C0  6E2C               	movwf	_not_intersects$125^0,c
  3481  0001C2  501B               	movf	_position^0,w,c
  3482  0001C4  0D08               	mullw	8
  3483  0001C6  0E60               	movlw	low _grid
  3484  0001C8  6E23               	movwf	??_not_intersects^0,c
  3485  0001CA  0E00               	movlw	high _grid
  3486  0001CC  6E24               	movwf	(??_not_intersects+1)^0,c
  3487  0001CE  50F3               	movf	243,w,c
  3488  0001D0  2623               	addwf	??_not_intersects^0,f,c
  3489  0001D2  50F4               	movf	244,w,c
  3490  0001D4  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3491  0001D6  501C               	movf	(_position+1)^0,w,c
  3492  0001D8  2423               	addwf	??_not_intersects^0,w,c
  3493  0001DA  6ED9               	movwf	fsr2l,c
  3494  0001DC  0E00               	movlw	0
  3495  0001DE  2024               	addwfc	(??_not_intersects+1)^0,w,c
  3496  0001E0  6EDA               	movwf	fsr2h,c
  3497  0001E2  50DF               	movf	indf2,w,c
  3498  0001E4  A4D8               	btfss	status,2,c
  3499  0001E6  EFF7  F000         	goto	i2u109_41
  3500  0001EA  EFF9  F000         	goto	i2u109_40
  3501  0001EE                     i2u109_41:
  3502  0001EE  EFFB  F000         	goto	i2l1700
  3503  0001F2                     i2u109_40:
  3504  0001F2  0E00               	movlw	0
  3505  0001F4  6E2C               	movwf	_not_intersects$125^0,c
  3506  0001F6                     i2l1700:
  3507  0001F6  C02C  F038         	movff	_not_intersects$125,not_intersects@intersects
  3508                           
  3509                           ;main.c: 222:                     intersects = intersects || grid[position.x + 1][positi
      +                          on.y];
  3510  0001FA  0E01               	movlw	1
  3511  0001FC  6E2D               	movwf	_not_intersects$126^0,c
  3512  0001FE  5038               	movf	not_intersects@intersects^0,w,c
  3513  000200  A4D8               	btfss	status,2,c
  3514  000202  EF05  F001         	goto	i2u110_41
  3515  000206  EF07  F001         	goto	i2u110_40
  3516  00020A                     i2u110_41:
  3517  00020A  EF2F  F001         	goto	i2l1706
  3518  00020E                     i2u110_40:
  3519  00020E  501B               	movf	_position^0,w,c
  3520  000210  6E23               	movwf	??_not_intersects^0,c
  3521  000212  6A24               	clrf	(??_not_intersects+1)^0,c
  3522  000214  90D8               	bcf	status,0,c
  3523  000216  3623               	rlcf	??_not_intersects^0,f,c
  3524  000218  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3525  00021A  90D8               	bcf	status,0,c
  3526  00021C  3623               	rlcf	??_not_intersects^0,f,c
  3527  00021E  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3528  000220  90D8               	bcf	status,0,c
  3529  000222  3623               	rlcf	??_not_intersects^0,f,c
  3530  000224  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3531  000226  0E60               	movlw	low _grid
  3532  000228  6E25               	movwf	(??_not_intersects+2)^0,c
  3533  00022A  0E00               	movlw	high _grid
  3534  00022C  6E26               	movwf	(??_not_intersects+3)^0,c
  3535  00022E  0E08               	movlw	8
  3536  000230  2625               	addwf	(??_not_intersects+2)^0,f,c
  3537  000232  0E00               	movlw	0
  3538  000234  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3539  000236  5023               	movf	??_not_intersects^0,w,c
  3540  000238  2625               	addwf	(??_not_intersects+2)^0,f,c
  3541  00023A  5024               	movf	(??_not_intersects+1)^0,w,c
  3542  00023C  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3543  00023E  501C               	movf	(_position+1)^0,w,c
  3544  000240  2425               	addwf	(??_not_intersects+2)^0,w,c
  3545  000242  6ED9               	movwf	fsr2l,c
  3546  000244  0E00               	movlw	0
  3547  000246  2026               	addwfc	(??_not_intersects+3)^0,w,c
  3548  000248  6EDA               	movwf	fsr2h,c
  3549  00024A  50DF               	movf	indf2,w,c
  3550  00024C  A4D8               	btfss	status,2,c
  3551  00024E  EF2B  F001         	goto	i2u111_41
  3552  000252  EF2D  F001         	goto	i2u111_40
  3553  000256                     i2u111_41:
  3554  000256  EF2F  F001         	goto	i2l1706
  3555  00025A                     i2u111_40:
  3556  00025A  0E00               	movlw	0
  3557  00025C  6E2D               	movwf	_not_intersects$126^0,c
  3558  00025E                     i2l1706:
  3559  00025E  C02D  F038         	movff	_not_intersects$126,not_intersects@intersects
  3560                           
  3561                           ;main.c: 223:                     intersects = intersects || grid[position.x + 1][positi
      +                          on.y + 1];
  3562  000262  0E01               	movlw	1
  3563  000264  6E2E               	movwf	_not_intersects$127^0,c
  3564  000266  5038               	movf	not_intersects@intersects^0,w,c
  3565  000268  A4D8               	btfss	status,2,c
  3566  00026A  EF39  F001         	goto	i2u112_41
  3567  00026E  EF3B  F001         	goto	i2u112_40
  3568  000272                     i2u112_41:
  3569  000272  EF63  F001         	goto	i2l1712
  3570  000276                     i2u112_40:
  3571  000276  501B               	movf	_position^0,w,c
  3572  000278  6E23               	movwf	??_not_intersects^0,c
  3573  00027A  6A24               	clrf	(??_not_intersects+1)^0,c
  3574  00027C  90D8               	bcf	status,0,c
  3575  00027E  3623               	rlcf	??_not_intersects^0,f,c
  3576  000280  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3577  000282  90D8               	bcf	status,0,c
  3578  000284  3623               	rlcf	??_not_intersects^0,f,c
  3579  000286  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3580  000288  90D8               	bcf	status,0,c
  3581  00028A  3623               	rlcf	??_not_intersects^0,f,c
  3582  00028C  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3583  00028E  0E60               	movlw	low _grid
  3584  000290  6E25               	movwf	(??_not_intersects+2)^0,c
  3585  000292  0E00               	movlw	high _grid
  3586  000294  6E26               	movwf	(??_not_intersects+3)^0,c
  3587  000296  0E09               	movlw	9
  3588  000298  2625               	addwf	(??_not_intersects+2)^0,f,c
  3589  00029A  0E00               	movlw	0
  3590  00029C  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3591  00029E  501C               	movf	(_position+1)^0,w,c
  3592  0002A0  2625               	addwf	(??_not_intersects+2)^0,f,c
  3593  0002A2  0E00               	movlw	0
  3594  0002A4  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3595  0002A6  5023               	movf	??_not_intersects^0,w,c
  3596  0002A8  2425               	addwf	(??_not_intersects+2)^0,w,c
  3597  0002AA  6ED9               	movwf	fsr2l,c
  3598  0002AC  5024               	movf	(??_not_intersects+1)^0,w,c
  3599  0002AE  2026               	addwfc	(??_not_intersects+3)^0,w,c
  3600  0002B0  6EDA               	movwf	fsr2h,c
  3601  0002B2  50DF               	movf	indf2,w,c
  3602  0002B4  A4D8               	btfss	status,2,c
  3603  0002B6  EF5F  F001         	goto	i2u113_41
  3604  0002BA  EF61  F001         	goto	i2u113_40
  3605  0002BE                     i2u113_41:
  3606  0002BE  EF63  F001         	goto	i2l1712
  3607  0002C2                     i2u113_40:
  3608  0002C2  0E00               	movlw	0
  3609  0002C4  6E2E               	movwf	_not_intersects$127^0,c
  3610  0002C6                     i2l1712:
  3611  0002C6  C02E  F038         	movff	_not_intersects$127,not_intersects@intersects
  3612                           
  3613                           ;main.c: 224:                     break;
  3614  0002CA  EF25  F003         	goto	i2l1782
  3615  0002CE                     i2l1714:
  3616                           
  3617                           ;main.c: 227:                 {;main.c: 228:                     intersects = intersects
      +                           || grid[position.x + 1][position.y];
  3618  0002CE  0E01               	movlw	1
  3619  0002D0  6E2F               	movwf	_not_intersects$128^0,c
  3620  0002D2  501B               	movf	_position^0,w,c
  3621  0002D4  6E23               	movwf	??_not_intersects^0,c
  3622  0002D6  6A24               	clrf	(??_not_intersects+1)^0,c
  3623  0002D8  90D8               	bcf	status,0,c
  3624  0002DA  3623               	rlcf	??_not_intersects^0,f,c
  3625  0002DC  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3626  0002DE  90D8               	bcf	status,0,c
  3627  0002E0  3623               	rlcf	??_not_intersects^0,f,c
  3628  0002E2  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3629  0002E4  90D8               	bcf	status,0,c
  3630  0002E6  3623               	rlcf	??_not_intersects^0,f,c
  3631  0002E8  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3632  0002EA  0E60               	movlw	low _grid
  3633  0002EC  6E25               	movwf	(??_not_intersects+2)^0,c
  3634  0002EE  0E00               	movlw	high _grid
  3635  0002F0  6E26               	movwf	(??_not_intersects+3)^0,c
  3636  0002F2  0E08               	movlw	8
  3637  0002F4  2625               	addwf	(??_not_intersects+2)^0,f,c
  3638  0002F6  0E00               	movlw	0
  3639  0002F8  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3640  0002FA  5023               	movf	??_not_intersects^0,w,c
  3641  0002FC  2625               	addwf	(??_not_intersects+2)^0,f,c
  3642  0002FE  5024               	movf	(??_not_intersects+1)^0,w,c
  3643  000300  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3644  000302  501C               	movf	(_position+1)^0,w,c
  3645  000304  2425               	addwf	(??_not_intersects+2)^0,w,c
  3646  000306  6ED9               	movwf	fsr2l,c
  3647  000308  0E00               	movlw	0
  3648  00030A  2026               	addwfc	(??_not_intersects+3)^0,w,c
  3649  00030C  6EDA               	movwf	fsr2h,c
  3650  00030E  50DF               	movf	indf2,w,c
  3651  000310  A4D8               	btfss	status,2,c
  3652  000312  EF8D  F001         	goto	i2u114_41
  3653  000316  EF8F  F001         	goto	i2u114_40
  3654  00031A                     i2u114_41:
  3655  00031A  EF91  F001         	goto	i2l1720
  3656  00031E                     i2u114_40:
  3657  00031E  0E00               	movlw	0
  3658  000320  6E2F               	movwf	_not_intersects$128^0,c
  3659  000322                     i2l1720:
  3660  000322  C02F  F038         	movff	_not_intersects$128,not_intersects@intersects
  3661                           
  3662                           ;main.c: 229:                     intersects = intersects || grid[position.x][position.y
      +                           + 1];
  3663  000326  0E01               	movlw	1
  3664  000328  6E30               	movwf	_not_intersects$129^0,c
  3665  00032A  5038               	movf	not_intersects@intersects^0,w,c
  3666  00032C  A4D8               	btfss	status,2,c
  3667  00032E  EF9B  F001         	goto	i2u115_41
  3668  000332  EF9D  F001         	goto	i2u115_40
  3669  000336                     i2u115_41:
  3670  000336  EFBB  F001         	goto	i2l1726
  3671  00033A                     i2u115_40:
  3672  00033A  501B               	movf	_position^0,w,c
  3673  00033C  0D08               	mullw	8
  3674  00033E  0E60               	movlw	low _grid
  3675  000340  6E23               	movwf	??_not_intersects^0,c
  3676  000342  0E00               	movlw	high _grid
  3677  000344  6E24               	movwf	(??_not_intersects+1)^0,c
  3678  000346  0E01               	movlw	1
  3679  000348  2623               	addwf	??_not_intersects^0,f,c
  3680  00034A  0E00               	movlw	0
  3681  00034C  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3682  00034E  50F3               	movf	243,w,c
  3683  000350  2623               	addwf	??_not_intersects^0,f,c
  3684  000352  50F4               	movf	244,w,c
  3685  000354  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3686  000356  501C               	movf	(_position+1)^0,w,c
  3687  000358  2423               	addwf	??_not_intersects^0,w,c
  3688  00035A  6ED9               	movwf	fsr2l,c
  3689  00035C  0E00               	movlw	0
  3690  00035E  2024               	addwfc	(??_not_intersects+1)^0,w,c
  3691  000360  6EDA               	movwf	fsr2h,c
  3692  000362  50DF               	movf	indf2,w,c
  3693  000364  A4D8               	btfss	status,2,c
  3694  000366  EFB7  F001         	goto	i2u116_41
  3695  00036A  EFB9  F001         	goto	i2u116_40
  3696  00036E                     i2u116_41:
  3697  00036E  EFBB  F001         	goto	i2l1726
  3698  000372                     i2u116_40:
  3699  000372  0E00               	movlw	0
  3700  000374  6E30               	movwf	_not_intersects$129^0,c
  3701  000376                     i2l1726:
  3702  000376  C030  F038         	movff	_not_intersects$129,not_intersects@intersects
  3703                           
  3704                           ;main.c: 230:                     intersects = intersects || grid[position.x + 1][positi
      +                          on.y + 1];
  3705  00037A  0E01               	movlw	1
  3706  00037C  6E31               	movwf	_not_intersects$130^0,c
  3707  00037E  5038               	movf	not_intersects@intersects^0,w,c
  3708  000380  A4D8               	btfss	status,2,c
  3709  000382  EFC5  F001         	goto	i2u117_41
  3710  000386  EFC7  F001         	goto	i2u117_40
  3711  00038A                     i2u117_41:
  3712  00038A  EFEF  F001         	goto	i2l1732
  3713  00038E                     i2u117_40:
  3714  00038E  501B               	movf	_position^0,w,c
  3715  000390  6E23               	movwf	??_not_intersects^0,c
  3716  000392  6A24               	clrf	(??_not_intersects+1)^0,c
  3717  000394  90D8               	bcf	status,0,c
  3718  000396  3623               	rlcf	??_not_intersects^0,f,c
  3719  000398  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3720  00039A  90D8               	bcf	status,0,c
  3721  00039C  3623               	rlcf	??_not_intersects^0,f,c
  3722  00039E  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3723  0003A0  90D8               	bcf	status,0,c
  3724  0003A2  3623               	rlcf	??_not_intersects^0,f,c
  3725  0003A4  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3726  0003A6  0E60               	movlw	low _grid
  3727  0003A8  6E25               	movwf	(??_not_intersects+2)^0,c
  3728  0003AA  0E00               	movlw	high _grid
  3729  0003AC  6E26               	movwf	(??_not_intersects+3)^0,c
  3730  0003AE  0E09               	movlw	9
  3731  0003B0  2625               	addwf	(??_not_intersects+2)^0,f,c
  3732  0003B2  0E00               	movlw	0
  3733  0003B4  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3734  0003B6  501C               	movf	(_position+1)^0,w,c
  3735  0003B8  2625               	addwf	(??_not_intersects+2)^0,f,c
  3736  0003BA  0E00               	movlw	0
  3737  0003BC  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3738  0003BE  5023               	movf	??_not_intersects^0,w,c
  3739  0003C0  2425               	addwf	(??_not_intersects+2)^0,w,c
  3740  0003C2  6ED9               	movwf	fsr2l,c
  3741  0003C4  5024               	movf	(??_not_intersects+1)^0,w,c
  3742  0003C6  2026               	addwfc	(??_not_intersects+3)^0,w,c
  3743  0003C8  6EDA               	movwf	fsr2h,c
  3744  0003CA  50DF               	movf	indf2,w,c
  3745  0003CC  A4D8               	btfss	status,2,c
  3746  0003CE  EFEB  F001         	goto	i2u118_41
  3747  0003D2  EFED  F001         	goto	i2u118_40
  3748  0003D6                     i2u118_41:
  3749  0003D6  EFEF  F001         	goto	i2l1732
  3750  0003DA                     i2u118_40:
  3751  0003DA  0E00               	movlw	0
  3752  0003DC  6E31               	movwf	_not_intersects$130^0,c
  3753  0003DE                     i2l1732:
  3754  0003DE  C031  F038         	movff	_not_intersects$130,not_intersects@intersects
  3755                           
  3756                           ;main.c: 231:                     break;
  3757  0003E2  EF25  F003         	goto	i2l1782
  3758  0003E6                     i2l1734:
  3759                           
  3760                           ;main.c: 234:                 {;main.c: 235:                     intersects = intersects
      +                           || grid[position.x][position.y];
  3761  0003E6  0E01               	movlw	1
  3762  0003E8  6E32               	movwf	_not_intersects$131^0,c
  3763  0003EA  501B               	movf	_position^0,w,c
  3764  0003EC  0D08               	mullw	8
  3765  0003EE  0E60               	movlw	low _grid
  3766  0003F0  6E23               	movwf	??_not_intersects^0,c
  3767  0003F2  0E00               	movlw	high _grid
  3768  0003F4  6E24               	movwf	(??_not_intersects+1)^0,c
  3769  0003F6  50F3               	movf	243,w,c
  3770  0003F8  2623               	addwf	??_not_intersects^0,f,c
  3771  0003FA  50F4               	movf	244,w,c
  3772  0003FC  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3773  0003FE  501C               	movf	(_position+1)^0,w,c
  3774  000400  2423               	addwf	??_not_intersects^0,w,c
  3775  000402  6ED9               	movwf	fsr2l,c
  3776  000404  0E00               	movlw	0
  3777  000406  2024               	addwfc	(??_not_intersects+1)^0,w,c
  3778  000408  6EDA               	movwf	fsr2h,c
  3779  00040A  50DF               	movf	indf2,w,c
  3780  00040C  A4D8               	btfss	status,2,c
  3781  00040E  EF0B  F002         	goto	i2u119_41
  3782  000412  EF0D  F002         	goto	i2u119_40
  3783  000416                     i2u119_41:
  3784  000416  EF0F  F002         	goto	i2l1740
  3785  00041A                     i2u119_40:
  3786  00041A  0E00               	movlw	0
  3787  00041C  6E32               	movwf	_not_intersects$131^0,c
  3788  00041E                     i2l1740:
  3789  00041E  C032  F038         	movff	_not_intersects$131,not_intersects@intersects
  3790                           
  3791                           ;main.c: 236:                     intersects = intersects || grid[position.x][position.y
      +                           + 1];
  3792  000422  0E01               	movlw	1
  3793  000424  6E33               	movwf	_not_intersects$132^0,c
  3794  000426  5038               	movf	not_intersects@intersects^0,w,c
  3795  000428  A4D8               	btfss	status,2,c
  3796  00042A  EF19  F002         	goto	i2u120_41
  3797  00042E  EF1B  F002         	goto	i2u120_40
  3798  000432                     i2u120_41:
  3799  000432  EF39  F002         	goto	i2l1746
  3800  000436                     i2u120_40:
  3801  000436  501B               	movf	_position^0,w,c
  3802  000438  0D08               	mullw	8
  3803  00043A  0E60               	movlw	low _grid
  3804  00043C  6E23               	movwf	??_not_intersects^0,c
  3805  00043E  0E00               	movlw	high _grid
  3806  000440  6E24               	movwf	(??_not_intersects+1)^0,c
  3807  000442  0E01               	movlw	1
  3808  000444  2623               	addwf	??_not_intersects^0,f,c
  3809  000446  0E00               	movlw	0
  3810  000448  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3811  00044A  50F3               	movf	243,w,c
  3812  00044C  2623               	addwf	??_not_intersects^0,f,c
  3813  00044E  50F4               	movf	244,w,c
  3814  000450  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3815  000452  501C               	movf	(_position+1)^0,w,c
  3816  000454  2423               	addwf	??_not_intersects^0,w,c
  3817  000456  6ED9               	movwf	fsr2l,c
  3818  000458  0E00               	movlw	0
  3819  00045A  2024               	addwfc	(??_not_intersects+1)^0,w,c
  3820  00045C  6EDA               	movwf	fsr2h,c
  3821  00045E  50DF               	movf	indf2,w,c
  3822  000460  A4D8               	btfss	status,2,c
  3823  000462  EF35  F002         	goto	i2u121_41
  3824  000466  EF37  F002         	goto	i2u121_40
  3825  00046A                     i2u121_41:
  3826  00046A  EF39  F002         	goto	i2l1746
  3827  00046E                     i2u121_40:
  3828  00046E  0E00               	movlw	0
  3829  000470  6E33               	movwf	_not_intersects$132^0,c
  3830  000472                     i2l1746:
  3831  000472  C033  F038         	movff	_not_intersects$132,not_intersects@intersects
  3832                           
  3833                           ;main.c: 237:                     intersects = intersects || grid[position.x + 1][positi
      +                          on.y + 1];
  3834  000476  0E01               	movlw	1
  3835  000478  6E34               	movwf	_not_intersects$133^0,c
  3836  00047A  5038               	movf	not_intersects@intersects^0,w,c
  3837  00047C  A4D8               	btfss	status,2,c
  3838  00047E  EF43  F002         	goto	i2u122_41
  3839  000482  EF45  F002         	goto	i2u122_40
  3840  000486                     i2u122_41:
  3841  000486  EF6D  F002         	goto	i2l1752
  3842  00048A                     i2u122_40:
  3843  00048A  501B               	movf	_position^0,w,c
  3844  00048C  6E23               	movwf	??_not_intersects^0,c
  3845  00048E  6A24               	clrf	(??_not_intersects+1)^0,c
  3846  000490  90D8               	bcf	status,0,c
  3847  000492  3623               	rlcf	??_not_intersects^0,f,c
  3848  000494  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3849  000496  90D8               	bcf	status,0,c
  3850  000498  3623               	rlcf	??_not_intersects^0,f,c
  3851  00049A  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3852  00049C  90D8               	bcf	status,0,c
  3853  00049E  3623               	rlcf	??_not_intersects^0,f,c
  3854  0004A0  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3855  0004A2  0E60               	movlw	low _grid
  3856  0004A4  6E25               	movwf	(??_not_intersects+2)^0,c
  3857  0004A6  0E00               	movlw	high _grid
  3858  0004A8  6E26               	movwf	(??_not_intersects+3)^0,c
  3859  0004AA  0E09               	movlw	9
  3860  0004AC  2625               	addwf	(??_not_intersects+2)^0,f,c
  3861  0004AE  0E00               	movlw	0
  3862  0004B0  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3863  0004B2  501C               	movf	(_position+1)^0,w,c
  3864  0004B4  2625               	addwf	(??_not_intersects+2)^0,f,c
  3865  0004B6  0E00               	movlw	0
  3866  0004B8  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3867  0004BA  5023               	movf	??_not_intersects^0,w,c
  3868  0004BC  2425               	addwf	(??_not_intersects+2)^0,w,c
  3869  0004BE  6ED9               	movwf	fsr2l,c
  3870  0004C0  5024               	movf	(??_not_intersects+1)^0,w,c
  3871  0004C2  2026               	addwfc	(??_not_intersects+3)^0,w,c
  3872  0004C4  6EDA               	movwf	fsr2h,c
  3873  0004C6  50DF               	movf	indf2,w,c
  3874  0004C8  A4D8               	btfss	status,2,c
  3875  0004CA  EF69  F002         	goto	i2u123_41
  3876  0004CE  EF6B  F002         	goto	i2u123_40
  3877  0004D2                     i2u123_41:
  3878  0004D2  EF6D  F002         	goto	i2l1752
  3879  0004D6                     i2u123_40:
  3880  0004D6  0E00               	movlw	0
  3881  0004D8  6E34               	movwf	_not_intersects$133^0,c
  3882  0004DA                     i2l1752:
  3883  0004DA  C034  F038         	movff	_not_intersects$133,not_intersects@intersects
  3884                           
  3885                           ;main.c: 238:                     break;
  3886  0004DE  EF25  F003         	goto	i2l1782
  3887  0004E2                     i2l1754:
  3888                           
  3889                           ;main.c: 241:                 {;main.c: 242:                     intersects = intersects
      +                           || grid[position.x][position.y];
  3890  0004E2  0E01               	movlw	1
  3891  0004E4  6E35               	movwf	_not_intersects$134^0,c
  3892  0004E6  501B               	movf	_position^0,w,c
  3893  0004E8  0D08               	mullw	8
  3894  0004EA  0E60               	movlw	low _grid
  3895  0004EC  6E23               	movwf	??_not_intersects^0,c
  3896  0004EE  0E00               	movlw	high _grid
  3897  0004F0  6E24               	movwf	(??_not_intersects+1)^0,c
  3898  0004F2  50F3               	movf	243,w,c
  3899  0004F4  2623               	addwf	??_not_intersects^0,f,c
  3900  0004F6  50F4               	movf	244,w,c
  3901  0004F8  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3902  0004FA  501C               	movf	(_position+1)^0,w,c
  3903  0004FC  2423               	addwf	??_not_intersects^0,w,c
  3904  0004FE  6ED9               	movwf	fsr2l,c
  3905  000500  0E00               	movlw	0
  3906  000502  2024               	addwfc	(??_not_intersects+1)^0,w,c
  3907  000504  6EDA               	movwf	fsr2h,c
  3908  000506  50DF               	movf	indf2,w,c
  3909  000508  A4D8               	btfss	status,2,c
  3910  00050A  EF89  F002         	goto	i2u124_41
  3911  00050E  EF8B  F002         	goto	i2u124_40
  3912  000512                     i2u124_41:
  3913  000512  EF8D  F002         	goto	i2l1760
  3914  000516                     i2u124_40:
  3915  000516  0E00               	movlw	0
  3916  000518  6E35               	movwf	_not_intersects$134^0,c
  3917  00051A                     i2l1760:
  3918  00051A  C035  F038         	movff	_not_intersects$134,not_intersects@intersects
  3919                           
  3920                           ;main.c: 243:                     intersects = intersects || grid[position.x + 1][positi
      +                          on.y];
  3921  00051E  0E01               	movlw	1
  3922  000520  6E36               	movwf	_not_intersects$135^0,c
  3923  000522  5038               	movf	not_intersects@intersects^0,w,c
  3924  000524  A4D8               	btfss	status,2,c
  3925  000526  EF97  F002         	goto	i2u125_41
  3926  00052A  EF99  F002         	goto	i2u125_40
  3927  00052E                     i2u125_41:
  3928  00052E  EFC1  F002         	goto	i2l1766
  3929  000532                     i2u125_40:
  3930  000532  501B               	movf	_position^0,w,c
  3931  000534  6E23               	movwf	??_not_intersects^0,c
  3932  000536  6A24               	clrf	(??_not_intersects+1)^0,c
  3933  000538  90D8               	bcf	status,0,c
  3934  00053A  3623               	rlcf	??_not_intersects^0,f,c
  3935  00053C  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3936  00053E  90D8               	bcf	status,0,c
  3937  000540  3623               	rlcf	??_not_intersects^0,f,c
  3938  000542  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3939  000544  90D8               	bcf	status,0,c
  3940  000546  3623               	rlcf	??_not_intersects^0,f,c
  3941  000548  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3942  00054A  0E60               	movlw	low _grid
  3943  00054C  6E25               	movwf	(??_not_intersects+2)^0,c
  3944  00054E  0E00               	movlw	high _grid
  3945  000550  6E26               	movwf	(??_not_intersects+3)^0,c
  3946  000552  0E08               	movlw	8
  3947  000554  2625               	addwf	(??_not_intersects+2)^0,f,c
  3948  000556  0E00               	movlw	0
  3949  000558  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3950  00055A  5023               	movf	??_not_intersects^0,w,c
  3951  00055C  2625               	addwf	(??_not_intersects+2)^0,f,c
  3952  00055E  5024               	movf	(??_not_intersects+1)^0,w,c
  3953  000560  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3954  000562  501C               	movf	(_position+1)^0,w,c
  3955  000564  2425               	addwf	(??_not_intersects+2)^0,w,c
  3956  000566  6ED9               	movwf	fsr2l,c
  3957  000568  0E00               	movlw	0
  3958  00056A  2026               	addwfc	(??_not_intersects+3)^0,w,c
  3959  00056C  6EDA               	movwf	fsr2h,c
  3960  00056E  50DF               	movf	indf2,w,c
  3961  000570  A4D8               	btfss	status,2,c
  3962  000572  EFBD  F002         	goto	i2u126_41
  3963  000576  EFBF  F002         	goto	i2u126_40
  3964  00057A                     i2u126_41:
  3965  00057A  EFC1  F002         	goto	i2l1766
  3966  00057E                     i2u126_40:
  3967  00057E  0E00               	movlw	0
  3968  000580  6E36               	movwf	_not_intersects$135^0,c
  3969  000582                     i2l1766:
  3970  000582  C036  F038         	movff	_not_intersects$135,not_intersects@intersects
  3971                           
  3972                           ;main.c: 244:                     intersects = intersects || grid[position.x][position.y
      +                           + 1];
  3973  000586  0E01               	movlw	1
  3974  000588  6E37               	movwf	_not_intersects$136^0,c
  3975  00058A  5038               	movf	not_intersects@intersects^0,w,c
  3976  00058C  A4D8               	btfss	status,2,c
  3977  00058E  EFCB  F002         	goto	i2u127_41
  3978  000592  EFCD  F002         	goto	i2u127_40
  3979  000596                     i2u127_41:
  3980  000596  EFEB  F002         	goto	i2l1772
  3981  00059A                     i2u127_40:
  3982  00059A  501B               	movf	_position^0,w,c
  3983  00059C  0D08               	mullw	8
  3984  00059E  0E60               	movlw	low _grid
  3985  0005A0  6E23               	movwf	??_not_intersects^0,c
  3986  0005A2  0E00               	movlw	high _grid
  3987  0005A4  6E24               	movwf	(??_not_intersects+1)^0,c
  3988  0005A6  0E01               	movlw	1
  3989  0005A8  2623               	addwf	??_not_intersects^0,f,c
  3990  0005AA  0E00               	movlw	0
  3991  0005AC  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3992  0005AE  50F3               	movf	243,w,c
  3993  0005B0  2623               	addwf	??_not_intersects^0,f,c
  3994  0005B2  50F4               	movf	244,w,c
  3995  0005B4  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3996  0005B6  501C               	movf	(_position+1)^0,w,c
  3997  0005B8  2423               	addwf	??_not_intersects^0,w,c
  3998  0005BA  6ED9               	movwf	fsr2l,c
  3999  0005BC  0E00               	movlw	0
  4000  0005BE  2024               	addwfc	(??_not_intersects+1)^0,w,c
  4001  0005C0  6EDA               	movwf	fsr2h,c
  4002  0005C2  50DF               	movf	indf2,w,c
  4003  0005C4  A4D8               	btfss	status,2,c
  4004  0005C6  EFE7  F002         	goto	i2u128_41
  4005  0005CA  EFE9  F002         	goto	i2u128_40
  4006  0005CE                     i2u128_41:
  4007  0005CE  EFEB  F002         	goto	i2l1772
  4008  0005D2                     i2u128_40:
  4009  0005D2  0E00               	movlw	0
  4010  0005D4  6E37               	movwf	_not_intersects$136^0,c
  4011  0005D6                     i2l1772:
  4012  0005D6  C037  F038         	movff	_not_intersects$136,not_intersects@intersects
  4013                           
  4014                           ;main.c: 245:                     break;
  4015  0005DA  EF25  F003         	goto	i2l1782
  4016  0005DE                     i2l1776:
  4017  0005DE  5021               	movf	_rotation^0,w,c
  4018  0005E0  6E23               	movwf	??_not_intersects^0,c
  4019  0005E2  6A24               	clrf	(??_not_intersects+1)^0,c
  4020                           
  4021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4022                           ; Switch size 1, requested type "simple"
  4023                           ; Number of cases is 1, Range of values is 0 to 0
  4024                           ; switch strategies available:
  4025                           ; Name         Instructions Cycles
  4026                           ; simple_byte            4     3 (average)
  4027                           ;	Chosen strategy is simple_byte
  4028  0005E4  5024               	movf	(??_not_intersects+1)^0,w,c
  4029  0005E6  0A00               	xorlw	0	; case 0
  4030  0005E8  B4D8               	btfsc	status,2,c
  4031  0005EA  EFF9  F002         	goto	i2l2910
  4032  0005EE  EF25  F003         	goto	i2l1782
  4033  0005F2                     i2l2910:
  4034                           
  4035                           ; Switch size 1, requested type "simple"
  4036                           ; Number of cases is 4, Range of values is 0 to 3
  4037                           ; switch strategies available:
  4038                           ; Name         Instructions Cycles
  4039                           ; simple_byte           13     7 (average)
  4040                           ;	Chosen strategy is simple_byte
  4041  0005F2  5023               	movf	??_not_intersects^0,w,c
  4042  0005F4  0A00               	xorlw	0	; case 0
  4043  0005F6  B4D8               	btfsc	status,2,c
  4044  0005F8  EFDF  F000         	goto	i2l1694
  4045  0005FC  0A01               	xorlw	1	; case 1
  4046  0005FE  B4D8               	btfsc	status,2,c
  4047  000600  EF67  F001         	goto	i2l1714
  4048  000604  0A03               	xorlw	3	; case 2
  4049  000606  B4D8               	btfsc	status,2,c
  4050  000608  EFF3  F001         	goto	i2l1734
  4051  00060C  0A01               	xorlw	1	; case 3
  4052  00060E  B4D8               	btfsc	status,2,c
  4053  000610  EF71  F002         	goto	i2l1754
  4054  000614  EF25  F003         	goto	i2l1782
  4055  000618                     i2l1780:
  4056  000618  5020               	movf	_type^0,w,c
  4057  00061A  6E23               	movwf	??_not_intersects^0,c
  4058  00061C  6A24               	clrf	(??_not_intersects+1)^0,c
  4059                           
  4060                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4061                           ; Switch size 1, requested type "simple"
  4062                           ; Number of cases is 1, Range of values is 0 to 0
  4063                           ; switch strategies available:
  4064                           ; Name         Instructions Cycles
  4065                           ; simple_byte            4     3 (average)
  4066                           ;	Chosen strategy is simple_byte
  4067  00061E  5024               	movf	(??_not_intersects+1)^0,w,c
  4068  000620  0A00               	xorlw	0	; case 0
  4069  000622  B4D8               	btfsc	status,2,c
  4070  000624  EF16  F003         	goto	i2l2912
  4071  000628  EF25  F003         	goto	i2l1782
  4072  00062C                     i2l2912:
  4073                           
  4074                           ; Switch size 1, requested type "simple"
  4075                           ; Number of cases is 3, Range of values is 0 to 2
  4076                           ; switch strategies available:
  4077                           ; Name         Instructions Cycles
  4078                           ; simple_byte           10     6 (average)
  4079                           ;	Chosen strategy is simple_byte
  4080  00062C  5023               	movf	??_not_intersects^0,w,c
  4081  00062E  0A00               	xorlw	0	; case 0
  4082  000630  B4D8               	btfsc	status,2,c
  4083  000632  EF0D  F000         	goto	i2l1660
  4084  000636  0A01               	xorlw	1	; case 1
  4085  000638  B4D8               	btfsc	status,2,c
  4086  00063A  EF2D  F000         	goto	i2l1668
  4087  00063E  0A03               	xorlw	3	; case 2
  4088  000640  B4D8               	btfsc	status,2,c
  4089  000642  EFEF  F002         	goto	i2l1776
  4090  000646  EF25  F003         	goto	i2l1782
  4091  00064A                     i2l1782:
  4092                           
  4093                           ;main.c: 252:     return !intersects;
  4094  00064A  5038               	movf	not_intersects@intersects^0,w,c
  4095  00064C  B4D8               	btfsc	status,2,c
  4096  00064E  EF2B  F003         	goto	i2u129_41
  4097  000652  EF2E  F003         	goto	i2u129_40
  4098  000656                     i2u129_41:
  4099  000656  0E01               	movlw	1
  4100  000658  EF2F  F003         	goto	i2u130_40
  4101  00065C                     i2u129_40:
  4102  00065C  0E00               	movlw	0
  4103  00065E                     i2u130_40:
  4104  00065E  0012               	return		;funcret
  4105  000660                     __end_of_not_intersects:
  4106                           	callstack 0
  4107                           
  4108 ;; *************** function ___lwmod *****************
  4109 ;; Defined at:
  4110 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/lwmod.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;  dividend        2    0[COMRAM] unsigned int 
  4113 ;;  divisor         2    2[COMRAM] unsigned int 
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;  counter         1    4[COMRAM] unsigned char 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  2    0[COMRAM] unsigned int 
  4118 ;; Registers used:
  4119 ;;		wreg, status,2, status,0
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4125 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;Total ram usage:        5 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		_submit
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text15
  4139  001418                     __ptext15:
  4140                           	callstack 0
  4141  001418                     ___lwmod:
  4142                           	callstack 24
  4143  001418  5025               	movf	___lwmod@divisor^0,w,c
  4144  00141A  1026               	iorwf	(___lwmod@divisor+1)^0,w,c
  4145  00141C  B4D8               	btfsc	status,2,c
  4146  00141E  EF13  F00A         	goto	i2u143_41
  4147  001422  EF15  F00A         	goto	i2u143_40
  4148  001426                     i2u143_41:
  4149  001426  EF39  F00A         	goto	i2l796
  4150  00142A                     i2u143_40:
  4151  00142A  0E01               	movlw	1
  4152  00142C  6E27               	movwf	___lwmod@counter^0,c
  4153  00142E  EF1D  F00A         	goto	i2l1856
  4154  001432                     i2l1854:
  4155  001432  90D8               	bcf	status,0,c
  4156  001434  3625               	rlcf	___lwmod@divisor^0,f,c
  4157  001436  3626               	rlcf	(___lwmod@divisor+1)^0,f,c
  4158  001438  2A27               	incf	___lwmod@counter^0,f,c
  4159  00143A                     i2l1856:
  4160  00143A  AE26               	btfss	(___lwmod@divisor+1)^0,7,c
  4161  00143C  EF22  F00A         	goto	i2u144_41
  4162  001440  EF24  F00A         	goto	i2u144_40
  4163  001444                     i2u144_41:
  4164  001444  EF19  F00A         	goto	i2l1854
  4165  001448                     i2u144_40:
  4166  001448                     i2l1858:
  4167  001448  5025               	movf	___lwmod@divisor^0,w,c
  4168  00144A  5C23               	subwf	___lwmod@dividend^0,w,c
  4169  00144C  5026               	movf	(___lwmod@divisor+1)^0,w,c
  4170  00144E  5824               	subwfb	(___lwmod@dividend+1)^0,w,c
  4171  001450  A0D8               	btfss	status,0,c
  4172  001452  EF2D  F00A         	goto	i2u145_41
  4173  001456  EF2F  F00A         	goto	i2u145_40
  4174  00145A                     i2u145_41:
  4175  00145A  EF33  F00A         	goto	i2l1862
  4176  00145E                     i2u145_40:
  4177  00145E  5025               	movf	___lwmod@divisor^0,w,c
  4178  001460  5E23               	subwf	___lwmod@dividend^0,f,c
  4179  001462  5026               	movf	(___lwmod@divisor+1)^0,w,c
  4180  001464  5A24               	subwfb	(___lwmod@dividend+1)^0,f,c
  4181  001466                     i2l1862:
  4182  001466  90D8               	bcf	status,0,c
  4183  001468  3226               	rrcf	(___lwmod@divisor+1)^0,f,c
  4184  00146A  3225               	rrcf	___lwmod@divisor^0,f,c
  4185  00146C  2E27               	decfsz	___lwmod@counter^0,f,c
  4186  00146E  EF24  F00A         	goto	i2l1858
  4187  001472                     i2l796:
  4188  001472  C023  F023         	movff	___lwmod@dividend,?___lwmod
  4189  001476  C024  F024         	movff	___lwmod@dividend+1,?___lwmod+1
  4190  00147A  0012               	return		;funcret
  4191  00147C                     __end_of___lwmod:
  4192                           	callstack 0
  4193                           
  4194 ;; *************** function _rotate *****************
  4195 ;; Defined at:
  4196 ;;		line 383 in file "main.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;		None
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;		None
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      void 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, status,0
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;Total ram usage:        0 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_HandleInterrupt
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text16
  4224  001634                     __ptext16:
  4225                           	callstack 0
  4226  001634                     _rotate:
  4227                           	callstack 25
  4228  001634                     
  4229                           ;main.c: 384:     rotation = (rotation + 1) % 4;
  4230  001634  2821               	incf	_rotation^0,w,c
  4231  001636  0B03               	andlw	3
  4232  001638  6E21               	movwf	_rotation^0,c
  4233  00163A  0012               	return		;funcret
  4234  00163C                     __end_of_rotate:
  4235                           	callstack 0
  4236                           
  4237 ;; *************** function _blink *****************
  4238 ;; Defined at:
  4239 ;;		line 119 in file "main.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;		None
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;		None
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  1    wreg      void 
  4246 ;; Registers used:
  4247 ;;		wreg, status,2, status,0, cstack
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;Total ram usage:        0 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; Hardware stack levels required when called:    3
  4260 ;; This function calls:
  4261 ;;		i2_move_down
  4262 ;; This function is called by:
  4263 ;;		_HandleInterrupt
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text17
  4268  0014C2                     __ptext17:
  4269                           	callstack 0
  4270  0014C2                     _blink:
  4271                           	callstack 22
  4272  0014C2                     
  4273                           ;main.c: 120:     counter250ms += 1;
  4274  0014C2  2A22               	incf	_counter250ms^0,f,c
  4275  0014C4                     
  4276                           ;main.c: 121:     if (counter250ms == 8) {
  4277  0014C4  0E08               	movlw	8
  4278  0014C6  1822               	xorwf	_counter250ms^0,w,c
  4279  0014C8  A4D8               	btfss	status,2,c
  4280  0014CA  EF69  F00A         	goto	i2u146_41
  4281  0014CE  EF6B  F00A         	goto	i2u146_40
  4282  0014D2                     i2u146_41:
  4283  0014D2  EF6F  F00A         	goto	i2l1880
  4284  0014D6                     i2u146_40:
  4285  0014D6                     
  4286                           ;main.c: 122:         counter250ms = 0;
  4287  0014D6  0E00               	movlw	0
  4288  0014D8  6E22               	movwf	_counter250ms^0,c
  4289  0014DA                     
  4290                           ;main.c: 123:         move_down();
  4291  0014DA  ECFF  F00A         	call	i2_move_down	;wreg free
  4292  0014DE                     i2l1880:
  4293                           
  4294                           ;main.c: 125:     blink_counter = 0;
  4295  0014DE  0E00               	movlw	0
  4296  0014E0  6E1E               	movwf	(_blink_counter+1)^0,c
  4297  0014E2  0E00               	movlw	0
  4298  0014E4  6E1D               	movwf	_blink_counter^0,c
  4299  0014E6                     
  4300                           ;main.c: 126:     blink_on = !blink_on;
  4301  0014E6  5043               	movf	_blink_on^0,w,c
  4302  0014E8  B4D8               	btfsc	status,2,c
  4303  0014EA  EF79  F00A         	goto	i2u147_41
  4304  0014EE  EF7C  F00A         	goto	i2u147_40
  4305  0014F2                     i2u147_41:
  4306  0014F2  0E01               	movlw	1
  4307  0014F4  EF7D  F00A         	goto	i2u148_40
  4308  0014F8                     i2u147_40:
  4309  0014F8  0E00               	movlw	0
  4310  0014FA                     i2u148_40:
  4311  0014FA  6E43               	movwf	_blink_on^0,c
  4312  0014FC  0012               	return		;funcret
  4313  0014FE                     __end_of_blink:
  4314                           	callstack 0
  4315                           
  4316 ;; *************** function i2_move_down *****************
  4317 ;; Defined at:
  4318 ;;		line 488 in file "main.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;		None
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;  newPosition     2   11[COMRAM] struct Position
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      void 
  4325 ;; Registers used:
  4326 ;;		wreg, status,2, status,0, cstack
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4336 ;;Total ram usage:        2 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; Hardware stack levels required when called:    2
  4339 ;; This function calls:
  4340 ;;		i2_move
  4341 ;; This function is called by:
  4342 ;;		_blink
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           	psect	text18
  4347  0015FE                     __ptext18:
  4348                           	callstack 0
  4349  0015FE                     i2_move_down:
  4350                           	callstack 22
  4351  0015FE                     
  4352                           ;main.c: 489:     Position newPosition = {position.x, position.y + 1};
  4353  0015FE  C00F  F02E         	movff	move_down@F4756,i2move_down@newPosition
  4354  001602  C010  F02F         	movff	move_down@F4756+1,i2move_down@newPosition+1
  4355  001606  C01B  F02E         	movff	_position,i2move_down@newPosition
  4356  00160A  281C               	incf	(_position+1)^0,w,c
  4357  00160C  6E2F               	movwf	(i2move_down@newPosition+1)^0,c
  4358  00160E                     
  4359                           ;main.c: 490:     move(newPosition);
  4360  00160E  C02E  F02C         	movff	i2move_down@newPosition,i2move@newPosition
  4361  001612  C02F  F02D         	movff	i2move_down@newPosition+1,i2move@newPosition+1
  4362  001616  ECAC  F00A         	call	i2_move	;wreg free
  4363  00161A  0012               	return		;funcret
  4364  00161C                     __end_ofi2_move_down:
  4365                           	callstack 0
  4366                           
  4367 ;; *************** function i2_move *****************
  4368 ;; Defined at:
  4369 ;;		line 467 in file "main.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;  newPosition     2    9[COMRAM] struct Position
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;		None
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  1    wreg      void 
  4376 ;; Registers used:
  4377 ;;		wreg, status,2, status,0, cstack
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;Total ram usage:        2 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; Hardware stack levels required when called:    1
  4390 ;; This function calls:
  4391 ;;		i2_canMove
  4392 ;; This function is called by:
  4393 ;;		i2_move_down
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text19
  4398  001558                     __ptext19:
  4399                           	callstack 0
  4400  001558                     i2_move:
  4401                           	callstack 22
  4402  001558                     
  4403                           ;main.c: 468:     if (canMove(newPosition)) {
  4404  001558  C02C  F023         	movff	i2move@newPosition,i2canMove@position
  4405  00155C  C02D  F024         	movff	i2move@newPosition+1,i2canMove@position+1
  4406  001560  EC65  F009         	call	i2_canMove	;wreg free
  4407  001564  0900               	iorlw	0
  4408  001566  B4D8               	btfsc	status,2,c
  4409  001568  EFB8  F00A         	goto	i2u100_41
  4410  00156C  EFBA  F00A         	goto	i2u100_40
  4411  001570                     i2u100_41:
  4412  001570  EFBE  F00A         	goto	i2l255
  4413  001574                     i2u100_40:
  4414  001574                     
  4415                           ;main.c: 469:         position = newPosition;
  4416  001574  C02C  F01B         	movff	i2move@newPosition,_position
  4417  001578  C02D  F01C         	movff	i2move@newPosition+1,_position+1
  4418  00157C                     i2l255:
  4419  00157C  0012               	return		;funcret
  4420  00157E                     __end_ofi2_move:
  4421                           	callstack 0
  4422                           
  4423 ;; *************** function i2_canMove *****************
  4424 ;; Defined at:
  4425 ;;		line 445 in file "main.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  position        2    0[COMRAM] struct Position
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;  bot             1    7[COMRAM] unsigned char 
  4430 ;;  top             1    6[COMRAM] unsigned char 
  4431 ;;  right           1    5[COMRAM] unsigned char 
  4432 ;;  left            1    4[COMRAM] unsigned char 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      unsigned char 
  4435 ;; Registers used:
  4436 ;;		wreg, status,2, status,0
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;Total ram usage:        9 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; This function calls:
  4449 ;;		Nothing
  4450 ;; This function is called by:
  4451 ;;		i2_move
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           	psect	text20
  4456  0012CA                     __ptext20:
  4457                           	callstack 0
  4458  0012CA                     i2_canMove:
  4459                           	callstack 22
  4460  0012CA                     
  4461                           ;main.c: 446:     unsigned char left, right, top, bot;;main.c: 447:     switch (type) {
  4462  0012CA  EF7B  F009         	goto	i2l1624
  4463  0012CE                     i2l245:
  4464                           
  4465                           ;main.c: 449:         {;main.c: 450:             left = right = position.x;
  4466  0012CE  C023  F028         	movff	i2canMove@position,i2canMove@right
  4467  0012D2  C028  F027         	movff	i2canMove@right,i2canMove@left
  4468                           
  4469                           ;main.c: 451:             top = bot = position.y;
  4470  0012D6  C024  F02A         	movff	i2canMove@position+1,i2canMove@bot
  4471  0012DA  C02A  F029         	movff	i2canMove@bot,i2canMove@top
  4472                           
  4473                           ;main.c: 452:             break;
  4474  0012DE  EF94  F009         	goto	i2l1626
  4475  0012E2                     i2l248:
  4476                           
  4477                           ;main.c: 456:         {;main.c: 457:             left = position.x;
  4478  0012E2  C023  F027         	movff	i2canMove@position,i2canMove@left
  4479  0012E6                     
  4480                           ;main.c: 458:             right = position.x + 1;
  4481  0012E6  2823               	incf	i2canMove@position^0,w,c
  4482  0012E8  6E28               	movwf	i2canMove@right^0,c
  4483  0012EA                     
  4484                           ;main.c: 459:             top = position.y;
  4485  0012EA  C024  F029         	movff	i2canMove@position+1,i2canMove@top
  4486                           
  4487                           ;main.c: 460:             bot = position.y + 1;
  4488  0012EE  2824               	incf	(i2canMove@position+1)^0,w,c
  4489  0012F0  6E2A               	movwf	i2canMove@bot^0,c
  4490                           
  4491                           ;main.c: 461:             break;
  4492  0012F2  EF94  F009         	goto	i2l1626
  4493  0012F6                     i2l1624:
  4494  0012F6  5020               	movf	_type^0,w,c
  4495  0012F8  6E25               	movwf	??i2_canMove^0,c
  4496  0012FA  6A26               	clrf	(??i2_canMove+1)^0,c
  4497                           
  4498                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4499                           ; Switch size 1, requested type "simple"
  4500                           ; Number of cases is 1, Range of values is 0 to 0
  4501                           ; switch strategies available:
  4502                           ; Name         Instructions Cycles
  4503                           ; simple_byte            4     3 (average)
  4504                           ;	Chosen strategy is simple_byte
  4505  0012FC  5026               	movf	(??i2_canMove+1)^0,w,c
  4506  0012FE  0A00               	xorlw	0	; case 0
  4507  001300  B4D8               	btfsc	status,2,c
  4508  001302  EF85  F009         	goto	i2l2914
  4509  001306  EF94  F009         	goto	i2l1626
  4510  00130A                     i2l2914:
  4511                           
  4512                           ; Switch size 1, requested type "simple"
  4513                           ; Number of cases is 3, Range of values is 0 to 2
  4514                           ; switch strategies available:
  4515                           ; Name         Instructions Cycles
  4516                           ; simple_byte           10     6 (average)
  4517                           ;	Chosen strategy is simple_byte
  4518  00130A  5025               	movf	??i2_canMove^0,w,c
  4519  00130C  0A00               	xorlw	0	; case 0
  4520  00130E  B4D8               	btfsc	status,2,c
  4521  001310  EF67  F009         	goto	i2l245
  4522  001314  0A01               	xorlw	1	; case 1
  4523  001316  B4D8               	btfsc	status,2,c
  4524  001318  EF71  F009         	goto	i2l248
  4525  00131C  0A03               	xorlw	3	; case 2
  4526  00131E  B4D8               	btfsc	status,2,c
  4527  001320  EF71  F009         	goto	i2l248
  4528  001324  EF94  F009         	goto	i2l1626
  4529  001328                     i2l1626:
  4530                           
  4531                           ;main.c: 464:     return (left < 4 && right < 4 && top < 8 && bot < 8);
  4532  001328  0E00               	movlw	0
  4533  00132A  6E2B               	movwf	i2_canMove$263^0,c
  4534  00132C  0E04               	movlw	4
  4535  00132E  6027               	cpfslt	i2canMove@left^0,c
  4536  001330  EF9C  F009         	goto	i2u95_41
  4537  001334  EF9E  F009         	goto	i2u95_40
  4538  001338                     i2u95_41:
  4539  001338  EFB8  F009         	goto	i2l250
  4540  00133C                     i2u95_40:
  4541  00133C  0E04               	movlw	4
  4542  00133E  6028               	cpfslt	i2canMove@right^0,c
  4543  001340  EFA4  F009         	goto	i2u96_41
  4544  001344  EFA6  F009         	goto	i2u96_40
  4545  001348                     i2u96_41:
  4546  001348  EFB8  F009         	goto	i2l250
  4547  00134C                     i2u96_40:
  4548  00134C  0E08               	movlw	8
  4549  00134E  6029               	cpfslt	i2canMove@top^0,c
  4550  001350  EFAC  F009         	goto	i2u97_41
  4551  001354  EFAE  F009         	goto	i2u97_40
  4552  001358                     i2u97_41:
  4553  001358  EFB8  F009         	goto	i2l250
  4554  00135C                     i2u97_40:
  4555  00135C  0E08               	movlw	8
  4556  00135E  602A               	cpfslt	i2canMove@bot^0,c
  4557  001360  EFB4  F009         	goto	i2u98_41
  4558  001364  EFB6  F009         	goto	i2u98_40
  4559  001368                     i2u98_41:
  4560  001368  EFB8  F009         	goto	i2l250
  4561  00136C                     i2u98_40:
  4562  00136C  0E01               	movlw	1
  4563  00136E  6E2B               	movwf	i2_canMove$263^0,c
  4564  001370                     i2l250:
  4565  001370  502B               	movf	i2_canMove$263^0,w,c
  4566  001372  0012               	return		;funcret
  4567  001374                     __end_ofi2_canMove:
  4568                           	callstack 0
  4569  0000                     
  4570                           	psect	rparam
  4571  0000                     
  4572                           	psect	temp
  4573  000044                     btemp:
  4574                           	callstack 0
  4575  000044                     	ds	1
  4576  0000                     int$flags	set	btemp
  4577  0000                     wtemp8	set	btemp+1
  4578  0000                     ttemp5	set	btemp+1
  4579  0000                     ttemp6	set	btemp+4
  4580  0000                     ttemp7	set	btemp+8
  4581                           
  4582                           	psect	config
  4583                           
  4584                           ; Padding undefined space
  4585  300000                     	org	3145728
  4586  300000  FF                 	db	255
  4587                           
  4588                           ;Config register CONFIG1H @ 0x300001
  4589                           ;	Oscillator Selection bits
  4590                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  4591                           ;	Fail-Safe Clock Monitor Enable bit
  4592                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4593                           ;	Internal/External Oscillator Switchover bit
  4594                           ;	IESO = OFF, Two-Speed Start-up disabled
  4595  300001                     	org	3145729
  4596  300001  06                 	db	6
  4597                           
  4598                           ;Config register CONFIG2L @ 0x300002
  4599                           ;	Power-up Timer Enable bit
  4600                           ;	PWRT = OFF, PWRT disabled
  4601                           ;	Brown-out Reset Enable bits
  4602                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4603                           ;	Brown-out Voltage bits
  4604                           ;	BORV = 0x3, unprogrammed default
  4605  300002                     	org	3145730
  4606  300002  19                 	db	25
  4607                           
  4608                           ;Config register CONFIG2H @ 0x300003
  4609                           ;	Watchdog Timer
  4610                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4611                           ;	Watchdog Timer Postscale Select bits
  4612                           ;	WDTPS = 0xF, unprogrammed default
  4613  300003                     	org	3145731
  4614  300003  1E                 	db	30
  4615                           
  4616                           ;Config register CONFIG3L @ 0x300004
  4617                           ;	unspecified, using default values
  4618                           ;	Processor Data Memory Mode Select bits
  4619                           ;	MODE = 0x3, unprogrammed default
  4620                           ;	Address Bus Width Select bits
  4621                           ;	ADDRBW = 0x3, unprogrammed default
  4622                           ;	Data Bus Width Select bit
  4623                           ;	DATABW = 0x1, unprogrammed default
  4624                           ;	External Bus Data Wait Enable bit
  4625                           ;	WAIT = 0x1, unprogrammed default
  4626  300004                     	org	3145732
  4627  300004  F3                 	db	243
  4628                           
  4629                           ;Config register CONFIG3H @ 0x300005
  4630                           ;	CCP2 MUX bit
  4631                           ;	CCP2MX = 0x1, unprogrammed default
  4632                           ;	ECCP MUX bit
  4633                           ;	ECCPMX = 0x1, unprogrammed default
  4634                           ;	Low-Power Timer1 Oscillator Enable bit
  4635                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4636                           ;	MCLR Pin Enable bit
  4637                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  4638  300005                     	org	3145733
  4639  300005  83                 	db	131
  4640                           
  4641                           ;Config register CONFIG4L @ 0x300006
  4642                           ;	Stack Full/Underflow Reset Enable bit
  4643                           ;	STVREN = 0x1, unprogrammed default
  4644                           ;	Single-Supply ICSP Enable bit
  4645                           ;	LVP = OFF, Single-Supply ICSP disabled
  4646                           ;	Boot Block Size Select bits
  4647                           ;	BBSIZ = 0x0, unprogrammed default
  4648                           ;	Extended Instruction Set Enable bit
  4649                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4650                           ;	Background Debugger Enable bit
  4651                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4652  300006                     	org	3145734
  4653  300006  81                 	db	129
  4654                           
  4655                           ; Padding undefined space
  4656  300007                     	org	3145735
  4657  300007  FF                 	db	255
  4658                           tosu	equ	0xFFF
  4659                           tosh	equ	0xFFE
  4660                           tosl	equ	0xFFD
  4661                           stkptr	equ	0xFFC
  4662                           pclatu	equ	0xFFB
  4663                           pclath	equ	0xFFA
  4664                           pcl	equ	0xFF9
  4665                           tblptru	equ	0xFF8
  4666                           tblptrh	equ	0xFF7
  4667                           tblptrl	equ	0xFF6
  4668                           tablat	equ	0xFF5
  4669                           prodh	equ	0xFF4
  4670                           prodl	equ	0xFF3
  4671                           indf0	equ	0xFEF
  4672                           postinc0	equ	0xFEE
  4673                           postdec0	equ	0xFED
  4674                           preinc0	equ	0xFEC
  4675                           plusw0	equ	0xFEB
  4676                           fsr0h	equ	0xFEA
  4677                           fsr0l	equ	0xFE9
  4678                           wreg	equ	0xFE8
  4679                           indf1	equ	0xFE7
  4680                           postinc1	equ	0xFE6
  4681                           postdec1	equ	0xFE5
  4682                           preinc1	equ	0xFE4
  4683                           plusw1	equ	0xFE3
  4684                           fsr1h	equ	0xFE2
  4685                           fsr1l	equ	0xFE1
  4686                           bsr	equ	0xFE0
  4687                           indf2	equ	0xFDF
  4688                           postinc2	equ	0xFDE
  4689                           postdec2	equ	0xFDD
  4690                           preinc2	equ	0xFDC
  4691                           plusw2	equ	0xFDB
  4692                           fsr2h	equ	0xFDA
  4693                           fsr2l	equ	0xFD9
  4694                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         100
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      67
    BANK0           160     47     113
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _HandleInterrupt in COMRAM

    _HandleInterrupt->_submit
    _submit->_not_intersects
    _blink->i2_move_down
    i2_move_down->i2_move
    i2_move->i2_canMove

Critical Paths under _main in BANK0

    _main->_draw
    _poll_a->_move_down
    _poll_a->_move_left
    _poll_a->_move_right
    _poll_a->_move_up
    _move_up->_move
    _move_right->_move
    _move_left->_move
    _move_down->_move
    _move->_canMove
    _draw->_setLed

Critical Paths under _HandleInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HandleInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HandleInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HandleInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HandleInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HandleInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HandleInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HandleInterrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HandleInterrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HandleInterrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HandleInterrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HandleInterrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HandleInterrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HandleInterrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HandleInterrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HandleInterrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9147
                          _busy_wait
                               _draw
                               _init
                             _poll_a
 ---------------------------------------------------------------------------------
 (1) _poll_a                                               1     1      0    3994
                                             13 BANK0      1     1      0
                          _move_down
                          _move_left
                         _move_right
                            _move_up
 ---------------------------------------------------------------------------------
 (2) _move_up                                              2     2      0     966
                                             11 BANK0      2     2      0
                               _move
 ---------------------------------------------------------------------------------
 (2) _move_right                                           2     2      0     966
                                             11 BANK0      2     2      0
                               _move
 ---------------------------------------------------------------------------------
 (2) _move_left                                            2     2      0     966
                                             11 BANK0      2     2      0
                               _move
 ---------------------------------------------------------------------------------
 (2) _move_down                                            2     2      0     966
                                             11 BANK0      2     2      0
                               _move
 ---------------------------------------------------------------------------------
 (3) _move                                                 2     0      2     892
                                              9 BANK0      2     0      2
                            _canMove
 ---------------------------------------------------------------------------------
 (4) _canMove                                              9     7      2     470
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _init                                                12    12      0     362
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (1) _draw                                                42    42      0    4745
                                              5 BANK0     42    42      0
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _setLed                                               5     2      3    3487
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _busy_wait                                            4     4      0      46
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HandleInterrupt                                      4     4      0    1555
                                             28 COMRAM     4     4      0
                              _blink
                             _rotate
                             _submit
 ---------------------------------------------------------------------------------
 (6) _submit                                               6     6      0    1156
                                             22 COMRAM     6     6      0
                            ___lwmod
                     _not_intersects
 ---------------------------------------------------------------------------------
 (7) _not_intersects                                      22    22      0     822
                                              0 COMRAM    22    22      0
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _rotate                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _blink                                                0     0      0     399
                        i2_move_down
 ---------------------------------------------------------------------------------
 (7) i2_move_down                                          2     2      0     399
                                             11 COMRAM     2     2      0
                             i2_move
 ---------------------------------------------------------------------------------
 (8) i2_move                                               2     0      2     351
                                              9 COMRAM     2     0      2
                          i2_canMove
 ---------------------------------------------------------------------------------
 (9) i2_canMove                                            9     7      2     281
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _busy_wait
   _draw
     _setLed
   _init
   _poll_a
     _move_down
       _move
         _canMove
     _move_left
       _move
         _canMove
     _move_right
       _move
         _canMove
     _move_up
       _move
         _canMove

 _HandleInterrupt (ROOT)
   _blink
     i2_move_down
       i2_move
         i2_canMove
   _rotate
   _submit
     ___lwmod
     _not_intersects

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2F      71       5       70.6%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      43       1       71.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B4      32        0.0%
DATA                 0      0      B4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Apr 20 16:50:22 2024

                      l79 14C0       __end_ofi2_move_down 161C        _not_intersects$120 0027  
      _not_intersects$121 0028        _not_intersects$130 0031        _not_intersects$122 0029  
      _not_intersects$131 0032        _not_intersects$123 002A        _not_intersects$132 0033  
      _not_intersects$124 002B        _not_intersects$133 0034        _not_intersects$125 002C  
      _not_intersects$134 0035        _not_intersects$126 002D        _not_intersects$135 0036  
      _not_intersects$127 002E        _not_intersects$136 0037        _not_intersects$128 002F  
      _not_intersects$129 0030                       l211 07FE                       l220 09D4  
                     l108 113E                       l213 0822                       l221 0AA8  
                     l216 08AC                       l218 0914                       l250 12C6  
                     l219 097C                       l251 12C8                       l260 15DC  
                     l173 0FF4                       l245 1222                       l270 159C  
                     l255 1556                       l248 1236                       l265 15BC  
                     l275 15FC                       l284 121C                       wreg 000FE8  
       i2canMove@position 0023                      l2400 1282                      l2402 1292  
                    l2500 1008                      l2404 12A2                      l2420 154E  
                    l2430 0E60                      l2510 104E                      l2406 12B2  
                    l2422 15DE                      l2440 0EE8                      l2432 0E70  
                    l2600 09A0                      l2520 10EA                      l2512 106A  
                    l2408 12C2                      l2424 15EA                      l2450 0F72  
                    l2442 0F0C                      l2434 0E92                      l2610 09F4  
                    l2602 09B6                      l2530 1122                      l2514 106E  
                    l2506 1010                      l2418 1532                      l2426 15F0  
                    l2452 0F94                      l2444 0F1C                      l2436 0EB6  
                    l2428 0E5C                      l2620 0A28                      l2612 09FC  
                    l2604 09B6                      l2540 084A                      l2532 0660  
                    l2516 108A                      l2508 104A                      l2446 0F3E  
                    l2438 0EC6                      l2614 0A00                      l2606 09BC  
                    l2550 0876                      l2542 0850                      l2534 080E  
                    l2526 10FE                      l2518 10E2                      l2390 123A  
                    l2462 15BE                      l2470 159E                      l2448 0F62  
                    l2456 0FB8                      l2624 0A3C                      l2616 0A06  
                    l2608 09E4                      l2560 08BC                      l2552 0886  
                    l2544 0854                      l2536 0832                      l2528 111E  
                    l2392 123E                      l2464 15C6                      l2472 15A6  
                    l2480 158A                      l2490 148E                      l2618 0A16  
                    l2570 08EE                      l2562 08CC                      l2554 088E  
                    l2546 0864                      l2538 0842                      l2466 15CC  
                    l2474 15AC                      l2482 1590                      l2650 117C  
                    l2642 1140                      l2492 14BE                      l2484 147C  
                    l2900 0A50                      l2580 0942                      l2572 0900  
                    l2564 08D4                      l2556 0894                      l2548 086C  
                    l2628 0A76                      l2396 124A                      l2388 121E  
                    l2468 15D0                      l2476 15B0                      l2660 11C0  
                    l2652 118C                      l2644 1158                      l2902 0A8A  
                    l2590 0984                      l2582 0946                      l2574 0924  
                    l2566 08DA                      l2558 0898                      l2494 0FF6  
                    l2398 127E                      l2478 157E                      l2662 11C4  
                    l2654 119C                      l2646 1168                      l2904 0FCE  
                    l2592 0988                      l2584 0956                      l2576 0934  
                    l2568 08DE                      l2664 11D4                      l2656 11A0  
                    l2648 1178                      l2680 161C                      l2594 098C  
                    l2586 095E                      l2578 093C                      l2674 11EE  
                    l2666 11E4                      l2658 11B0                      l2682 1620  
                    l2596 099C                      l2588 0968                      l2676 120A  
                    l2668 11E8                      l2684 1624                      l2598 099C  
                    l2678 120C                      l2686 1628                      l2898 1260  
                    u2000 113E                      u2001 113A                      u2015 066A  
                    u2200 11E4                      u2105 079C                      u2025 0672  
                    u2201 11E0                      u2210 121C                      u2130 1168  
                    u2115 07A4                      u2035 0684                      u2211 1218  
                    u2131 1164                      u2140 1178                      u2125 07B6  
                    u2045 06D0                      u2141 1174                      _LATA 000F89  
                    u2150 118C                      u2055 06D8                      u2151 1188  
                    _LATC 000F8B                      u2160 119C                      _LATD 000F8C  
                    u2065 06EA                      u2161 1198                      _LATE 000F8D  
                    u2170 11B0                      _LATF 000F8E                      u2075 0736  
                    u2171 11AC                      u2180 11C0                      u2085 073E  
                    u2181 11BC                      u2190 11D4                      u2095 0750  
                    u2191 11D0                      u1800 1292                      u1801 128E  
                    u1810 12A2                      u1811 129E                      u1820 12B2  
                    u1821 12AE                      u1910 0F1C                      u1830 12C2  
                    u1911 0F18                      u1831 12BE                      u1904 0EFA  
                    u1840 154E                      u1905 0EF6                      u1841 154A  
                    u1850 0E70                      u1851 0E6C                      u1940 0F72  
                    u1924 0F2E                      u1941 0F6E                      u1925 0F2A  
                    u1934 0F50                      u1935 0F4C                      u1880 0EC6  
                    u1864 0E82                      u1881 0EC2                      u1865 0E7E  
                    u1970 14BE                      u1954 0F84                      u1874 0EA4  
                    u1971 14BA                      u1955 0F80                      u1875 0EA0  
                    u1964 0FA6                      u1980 106A                      u1965 0FA2  
                    u1981 1066                      u1894 0ED8                      u1990 108A  
                    u1895 0ED4                      u1991 1086                      i2l85 14FC  
                    i2l97 1404                      _draw 0660                      _main 161C  
                    _grid 0060                      _init 0FF6                      _keys 0001  
                    _move 1532                      fsr2h 000FDA                      indf1 000FE7  
                    indf2 000FDF                      fsr1l 000FE1                      fsr2l 000FD9  
                    btemp 0044                      _type 0020     move_right@newPosition 00AD  
                    prodh 000FF4                      prodl 000FF3                      start 000E  
            ___param_bank 000000                     ?_draw 0023                     ?_main 0023  
                   ?_init 0023                     ?_move 00AB                     _T0CON 000FD5  
         __end_of___lwmod 147C                     i2l224 163A                     i2l241 0E5A  
                   i2l250 1370                     i2l251 1372                     i2l156 065E  
                   i2l245 12CE                     i2l255 157C                     i2l248 12E2  
                   i2l275 161A                     i2l803 147A           __end_of_canMove 12CA  
                   i2l796 1472                     _TMR0H 000FD7                     _TMR0L 000FD6  
                   _PORTA 000F80                     _PORTB 000F81                     _PORTC 000F82  
                   _PORTD 000F83                     _PORTE 000F84                     _PORTF 000F85  
                   _PORTH 000F87                     _PORTJ 000F88                     _TRISA 000F92  
                   _TRISB 000F93                     _TRISC 000F94                     _TRISD 000F95  
                   _TRISE 000F96                     _TRISF 000F97                     _TRISH 000F99  
                   _TRISJ 000F9A                     _blink 14C2      move_down@newPosition 00AD  
                   init@i 00A8                     init@j 00AA           __end_of_move_up 159E  
                   tablat 000FF5                     ttemp5 0045                     ttemp6 0048  
                   ttemp7 004C                     status 000FD8                     wtemp8 0045  
      __size_ofi2_canMove 00AA               i2_move_down 15FE           __initialization 14FE  
            __end_of_draw 0AAA              __end_of_main 1634              __end_of_init 1140  
            __end_of_move 1558         ??_HandleInterrupt 003F                    ??_draw 00A7  
                  ??_main 00D1                    ??_init 00A2                    ??_move 00AD  
           __activetblptr 000003              i2canMove@bot 002A              i2canMove@top 0029  
           i2_canMove$263 002B                    ?_blink 0023                    i2l2140 13B0  
                  i2l2132 1386                    i2l2150 13D8                    i2l2142 13B4  
                  i2l2134 1394                    i2l2152 13E8                    i2l2136 1398  
                  i2l2144 13B8                    i2l1274 1634                    i2l2154 13F6  
                  i2l2146 13C6                    i2l2138 13AC                    i2l1620 12EA  
                  i2l1700 01F6                    i2l2156 13FA                    i2l2148 13D4  
                  i2l1630 133C                    i2l1710 02C2                    i2l1702 020E  
                  i2l2158 1400                    i2l1632 134C                    i2l1624 12F6  
                  i2l1616 12CA                    i2l1720 0322                    i2l1712 02C6  
                  i2l1704 025A                    i2l1634 135C                    i2l1618 12E6  
                  i2l1626 1328                    i2l1650 1574                    i2l1730 03DA  
                  i2l1722 033A                    i2l1714 02CE                    i2l1706 025E  
                  i2l1636 136C                    i2l1628 132C                    i2l1740 041E  
                  i2l1732 03DE                    i2l1724 0372                    i2l1716 02D2  
                  i2l1708 0276                    i2l1660 001A                    i2l1900 0C22  
                  i2l1750 04D6                    i2l1742 0436                    i2l1734 03E6  
                  i2l1726 0376                    i2l1718 031E                    i2l1670 005E  
                  i2l1662 001E                    i2l1902 0C66                    i2l1648 1558  
                  i2l1760 051A                    i2l1752 04DA                    i2l1744 046E  
                  i2l1736 03EA                    i2l1728 038E                    i2l1680 00FA  
                  i2l1672 008E                    i2l1664 004E                    i2l1920 0DBE  
                  i2l1912 0D2A                    i2l1904 0CA6                    i2l1850 1418  
                  i2l1770 05D2                    i2l1762 0532                    i2l1754 04E2  
                  i2l1746 0472                    i2l1738 041A                    i2l1690 01B2  
                  i2l1682 0112                    i2l1674 0092                    i2l1666 0052  
                  i2l1658 0012                    i2l1930 0E4E                    i2l1914 0D4E  
                  i2l1860 145E                    i2l1852 142A                    i2l1772 05D6  
                  i2l1764 057E                    i2l1756 04E6                    i2l1748 048A  
                  i2l1692 01B6                    i2l1684 014A                    i2l1676 00AA  
                  i2l1668 005A                    i2l1780 0618                    i2l1932 0E56  
                  i2l1916 0D8E                    i2l1908 0CD6                    i2l1924 0DF8  
                  i2l1870 160E                    i2l1862 1466                    i2l1854 1432  
                  i2l2910 05F2                    i2l1766 0582                    i2l1758 0516  
                  i2l1694 01BE                    i2l1686 014E                    i2l1678 00F6  
                  i2l1782 064A                    i2l1926 0E2A                    i2l1880 14DE  
                  i2l1872 14C2                    i2l1864 146C                    i2l1856 143A  
                  i2l2912 062C                    i2l1776 05DE                    i2l1768 059A  
                  i2l1696 01C2                    i2l1688 0166                    i2l1928 0E46  
                  i2l2914 130A                    i2l1866 15FE                    i2l1882 14E6  
                  i2l1874 14C4                    i2l1858 1448                    i2l1698 01F2  
                  i2l2906 0DD2                    i2l1890 0AEA                    i2l1868 160A  
                  i2l1876 14D6                    i2l2908 0E0C                    i2l1892 0B0E  
                  i2l1884 0AAA                    i2l1878 14DA                    i2l1894 0B4E  
                  i2l1896 0BBE                    i2l1888 0AC2                    i2l1898 0BE2  
                  _INTCON 000FF2                    i2_move 1558                 ??___lwmod 0027  
               ??_canMove 00A4                    clear_0 1516                    clear_1 1522  
                  _setLed 0E5C                    _poll_a 1140                    _rotate 1634  
                  _submit 0AAA              __pdataCOMRAM 0043         __end_ofi2_canMove 1374  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
               ??_move_up 00AD                __accesstop 0060   __end_of__initialization 1528  
           ___rparam_used 000001            __pcstackCOMRAM 0023             __end_of_blink 14FE  
                 ??_blink 0030   __size_of_not_intersects 064E                __pbssBANK0 0060  
           i2canMove@left 0027            move_left@F4747 0015               setLed@value 00A4  
          move_down@F4756 000F                   ?i2_move 002C        __size_of_busy_wait 0046  
                 ?_setLed 00A2                   ?_poll_a 0023        __size_of_move_left 0020  
      __size_of_move_down 0020        move_up@newPosition 00AD                   ?_rotate 0023  
                 ?_submit 0023                canMove@bot 00A9                canMove@top 00A8  
         canMove@position 00A2                   i2u95_40 133C                   i2u95_41 1338  
                 i2u96_40 134C                   i2u96_41 1348                   i2u97_40 135C  
                 i2u97_41 1358                   i2u98_40 136C                   i2u98_41 1368  
         _HandleInterrupt 0008         i2move@newPosition 002C           __size_ofi2_move 0026  
                 __Hparam 0000                   __Lparam 0000              ?i2_move_down 0023  
                 ___lwmod 1418                   _canMove 121E                   __pcinit 14FE  
                 __ramtop 1000           __size_of_setLed 019A              canMove@right 00A7  
                 __ptext0 161C                   __ptext1 1140                   __ptext2 157E  
                 __ptext3 159E                   __ptext4 15BE                   __ptext5 15DE  
                 __ptext6 1532                   __ptext7 121E                   __ptext8 0FF6  
                 __ptext9 0660           __size_of_poll_a 00DE           __size_of_rotate 0008  
         __size_of_submit 03B2         __end_of_busy_wait 14C2                   _move_up 157E  
          __pintcode_body 1374      end_of_initialization 1528         __end_of_move_left 15DE  
       __end_of_move_down 15FE                   int_func 1374                   poll_a@i 00AF  
              _move_right 159E                   postinc0 000FEE  not_intersects@intersects 0038  
          _not_intersects 0012   __end_of_HandleInterrupt 1418                 i2_canMove 12CA  
          __end_ofi2_move 157E            _PORTA_previous 000B             __pidataCOMRAM 163C  
          __end_of_setLed 0FF6            __end_of_poll_a 121E            __end_of_rotate 163C  
          __end_of_submit 0E5C    __end_of_not_intersects 0660               _canMove$263 00AA  
            _counter250ms 0022       start_initialization 14FE               submit@F4719 0017  
              ?i2_canMove 0023                  ??i2_move 002E               ?_move_right 0023  
              busy_wait@i 00A2      __size_ofi2_move_down 001E                  ??_setLed 00A5  
                ??_poll_a 00AF                  ??_rotate 0023                  ??_submit 0039  
         ?_not_intersects 0023            i2canMove@right 0028               __pbssCOMRAM 0001  
           __pcstackBANK0 00A2          ?_HandleInterrupt 0023                 __pintcode 0008  
                ?___lwmod 0023                  ?_canMove 00A2                  ?_move_up 0023  
     __size_of_move_right 0020            __size_of_blink 003C                 _busy_wait 147C  
  i2move_down@newPosition 002E               canMove@left 00A6               ??i2_canMove 0025  
         move@newPosition 00AB                 draw@F4651 00A0                 draw@F4653 009E  
               draw@F4661 0096                 draw@F4655 009C                 draw@F4663 0094  
               draw@F4671 008C                 draw@F4657 009A                 draw@F4665 0092  
               draw@F4673 008A                 draw@F4681 0082                 draw@F4659 0098  
               draw@F4667 0090                 draw@F4675 0088                 draw@F4683 0080  
               draw@F4669 008E                 draw@F4677 0086                 draw@F4679 0084  
                i2u100_40 1574                  i2u100_41 1570                  i2u101_40 004E  
                i2u101_41 004A                  i2u110_40 020E                  i2u102_40 008E  
                i2u110_41 020A                  i2u102_41 008A                  i2u111_40 025A  
                i2u103_40 00AA                  i2u111_41 0256                  i2u103_41 00A6  
                i2u120_40 0436                  i2u112_40 0276                  i2u104_40 00F6  
                i2u120_41 0432                  i2u112_41 0272                  i2u104_41 00F2  
                i2u121_40 046E                  i2u113_40 02C2                  i2u105_40 0112  
                i2u121_41 046A                  i2u113_41 02BE                  i2u105_41 010E  
                i2u130_40 065E                  i2u122_40 048A                  i2u114_40 031E  
                i2u106_40 014A                  i2u122_41 0486                  i2u114_41 031A  
                i2u106_41 0146                  i2u123_40 04D6                  i2u115_40 033A  
                i2u107_40 0166                  i2u123_41 04D2                  i2u115_41 0336  
                i2u107_41 0162                  i2u124_40 0516                  i2u116_40 0372  
                i2u108_40 01B2                  i2u124_41 0512                  i2u116_41 036E  
                i2u108_41 01AE                  i2u125_40 0532                  i2u117_40 038E  
                i2u109_40 01F2                  i2u125_41 052E                  i2u117_41 038A  
                i2u109_41 01EE                  i2u126_40 057E                  i2u118_40 03DA  
                i2u126_41 057A                  i2u118_41 03D6                  i2u143_40 142A  
                i2u127_40 059A                  i2u119_40 041A                  i2u143_41 1426  
                i2u127_41 0596                  i2u119_41 0416                  i2u144_40 1448  
                i2u128_40 05D2                  i2u144_41 1444                  i2u128_41 05CE  
                i2u145_40 145E                  i2u129_40 065C                  i2u145_41 145A  
                i2u129_41 0656                  i2u146_40 14D6                  i2u146_41 14D2  
                i2u147_40 14F8                  i2u147_41 14F2                  i2u148_40 14FA  
               _move_left 15BE                 _move_down 15DE                  i2u149_40 0ABE  
                i2u149_41 0ABA                  i2u174_40 1394                  i2u174_41 1390  
                i2u175_40 13AC                  i2u175_41 13A8                  i2u176_40 13C6  
                i2u176_41 13C2                  i2u177_40 13D4                  i2u177_41 13D0  
                i2u178_40 13E8                  i2u178_41 13E4                  i2u179_40 13F6  
                i2u179_41 13F2             _blink_counter 001D             _PORTA_current 0007  
               init@F4605 0019                ?_busy_wait 0023                 init@i_117 00AC  
              submit@4720 003D                  __Hrparam 0000                ?_move_left 0023  
              ?_move_down 0023                  __Lrparam 0000           move_right@F4750 0013  
        __size_of___lwmod 0064          __size_of_canMove 00AC              move_up@F4753 0011  
               setLed@pos 00A2                  _blink_on 0043                  __ptext10 0E5C  
                __ptext11 147C                  __ptext20 12CA                  __ptext13 0AAA  
                __ptext14 0012                  __ptext15 1418                  __ptext16 1634  
                __ptext17 14C2                  __ptext18 15FE                  __ptext19 1558  
        __size_of_move_up 0020      move_left@newPosition 00AD             __size_of_draw 044A  
           __size_of_main 0018             __size_of_init 014A             __size_of_move 0026  
                draw@4660 00B7                  draw@4652 00AF                  draw@4670 00C1  
                draw@4662 00B9                  draw@4654 00B1                  draw@4680 00CB  
                draw@4672 00C3                  draw@4664 00BB                  draw@4656 00B3  
                draw@4682 00CD                  draw@4674 00C5                  draw@4666 00BD  
                draw@4658 00B5                  draw@4684 00CF                  draw@4676 00C7  
                draw@4668 00BF                  draw@4678 00C9              ??_move_right 00AD  
                int$flags 0044                  _position 001B                  _rotation 0021  
        ??_not_intersects 0023                  init@4606 00A6               ??_busy_wait 00A2  
      __end_of_move_right 15BE                  intlevel2 0000          ___lwmod@dividend 0023  
           ??i2_move_down 002E               ??_move_left 00AD               ??_move_down 00AD  
         ___lwmod@divisor 0025           ___lwmod@counter 0027               _prev_submit 001F  
__size_of_HandleInterrupt 1410  
