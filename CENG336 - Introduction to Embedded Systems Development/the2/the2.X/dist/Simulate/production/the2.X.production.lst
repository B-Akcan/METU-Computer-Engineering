

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Apr 20 16:47:43 2024

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F8722 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	idataCOMRAM
    75  00163C                     __pidataCOMRAM:
    76                           	callstack 0
    77                           
    78                           ;initializer for _blink_on
    79  00163C  01                 	db	1
    80  0000                     _LATF	set	3982
    81  0000                     _LATE	set	3981
    82  0000                     _LATD	set	3980
    83  0000                     _LATC	set	3979
    84  0000                     _PORTJ	set	3976
    85  0000                     _PORTH	set	3975
    86  0000                     _PORTF	set	3973
    87  0000                     _PORTE	set	3972
    88  0000                     _PORTD	set	3971
    89  0000                     _PORTC	set	3970
    90  0000                     _PORTA	set	3968
    91  0000                     _TRISJ	set	3994
    92  0000                     _TRISH	set	3993
    93  0000                     _TRISF	set	3991
    94  0000                     _TRISE	set	3990
    95  0000                     _TRISD	set	3989
    96  0000                     _TRISC	set	3988
    97  0000                     _TRISB	set	3987
    98  0000                     _TRISA	set	3986
    99  0000                     _T0CON	set	4053
   100  0000                     _PORTB	set	3969
   101  0000                     _TMR0H	set	4055
   102  0000                     _TMR0L	set	4054
   103  0000                     _INTCON	set	4082
   104                           
   105                           ; #config settings
   106                           
   107                           	psect	cinit
   108  0014FE                     __pcinit:
   109                           	callstack 0
   110  0014FE                     start_initialization:
   111                           	callstack 0
   112  0014FE                     __initialization:
   113                           	callstack 0
   114                           
   115                           ; Initialize objects allocated to COMRAM (1 bytes)
   116                           ; load TBLPTR registers with __pidataCOMRAM
   117  0014FE  0E3C               	movlw	low __pidataCOMRAM
   118  001500  6EF6               	movwf	tblptrl,c
   119  001502  0E16               	movlw	high __pidataCOMRAM
   120  001504  6EF7               	movwf	tblptrh,c
   121  001506  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   122  001508  6EF8               	movwf	tblptru,c
   123  00150A  0009               	tblrd		*+	;fetch initializer
   124  00150C  CFF5 F043          	movff	tablat,__pdataCOMRAM
   125                           
   126                           ; Clear objects allocated to BANK0 (66 bytes)
   127  001510  EE00  F060         	lfsr	0,__pbssBANK0
   128  001514  0E42               	movlw	66
   129  001516                     clear_0:
   130  001516  6AEE               	clrf	postinc0,c
   131  001518  06E8               	decf	wreg,f,c
   132  00151A  E1FD               	bnz	clear_0
   133                           
   134                           ; Clear objects allocated to COMRAM (34 bytes)
   135  00151C  EE00  F001         	lfsr	0,__pbssCOMRAM
   136  001520  0E22               	movlw	34
   137  001522                     clear_1:
   138  001522  6AEE               	clrf	postinc0,c
   139  001524  06E8               	decf	wreg,f,c
   140  001526  E1FD               	bnz	clear_1
   141  001528                     end_of_initialization:
   142                           	callstack 0
   143  001528                     __end_of__initialization:
   144                           	callstack 0
   145  001528  9044               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   146  00152A  9244               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   147  00152C  0100               	movlb	0
   148  00152E  EF0E  F00B         	goto	_main	;jump to C main() function
   149                           
   150                           	psect	bssCOMRAM
   151  000001                     __pbssCOMRAM:
   152                           	callstack 0
   153  000001                     _keys:
   154                           	callstack 0
   155  000001                     	ds	6
   156  000007                     _PORTA_current:
   157                           	callstack 0
   158  000007                     	ds	4
   159  00000B                     _PORTA_previous:
   160                           	callstack 0
   161  00000B                     	ds	4
   162  00000F                     move_down@F4756:
   163                           	callstack 0
   164  00000F                     	ds	2
   165  000011                     move_up@F4753:
   166                           	callstack 0
   167  000011                     	ds	2
   168  000013                     move_right@F4750:
   169                           	callstack 0
   170  000013                     	ds	2
   171  000015                     move_left@F4747:
   172                           	callstack 0
   173  000015                     	ds	2
   174  000017                     submit@F4719:
   175                           	callstack 0
   176  000017                     	ds	2
   177  000019                     init@F4605:
   178                           	callstack 0
   179  000019                     	ds	2
   180  00001B                     _position:
   181                           	callstack 0
   182  00001B                     	ds	2
   183  00001D                     _blink_counter:
   184                           	callstack 0
   185  00001D                     	ds	2
   186  00001F                     _prev_submit:
   187                           	callstack 0
   188  00001F                     	ds	1
   189  000020                     _type:
   190                           	callstack 0
   191  000020                     	ds	1
   192  000021                     _rotation:
   193                           	callstack 0
   194  000021                     	ds	1
   195  000022                     _counter250ms:
   196                           	callstack 0
   197  000022                     	ds	1
   198                           
   199                           	psect	dataCOMRAM
   200  000043                     __pdataCOMRAM:
   201                           	callstack 0
   202  000043                     _blink_on:
   203                           	callstack 0
   204  000043                     	ds	1
   205                           
   206                           	psect	bssBANK0
   207  000060                     __pbssBANK0:
   208                           	callstack 0
   209  000060                     _grid:
   210                           	callstack 0
   211  000060                     	ds	32
   212  000080                     draw@F4683:
   213                           	callstack 0
   214  000080                     	ds	2
   215  000082                     draw@F4681:
   216                           	callstack 0
   217  000082                     	ds	2
   218  000084                     draw@F4679:
   219                           	callstack 0
   220  000084                     	ds	2
   221  000086                     draw@F4677:
   222                           	callstack 0
   223  000086                     	ds	2
   224  000088                     draw@F4675:
   225                           	callstack 0
   226  000088                     	ds	2
   227  00008A                     draw@F4673:
   228                           	callstack 0
   229  00008A                     	ds	2
   230  00008C                     draw@F4671:
   231                           	callstack 0
   232  00008C                     	ds	2
   233  00008E                     draw@F4669:
   234                           	callstack 0
   235  00008E                     	ds	2
   236  000090                     draw@F4667:
   237                           	callstack 0
   238  000090                     	ds	2
   239  000092                     draw@F4665:
   240                           	callstack 0
   241  000092                     	ds	2
   242  000094                     draw@F4663:
   243                           	callstack 0
   244  000094                     	ds	2
   245  000096                     draw@F4661:
   246                           	callstack 0
   247  000096                     	ds	2
   248  000098                     draw@F4659:
   249                           	callstack 0
   250  000098                     	ds	2
   251  00009A                     draw@F4657:
   252                           	callstack 0
   253  00009A                     	ds	2
   254  00009C                     draw@F4655:
   255                           	callstack 0
   256  00009C                     	ds	2
   257  00009E                     draw@F4653:
   258                           	callstack 0
   259  00009E                     	ds	2
   260  0000A0                     draw@F4651:
   261                           	callstack 0
   262  0000A0                     	ds	2
   263                           
   264                           	psect	cstackBANK0
   265  0000A2                     __pcstackBANK0:
   266                           	callstack 0
   267  0000A2                     ??_init:
   268  0000A2                     setLed@pos:
   269                           	callstack 0
   270  0000A2                     canMove@position:
   271                           	callstack 0
   272  0000A2                     busy_wait@i:
   273                           	callstack 0
   274                           
   275                           ; 4 bytes @ 0x0
   276  0000A2                     	ds	2
   277  0000A4                     ??_canMove:
   278  0000A4                     setLed@value:
   279                           	callstack 0
   280                           
   281                           ; 1 bytes @ 0x2
   282  0000A4                     	ds	1
   283  0000A5                     ??_setLed:
   284                           
   285                           ; 1 bytes @ 0x3
   286  0000A5                     	ds	1
   287  0000A6                     canMove@left:
   288                           	callstack 0
   289  0000A6                     init@4606:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x4
   293  0000A6                     	ds	1
   294  0000A7                     ??_draw:
   295  0000A7                     canMove@right:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x5
   299  0000A7                     	ds	1
   300  0000A8                     canMove@top:
   301                           	callstack 0
   302  0000A8                     init@i:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x6
   306  0000A8                     	ds	1
   307  0000A9                     canMove@bot:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0x7
   311  0000A9                     	ds	1
   312  0000AA                     _canMove$262:
   313                           	callstack 0
   314  0000AA                     init@j:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x8
   318  0000AA                     	ds	1
   319  0000AB                     move@newPosition:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x9
   323  0000AB                     	ds	1
   324  0000AC                     init@i_116:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0xA
   328  0000AC                     	ds	1
   329  0000AD                     move_left@newPosition:
   330                           	callstack 0
   331  0000AD                     move_right@newPosition:
   332                           	callstack 0
   333  0000AD                     move_up@newPosition:
   334                           	callstack 0
   335  0000AD                     move_down@newPosition:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0xB
   339  0000AD                     	ds	2
   340  0000AF                     poll_a@i:
   341                           	callstack 0
   342  0000AF                     draw@4652:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0xD
   346  0000AF                     	ds	2
   347  0000B1                     draw@4654:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0xF
   351  0000B1                     	ds	2
   352  0000B3                     draw@4656:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x11
   356  0000B3                     	ds	2
   357  0000B5                     draw@4658:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x13
   361  0000B5                     	ds	2
   362  0000B7                     draw@4660:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x15
   366  0000B7                     	ds	2
   367  0000B9                     draw@4662:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x17
   371  0000B9                     	ds	2
   372  0000BB                     draw@4664:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x19
   376  0000BB                     	ds	2
   377  0000BD                     draw@4666:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x1B
   381  0000BD                     	ds	2
   382  0000BF                     draw@4668:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x1D
   386  0000BF                     	ds	2
   387  0000C1                     draw@4670:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x1F
   391  0000C1                     	ds	2
   392  0000C3                     draw@4672:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x21
   396  0000C3                     	ds	2
   397  0000C5                     draw@4674:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x23
   401  0000C5                     	ds	2
   402  0000C7                     draw@4676:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x25
   406  0000C7                     	ds	2
   407  0000C9                     draw@4678:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x27
   411  0000C9                     	ds	2
   412  0000CB                     draw@4680:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x29
   416  0000CB                     	ds	2
   417  0000CD                     draw@4682:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x2B
   421  0000CD                     	ds	2
   422  0000CF                     draw@4684:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x2D
   426  0000CF                     	ds	2
   427  0000D1                     
   428                           ; 1 bytes @ 0x2F
   429                           
   430                           	psect	cstackCOMRAM
   431  000023                     __pcstackCOMRAM:
   432                           	callstack 0
   433  000023                     ??_not_intersects:
   434  000023                     ?___lwmod:
   435                           	callstack 0
   436  000023                     ___lwmod@dividend:
   437                           	callstack 0
   438  000023                     i2canMove@position:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x0
   442  000023                     	ds	2
   443  000025                     ??i2_canMove:
   444  000025                     ___lwmod@divisor:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x2
   448  000025                     	ds	2
   449  000027                     _not_intersects$119:
   450                           	callstack 0
   451  000027                     ___lwmod@counter:
   452                           	callstack 0
   453  000027                     i2canMove@left:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0x4
   457  000027                     	ds	1
   458  000028                     _not_intersects$120:
   459                           	callstack 0
   460  000028                     i2canMove@right:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0x5
   464  000028                     	ds	1
   465  000029                     _not_intersects$121:
   466                           	callstack 0
   467  000029                     i2canMove@top:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0x6
   471  000029                     	ds	1
   472  00002A                     _not_intersects$122:
   473                           	callstack 0
   474  00002A                     i2canMove@bot:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x7
   478  00002A                     	ds	1
   479  00002B                     _not_intersects$123:
   480                           	callstack 0
   481  00002B                     i2_canMove$262:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x8
   485  00002B                     	ds	1
   486  00002C                     _not_intersects$124:
   487                           	callstack 0
   488  00002C                     i2move@newPosition:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x9
   492  00002C                     	ds	1
   493  00002D                     _not_intersects$125:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0xA
   497  00002D                     	ds	1
   498  00002E                     _not_intersects$126:
   499                           	callstack 0
   500  00002E                     i2move_down@newPosition:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0xB
   504  00002E                     	ds	1
   505  00002F                     _not_intersects$127:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0xC
   509  00002F                     	ds	1
   510  000030                     _not_intersects$128:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0xD
   514  000030                     	ds	1
   515  000031                     _not_intersects$129:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0xE
   519  000031                     	ds	1
   520  000032                     _not_intersects$130:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0xF
   524  000032                     	ds	1
   525  000033                     _not_intersects$131:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x10
   529  000033                     	ds	1
   530  000034                     _not_intersects$132:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x11
   534  000034                     	ds	1
   535  000035                     _not_intersects$133:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x12
   539  000035                     	ds	1
   540  000036                     _not_intersects$134:
   541                           	callstack 0
   542                           
   543                           ; 1 bytes @ 0x13
   544  000036                     	ds	1
   545  000037                     _not_intersects$135:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x14
   549  000037                     	ds	1
   550  000038                     not_intersects@intersects:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0x15
   554  000038                     	ds	1
   555  000039                     ??_submit:
   556                           
   557                           ; 1 bytes @ 0x16
   558  000039                     	ds	4
   559  00003D                     submit@4720:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x1A
   563  00003D                     	ds	2
   564  00003F                     ??_HandleInterrupt:
   565                           
   566                           ; 1 bytes @ 0x1C
   567  00003F                     	ds	4
   568                           
   569 ;;
   570 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   571 ;;
   572 ;; *************** function _main *****************
   573 ;; Defined at:
   574 ;;		line 517 in file "main.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;Total ram usage:        0 bytes
   593 ;; Hardware stack levels required when called:    9
   594 ;; This function calls:
   595 ;;		_busy_wait
   596 ;;		_draw
   597 ;;		_init
   598 ;;		_poll_a
   599 ;; This function is called by:
   600 ;;		Startup code after reset
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text0
   605  00161C                     __ptext0:
   606                           	callstack 0
   607  00161C                     _main:
   608                           	callstack 22
   609  00161C                     
   610                           ;main.c: 518:     init();
   611  00161C  ECFB  F007         	call	_init	;wreg free
   612  001620                     
   613                           ;main.c: 519:     busy_wait();
   614  001620  EC3E  F00A         	call	_busy_wait	;wreg free
   615  001624                     l2682:
   616                           
   617                           ;main.c: 522:         poll_a();
   618  001624  ECA0  F008         	call	_poll_a	;wreg free
   619  001628                     
   620                           ;main.c: 523:         draw();
   621  001628  EC30  F003         	call	_draw	;wreg free
   622  00162C  EF12  F00B         	goto	l2682
   623  001630  EF07  F000         	goto	start
   624  001634                     __end_of_main:
   625                           	callstack 0
   626                           
   627 ;; *************** function _poll_a *****************
   628 ;; Defined at:
   629 ;;		line 493 in file "main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;  i               1   13[BANK0 ] unsigned char 
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   647 ;;Total ram usage:        1 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; Hardware stack levels required when called:    8
   650 ;; This function calls:
   651 ;;		_move_down
   652 ;;		_move_left
   653 ;;		_move_right
   654 ;;		_move_up
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text1
   661  001140                     __ptext1:
   662                           	callstack 0
   663  001140                     _poll_a:
   664                           	callstack 22
   665  001140                     
   666                           ;main.c: 494:     PORTA_current[KEY_RIGHT] = ((PORTA) & (1 << (KEY_RIGHT)));
   667  001140  5080               	movf	128,w,c	;volatile
   668  001142  0B01               	andlw	1
   669  001144  6E07               	movwf	_PORTA_current^0,c
   670                           
   671                           ;main.c: 495:     PORTA_current[KEY_UP] = ((PORTA) & (1 << (KEY_UP)));
   672  001146  5080               	movf	128,w,c	;volatile
   673  001148  0B02               	andlw	2
   674  00114A  6E08               	movwf	(_PORTA_current+1)^0,c
   675                           
   676                           ;main.c: 496:     PORTA_current[KEY_DOWN] = ((PORTA) & (1 << (KEY_DOWN)));
   677  00114C  5080               	movf	128,w,c	;volatile
   678  00114E  0B04               	andlw	4
   679  001150  6E09               	movwf	(_PORTA_current+2)^0,c
   680                           
   681                           ;main.c: 497:     PORTA_current[KEY_LEFT] = ((PORTA) & (1 << (KEY_LEFT)));
   682  001152  5080               	movf	128,w,c	;volatile
   683  001154  0B08               	andlw	8
   684  001156  6E0A               	movwf	(_PORTA_current+3)^0,c
   685  001158                     
   686                           ;main.c: 499:     if (PORTA_current[KEY_RIGHT] && !PORTA_previous[KEY_RIGHT])
   687  001158  5007               	movf	_PORTA_current^0,w,c
   688  00115A  B4D8               	btfsc	status,2,c
   689  00115C  EFB2  F008         	goto	u2131
   690  001160  EFB4  F008         	goto	u2130
   691  001164                     u2131:
   692  001164  EFBE  F008         	goto	l2648
   693  001168                     u2130:
   694  001168  500B               	movf	_PORTA_previous^0,w,c
   695  00116A  A4D8               	btfss	status,2,c
   696  00116C  EFBA  F008         	goto	u2141
   697  001170  EFBC  F008         	goto	u2140
   698  001174                     u2141:
   699  001174  EFBE  F008         	goto	l2648
   700  001178                     u2140:
   701  001178                     
   702                           ;main.c: 500:         move_right();
   703  001178  ECCF  F00A         	call	_move_right	;wreg free
   704  00117C                     l2648:
   705                           
   706                           ;main.c: 501:     if (PORTA_current[KEY_UP] && !PORTA_previous[KEY_UP])
   707  00117C  5008               	movf	(_PORTA_current+1)^0,w,c
   708  00117E  B4D8               	btfsc	status,2,c
   709  001180  EFC4  F008         	goto	u2151
   710  001184  EFC6  F008         	goto	u2150
   711  001188                     u2151:
   712  001188  EFD0  F008         	goto	l2654
   713  00118C                     u2150:
   714  00118C  500C               	movf	(_PORTA_previous+1)^0,w,c
   715  00118E  A4D8               	btfss	status,2,c
   716  001190  EFCC  F008         	goto	u2161
   717  001194  EFCE  F008         	goto	u2160
   718  001198                     u2161:
   719  001198  EFD0  F008         	goto	l2654
   720  00119C                     u2160:
   721  00119C                     
   722                           ;main.c: 502:         move_up();
   723  00119C  ECBF  F00A         	call	_move_up	;wreg free
   724  0011A0                     l2654:
   725                           
   726                           ;main.c: 503:     if (PORTA_current[KEY_DOWN] && !PORTA_previous[KEY_DOWN])
   727  0011A0  5009               	movf	(_PORTA_current+2)^0,w,c
   728  0011A2  B4D8               	btfsc	status,2,c
   729  0011A4  EFD6  F008         	goto	u2171
   730  0011A8  EFD8  F008         	goto	u2170
   731  0011AC                     u2171:
   732  0011AC  EFE2  F008         	goto	l2660
   733  0011B0                     u2170:
   734  0011B0  500D               	movf	(_PORTA_previous+2)^0,w,c
   735  0011B2  A4D8               	btfss	status,2,c
   736  0011B4  EFDE  F008         	goto	u2181
   737  0011B8  EFE0  F008         	goto	u2180
   738  0011BC                     u2181:
   739  0011BC  EFE2  F008         	goto	l2660
   740  0011C0                     u2180:
   741  0011C0                     
   742                           ;main.c: 504:         move_down();
   743  0011C0  ECEF  F00A         	call	_move_down	;wreg free
   744  0011C4                     l2660:
   745                           
   746                           ;main.c: 505:     if (PORTA_current[KEY_LEFT] && !PORTA_previous[KEY_LEFT])
   747  0011C4  500A               	movf	(_PORTA_current+3)^0,w,c
   748  0011C6  B4D8               	btfsc	status,2,c
   749  0011C8  EFE8  F008         	goto	u2191
   750  0011CC  EFEA  F008         	goto	u2190
   751  0011D0                     u2191:
   752  0011D0  EFF4  F008         	goto	l2666
   753  0011D4                     u2190:
   754  0011D4  500E               	movf	(_PORTA_previous+3)^0,w,c
   755  0011D6  A4D8               	btfss	status,2,c
   756  0011D8  EFF0  F008         	goto	u2201
   757  0011DC  EFF2  F008         	goto	u2200
   758  0011E0                     u2201:
   759  0011E0  EFF4  F008         	goto	l2666
   760  0011E4                     u2200:
   761  0011E4                     
   762                           ;main.c: 506:         move_left();
   763  0011E4  ECDF  F00A         	call	_move_left	;wreg free
   764  0011E8                     l2666:
   765                           
   766                           ;main.c: 508:     for (char i = 0; i < ARROW_KEY_COUNT; i++) {
   767  0011E8  0E00               	movlw	0
   768  0011EA  0100               	movlb	0	; () banked
   769  0011EC  6FAF               	movwf	poll_a@i& (0+255),b
   770  0011EE                     l2672:
   771                           
   772                           ; BSR set to: 0
   773                           ;main.c: 509:         PORTA_previous[i] = PORTA_current[i];
   774  0011EE  0E07               	movlw	low _PORTA_current
   775  0011F0  25AF               	addwf	poll_a@i& (0+255),w,b
   776  0011F2  6ED9               	movwf	fsr2l,c
   777  0011F4  6ADA               	clrf	fsr2h,c
   778  0011F6  0E00               	movlw	high _PORTA_current
   779  0011F8  22DA               	addwfc	fsr2h,f,c
   780  0011FA  0E0B               	movlw	low _PORTA_previous
   781  0011FC  25AF               	addwf	poll_a@i& (0+255),w,b
   782  0011FE  6EE1               	movwf	fsr1l,c
   783  001200  6AE2               	clrf	fsr1h,c
   784  001202  0E00               	movlw	high _PORTA_previous
   785  001204  22E2               	addwfc	fsr1h,f,c
   786  001206  CFDF FFE7          	movff	indf2,indf1
   787  00120A                     
   788                           ; BSR set to: 0
   789                           ;main.c: 510:     }
   790  00120A  2BAF               	incf	poll_a@i& (0+255),f,b
   791  00120C                     
   792                           ; BSR set to: 0
   793  00120C  0E03               	movlw	3
   794  00120E  65AF               	cpfsgt	poll_a@i& (0+255),b
   795  001210  EF0C  F009         	goto	u2211
   796  001214  EF0E  F009         	goto	u2210
   797  001218                     u2211:
   798  001218  EFF7  F008         	goto	l2672
   799  00121C                     u2210:
   800  00121C                     
   801                           ; BSR set to: 0
   802  00121C  0012               	return		;funcret
   803  00121E                     __end_of_poll_a:
   804                           	callstack 0
   805                           
   806 ;; *************** function _move_up *****************
   807 ;; Defined at:
   808 ;;		line 483 in file "main.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  newPosition     2   11[BANK0 ] struct Position
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;Total ram usage:        2 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    7
   829 ;; This function calls:
   830 ;;		_move
   831 ;; This function is called by:
   832 ;;		_poll_a
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text2
   837  00157E                     __ptext2:
   838                           	callstack 0
   839  00157E                     _move_up:
   840                           	callstack 22
   841  00157E                     
   842                           ;main.c: 484:     Position newPosition = {position.x, position.y - 1};
   843  00157E  C011  F0AD         	movff	move_up@F4753,move_up@newPosition
   844  001582  C012  F0AE         	movff	move_up@F4753+1,move_up@newPosition+1
   845  001586  C01B  F0AD         	movff	_position,move_up@newPosition
   846  00158A  041C               	decf	(_position+1)^0,w,c
   847  00158C  0100               	movlb	0	; () banked
   848  00158E  6FAE               	movwf	(move_up@newPosition+1)& (0+255),b
   849  001590                     
   850                           ; BSR set to: 0
   851                           ;main.c: 485:     move(newPosition);
   852  001590  C0AD  F0AB         	movff	move_up@newPosition,move@newPosition
   853  001594  C0AE  F0AC         	movff	move_up@newPosition+1,move@newPosition+1
   854  001598  EC99  F00A         	call	_move	;wreg free
   855  00159C  0012               	return		;funcret
   856  00159E                     __end_of_move_up:
   857                           	callstack 0
   858                           
   859 ;; *************** function _move_right *****************
   860 ;; Defined at:
   861 ;;		line 478 in file "main.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;  newPosition     2   11[BANK0 ] struct Position
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, status,2, status,0, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;Total ram usage:        2 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; Hardware stack levels required when called:    7
   882 ;; This function calls:
   883 ;;		_move
   884 ;; This function is called by:
   885 ;;		_poll_a
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text3
   890  00159E                     __ptext3:
   891                           	callstack 0
   892  00159E                     _move_right:
   893                           	callstack 22
   894  00159E                     
   895                           ;main.c: 479:     Position newPosition = {position.x + 1, position.y};
   896  00159E  C013  F0AD         	movff	move_right@F4750,move_right@newPosition
   897  0015A2  C014  F0AE         	movff	move_right@F4750+1,move_right@newPosition+1
   898  0015A6  281B               	incf	_position^0,w,c
   899  0015A8  0100               	movlb	0	; () banked
   900  0015AA  6FAD               	movwf	move_right@newPosition& (0+255),b
   901  0015AC                     
   902                           ; BSR set to: 0
   903  0015AC  C01C  F0AE         	movff	_position+1,move_right@newPosition+1
   904  0015B0                     
   905                           ; BSR set to: 0
   906                           ;main.c: 480:     move(newPosition);
   907  0015B0  C0AD  F0AB         	movff	move_right@newPosition,move@newPosition
   908  0015B4  C0AE  F0AC         	movff	move_right@newPosition+1,move@newPosition+1
   909  0015B8  EC99  F00A         	call	_move	;wreg free
   910  0015BC  0012               	return		;funcret
   911  0015BE                     __end_of_move_right:
   912                           	callstack 0
   913                           
   914 ;; *************** function _move_left *****************
   915 ;; Defined at:
   916 ;;		line 473 in file "main.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  newPosition     2   11[BANK0 ] struct Position
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;Total ram usage:        2 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    7
   937 ;; This function calls:
   938 ;;		_move
   939 ;; This function is called by:
   940 ;;		_poll_a
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text4
   945  0015BE                     __ptext4:
   946                           	callstack 0
   947  0015BE                     _move_left:
   948                           	callstack 22
   949  0015BE                     
   950                           ;main.c: 474:     Position newPosition = {position.x - 1, position.y};
   951  0015BE  C015  F0AD         	movff	move_left@F4747,move_left@newPosition
   952  0015C2  C016  F0AE         	movff	move_left@F4747+1,move_left@newPosition+1
   953  0015C6  041B               	decf	_position^0,w,c
   954  0015C8  0100               	movlb	0	; () banked
   955  0015CA  6FAD               	movwf	move_left@newPosition& (0+255),b
   956  0015CC                     
   957                           ; BSR set to: 0
   958  0015CC  C01C  F0AE         	movff	_position+1,move_left@newPosition+1
   959  0015D0                     
   960                           ; BSR set to: 0
   961                           ;main.c: 475:     move(newPosition);
   962  0015D0  C0AD  F0AB         	movff	move_left@newPosition,move@newPosition
   963  0015D4  C0AE  F0AC         	movff	move_left@newPosition+1,move@newPosition+1
   964  0015D8  EC99  F00A         	call	_move	;wreg free
   965  0015DC  0012               	return		;funcret
   966  0015DE                     __end_of_move_left:
   967                           	callstack 0
   968                           
   969 ;; *************** function _move_down *****************
   970 ;; Defined at:
   971 ;;		line 488 in file "main.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;  newPosition     2   11[BANK0 ] struct Position
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;Total ram usage:        2 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; Hardware stack levels required when called:    7
   992 ;; This function calls:
   993 ;;		_move
   994 ;; This function is called by:
   995 ;;		_poll_a
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text5
  1000  0015DE                     __ptext5:
  1001                           	callstack 0
  1002  0015DE                     _move_down:
  1003                           	callstack 22
  1004  0015DE                     
  1005                           ;main.c: 489:     Position newPosition = {position.x, position.y + 1};
  1006  0015DE  C00F  F0AD         	movff	move_down@F4756,move_down@newPosition
  1007  0015E2  C010  F0AE         	movff	move_down@F4756+1,move_down@newPosition+1
  1008  0015E6  C01B  F0AD         	movff	_position,move_down@newPosition
  1009  0015EA  281C               	incf	(_position+1)^0,w,c
  1010  0015EC  0100               	movlb	0	; () banked
  1011  0015EE  6FAE               	movwf	(move_down@newPosition+1)& (0+255),b
  1012  0015F0                     
  1013                           ; BSR set to: 0
  1014                           ;main.c: 490:     move(newPosition);
  1015  0015F0  C0AD  F0AB         	movff	move_down@newPosition,move@newPosition
  1016  0015F4  C0AE  F0AC         	movff	move_down@newPosition+1,move@newPosition+1
  1017  0015F8  EC99  F00A         	call	_move	;wreg free
  1018  0015FC  0012               	return		;funcret
  1019  0015FE                     __end_of_move_down:
  1020                           	callstack 0
  1021                           
  1022 ;; *************** function _move *****************
  1023 ;; Defined at:
  1024 ;;		line 467 in file "main.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  newPosition     2    9[BANK0 ] struct Position
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;		None
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, status,0, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1038 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;Total ram usage:        2 bytes
  1043 ;; Hardware stack levels used:    1
  1044 ;; Hardware stack levels required when called:    6
  1045 ;; This function calls:
  1046 ;;		_canMove
  1047 ;; This function is called by:
  1048 ;;		_move_left
  1049 ;;		_move_right
  1050 ;;		_move_up
  1051 ;;		_move_down
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           	psect	text6
  1056  001532                     __ptext6:
  1057                           	callstack 0
  1058  001532                     _move:
  1059                           	callstack 22
  1060  001532                     
  1061                           ;main.c: 468:     if (canMove(newPosition)) {
  1062  001532  C0AB  F0A2         	movff	move@newPosition,canMove@position
  1063  001536  C0AC  F0A3         	movff	move@newPosition+1,canMove@position+1
  1064  00153A  EC0F  F009         	call	_canMove	;wreg free
  1065  00153E  0900               	iorlw	0
  1066  001540  B4D8               	btfsc	status,2,c
  1067  001542  EFA5  F00A         	goto	u1841
  1068  001546  EFA7  F00A         	goto	u1840
  1069  00154A                     u1841:
  1070  00154A  EFAB  F00A         	goto	l253
  1071  00154E                     u1840:
  1072  00154E                     
  1073                           ;main.c: 469:         position = newPosition;
  1074  00154E  C0AB  F01B         	movff	move@newPosition,_position
  1075  001552  C0AC  F01C         	movff	move@newPosition+1,_position+1
  1076  001556                     l253:
  1077  001556  0012               	return		;funcret
  1078  001558                     __end_of_move:
  1079                           	callstack 0
  1080                           
  1081 ;; *************** function _canMove *****************
  1082 ;; Defined at:
  1083 ;;		line 445 in file "main.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  position        2    0[BANK0 ] struct Position
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  bot             1    7[BANK0 ] unsigned char 
  1088 ;;  top             1    6[BANK0 ] unsigned char 
  1089 ;;  right           1    5[BANK0 ] unsigned char 
  1090 ;;  left            1    4[BANK0 ] unsigned char 
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      unsigned char 
  1093 ;; Registers used:
  1094 ;;		wreg, status,2, status,0
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1100 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1101 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1102 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1103 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1104 ;;Total ram usage:        9 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; Hardware stack levels required when called:    5
  1107 ;; This function calls:
  1108 ;;		Nothing
  1109 ;; This function is called by:
  1110 ;;		_move
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           	psect	text7
  1115  00121E                     __ptext7:
  1116                           	callstack 0
  1117  00121E                     _canMove:
  1118                           	callstack 22
  1119  00121E                     
  1120                           ;main.c: 446:     unsigned char left, right, top, bot;;main.c: 447:     switch (type) {
  1121  00121E  EF25  F009         	goto	l2394
  1122  001222                     l243:
  1123                           
  1124                           ; BSR set to: 0
  1125                           ;main.c: 449:         {;main.c: 450:             left = right = position.x;
  1126  001222  C0A2  F0A7         	movff	canMove@position,canMove@right
  1127  001226  C0A7  F0A6         	movff	canMove@right,canMove@left
  1128                           
  1129                           ;main.c: 451:             top = bot = position.y;
  1130  00122A  C0A3  F0A9         	movff	canMove@position+1,canMove@bot
  1131  00122E  C0A9  F0A8         	movff	canMove@bot,canMove@top
  1132                           
  1133                           ;main.c: 452:             break;
  1134  001232  EF3F  F009         	goto	l2396
  1135  001236                     l246:
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;main.c: 456:         {;main.c: 457:             left = position.x;
  1139  001236  C0A2  F0A6         	movff	canMove@position,canMove@left
  1140  00123A                     
  1141                           ; BSR set to: 0
  1142                           ;main.c: 458:             right = position.x + 1;
  1143  00123A  29A2               	incf	canMove@position& (0+255),w,b
  1144  00123C  6FA7               	movwf	canMove@right& (0+255),b
  1145  00123E                     
  1146                           ; BSR set to: 0
  1147                           ;main.c: 459:             top = position.y;
  1148  00123E  C0A3  F0A8         	movff	canMove@position+1,canMove@top
  1149                           
  1150                           ;main.c: 460:             bot = position.y + 1;
  1151  001242  29A3               	incf	(canMove@position+1)& (0+255),w,b
  1152  001244  6FA9               	movwf	canMove@bot& (0+255),b
  1153                           
  1154                           ;main.c: 461:             break;
  1155  001246  EF3F  F009         	goto	l2396
  1156  00124A                     l2394:
  1157  00124A  5020               	movf	_type^0,w,c
  1158  00124C  0100               	movlb	0	; () banked
  1159  00124E  6FA4               	movwf	??_canMove& (0+255),b
  1160  001250  6BA5               	clrf	(??_canMove+1)& (0+255),b
  1161                           
  1162                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1163                           ; Switch size 1, requested type "simple"
  1164                           ; Number of cases is 1, Range of values is 0 to 0
  1165                           ; switch strategies available:
  1166                           ; Name         Instructions Cycles
  1167                           ; simple_byte            4     3 (average)
  1168                           ;	Chosen strategy is simple_byte
  1169  001252  51A5               	movf	(??_canMove+1)& (0+255),w,b
  1170  001254  0A00               	xorlw	0	; case 0
  1171  001256  B4D8               	btfsc	status,2,c
  1172  001258  EF30  F009         	goto	l2896
  1173  00125C  EF3F  F009         	goto	l2396
  1174  001260                     l2896:
  1175                           
  1176                           ; BSR set to: 0
  1177                           ; Switch size 1, requested type "simple"
  1178                           ; Number of cases is 3, Range of values is 0 to 2
  1179                           ; switch strategies available:
  1180                           ; Name         Instructions Cycles
  1181                           ; simple_byte           10     6 (average)
  1182                           ;	Chosen strategy is simple_byte
  1183  001260  51A4               	movf	??_canMove& (0+255),w,b
  1184  001262  0A00               	xorlw	0	; case 0
  1185  001264  B4D8               	btfsc	status,2,c
  1186  001266  EF11  F009         	goto	l243
  1187  00126A  0A01               	xorlw	1	; case 1
  1188  00126C  B4D8               	btfsc	status,2,c
  1189  00126E  EF1B  F009         	goto	l246
  1190  001272  0A03               	xorlw	3	; case 2
  1191  001274  B4D8               	btfsc	status,2,c
  1192  001276  EF1B  F009         	goto	l246
  1193  00127A  EF3F  F009         	goto	l2396
  1194  00127E                     l2396:
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;main.c: 464:     return (left < 4 && right < 4 && top < 8 && bot < 8);
  1198  00127E  0E00               	movlw	0
  1199  001280  6FAA               	movwf	_canMove$262& (0+255),b
  1200  001282                     
  1201                           ; BSR set to: 0
  1202  001282  0E04               	movlw	4
  1203  001284  61A6               	cpfslt	canMove@left& (0+255),b
  1204  001286  EF47  F009         	goto	u1801
  1205  00128A  EF49  F009         	goto	u1800
  1206  00128E                     u1801:
  1207  00128E  EF63  F009         	goto	l248
  1208  001292                     u1800:
  1209  001292                     
  1210                           ; BSR set to: 0
  1211  001292  0E04               	movlw	4
  1212  001294  61A7               	cpfslt	canMove@right& (0+255),b
  1213  001296  EF4F  F009         	goto	u1811
  1214  00129A  EF51  F009         	goto	u1810
  1215  00129E                     u1811:
  1216  00129E  EF63  F009         	goto	l248
  1217  0012A2                     u1810:
  1218  0012A2                     
  1219                           ; BSR set to: 0
  1220  0012A2  0E08               	movlw	8
  1221  0012A4  61A8               	cpfslt	canMove@top& (0+255),b
  1222  0012A6  EF57  F009         	goto	u1821
  1223  0012AA  EF59  F009         	goto	u1820
  1224  0012AE                     u1821:
  1225  0012AE  EF63  F009         	goto	l248
  1226  0012B2                     u1820:
  1227  0012B2                     
  1228                           ; BSR set to: 0
  1229  0012B2  0E08               	movlw	8
  1230  0012B4  61A9               	cpfslt	canMove@bot& (0+255),b
  1231  0012B6  EF5F  F009         	goto	u1831
  1232  0012BA  EF61  F009         	goto	u1830
  1233  0012BE                     u1831:
  1234  0012BE  EF63  F009         	goto	l248
  1235  0012C2                     u1830:
  1236  0012C2                     
  1237                           ; BSR set to: 0
  1238  0012C2  0E01               	movlw	1
  1239  0012C4  6FAA               	movwf	_canMove$262& (0+255),b
  1240  0012C6                     l248:
  1241                           
  1242                           ; BSR set to: 0
  1243  0012C6  51AA               	movf	_canMove$262& (0+255),w,b
  1244  0012C8                     
  1245                           ; BSR set to: 0
  1246  0012C8  0012               	return		;funcret
  1247  0012CA                     __end_of_canMove:
  1248                           	callstack 0
  1249                           
  1250 ;; *************** function _init *****************
  1251 ;; Defined at:
  1252 ;;		line 156 in file "main.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  j               2    8[BANK0 ] int 
  1257 ;;  i               2   10[BANK0 ] int 
  1258 ;;  i               2    6[BANK0 ] int 
  1259 ;;  4606            2    4[BANK0 ] struct Position
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;Total ram usage:       12 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    5
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text8
  1284  000FF6                     __ptext8:
  1285                           	callstack 0
  1286  000FF6                     _init:
  1287                           	callstack 25
  1288  000FF6                     
  1289                           ;main.c: 190:     position = (Position){0, 0};;main.c: 157:     INTCON = (1 << 5) | (1 <
      +                          < 3);
  1290  000FF6  0E28               	movlw	40
  1291  000FF8  6EF2               	movwf	242,c	;volatile
  1292                           
  1293                           ;main.c: 158:     T0CON = (1 << 3) | (1 << 7);
  1294  000FFA  0E88               	movlw	136
  1295  000FFC  6ED5               	movwf	213,c	;volatile
  1296                           
  1297                           ;main.c: 160:     for (int i = 0; i < 4; i++) {
  1298  000FFE  0E00               	movlw	0
  1299  001000  0100               	movlb	0	; () banked
  1300  001002  6FA9               	movwf	(init@i+1)& (0+255),b
  1301  001004  0E00               	movlw	0
  1302  001006  6FA8               	movwf	init@i& (0+255),b
  1303  001008                     l2498:
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;main.c: 161:         for (int j = 0; j < 8; j++) {
  1307  001008  0E00               	movlw	0
  1308  00100A  6FAB               	movwf	(init@j+1)& (0+255),b
  1309  00100C  0E00               	movlw	0
  1310  00100E  6FAA               	movwf	init@j& (0+255),b
  1311  001010                     l2504:
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;main.c: 162:             grid[i][j] = LED_OFF;
  1315  001010  C0A8  F0A2         	movff	init@i,??_init
  1316  001014  C0A9  F0A3         	movff	init@i+1,??_init+1
  1317  001018  90D8               	bcf	status,0,c
  1318  00101A  37A2               	rlcf	??_init& (0+255),f,b
  1319  00101C  37A3               	rlcf	(??_init+1)& (0+255),f,b
  1320  00101E  90D8               	bcf	status,0,c
  1321  001020  37A2               	rlcf	??_init& (0+255),f,b
  1322  001022  37A3               	rlcf	(??_init+1)& (0+255),f,b
  1323  001024  90D8               	bcf	status,0,c
  1324  001026  37A2               	rlcf	??_init& (0+255),f,b
  1325  001028  37A3               	rlcf	(??_init+1)& (0+255),f,b
  1326  00102A  0E60               	movlw	low _grid
  1327  00102C  6FA4               	movwf	(??_init+2)& (0+255),b
  1328  00102E  0E00               	movlw	high _grid
  1329  001030  6FA5               	movwf	(??_init+3)& (0+255),b
  1330  001032  51A2               	movf	??_init& (0+255),w,b
  1331  001034  27A4               	addwf	(??_init+2)& (0+255),f,b
  1332  001036  51A3               	movf	(??_init+1)& (0+255),w,b
  1333  001038  23A5               	addwfc	(??_init+3)& (0+255),f,b
  1334  00103A  51AA               	movf	init@j& (0+255),w,b
  1335  00103C  25A4               	addwf	(??_init+2)& (0+255),w,b
  1336  00103E  6ED9               	movwf	fsr2l,c
  1337  001040  51AB               	movf	(init@j+1)& (0+255),w,b
  1338  001042  21A5               	addwfc	(??_init+3)& (0+255),w,b
  1339  001044  6EDA               	movwf	fsr2h,c
  1340  001046  0E00               	movlw	0
  1341  001048  6EDF               	movwf	indf2,c
  1342  00104A                     
  1343                           ; BSR set to: 0
  1344                           ;main.c: 163:         }
  1345  00104A  4BAA               	infsnz	init@j& (0+255),f,b
  1346  00104C  2BAB               	incf	(init@j+1)& (0+255),f,b
  1347  00104E                     
  1348                           ; BSR set to: 0
  1349  00104E  BFAB               	btfsc	(init@j+1)& (0+255),7,b
  1350  001050  EF33  F008         	goto	u1981
  1351  001054  51AB               	movf	(init@j+1)& (0+255),w,b
  1352  001056  E109               	bnz	u1980
  1353  001058  0E08               	movlw	8
  1354  00105A  5DAA               	subwf	init@j& (0+255),w,b
  1355  00105C  A0D8               	btfss	status,0,c
  1356  00105E  EF33  F008         	goto	u1981
  1357  001062  EF35  F008         	goto	u1980
  1358  001066                     u1981:
  1359  001066  EF08  F008         	goto	l2504
  1360  00106A                     u1980:
  1361  00106A                     
  1362                           ; BSR set to: 0
  1363                           ;main.c: 164:     }
  1364  00106A  4BA8               	infsnz	init@i& (0+255),f,b
  1365  00106C  2BA9               	incf	(init@i+1)& (0+255),f,b
  1366  00106E                     
  1367                           ; BSR set to: 0
  1368  00106E  BFA9               	btfsc	(init@i+1)& (0+255),7,b
  1369  001070  EF43  F008         	goto	u1991
  1370  001074  51A9               	movf	(init@i+1)& (0+255),w,b
  1371  001076  E109               	bnz	u1990
  1372  001078  0E04               	movlw	4
  1373  00107A  5DA8               	subwf	init@i& (0+255),w,b
  1374  00107C  A0D8               	btfss	status,0,c
  1375  00107E  EF43  F008         	goto	u1991
  1376  001082  EF45  F008         	goto	u1990
  1377  001086                     u1991:
  1378  001086  EF04  F008         	goto	l2498
  1379  00108A                     u1990:
  1380  00108A                     
  1381                           ; BSR set to: 0
  1382                           ;main.c: 166:     blink_counter = 0;
  1383  00108A  0E00               	movlw	0
  1384  00108C  6E1E               	movwf	(_blink_counter+1)^0,c
  1385  00108E  0E00               	movlw	0
  1386  001090  6E1D               	movwf	_blink_counter^0,c
  1387                           
  1388                           ;main.c: 167:     counter250ms = 0;
  1389  001092  0E00               	movlw	0
  1390  001094  6E22               	movwf	_counter250ms^0,c
  1391                           
  1392                           ;main.c: 169:     TRISA = 0b00001111;
  1393  001096  0E0F               	movlw	15
  1394  001098  6E92               	movwf	146,c	;volatile
  1395                           
  1396                           ;main.c: 170:     TRISB = 0b01100000;
  1397  00109A  0E60               	movlw	96
  1398  00109C  6E93               	movwf	147,c	;volatile
  1399                           
  1400                           ;main.c: 171:     TRISC = 0x00;
  1401  00109E  0E00               	movlw	0
  1402  0010A0  6E94               	movwf	148,c	;volatile
  1403                           
  1404                           ;main.c: 172:     TRISD = 0x00;
  1405  0010A2  0E00               	movlw	0
  1406  0010A4  6E95               	movwf	149,c	;volatile
  1407                           
  1408                           ;main.c: 173:     TRISE = 0x00;
  1409  0010A6  0E00               	movlw	0
  1410  0010A8  6E96               	movwf	150,c	;volatile
  1411                           
  1412                           ;main.c: 174:     TRISF = 0x00;
  1413  0010AA  0E00               	movlw	0
  1414  0010AC  6E97               	movwf	151,c	;volatile
  1415                           
  1416                           ;main.c: 175:     TRISH = 0x00;
  1417  0010AE  0E00               	movlw	0
  1418  0010B0  6E99               	movwf	153,c	;volatile
  1419                           
  1420                           ;main.c: 176:     TRISJ = 0x00;
  1421  0010B2  0E00               	movlw	0
  1422  0010B4  6E9A               	movwf	154,c	;volatile
  1423                           
  1424                           ;main.c: 177:     PORTA = 0;
  1425  0010B6  0E00               	movlw	0
  1426  0010B8  6E80               	movwf	128,c	;volatile
  1427                           
  1428                           ;main.c: 178:     PORTB = 0;
  1429  0010BA  0E00               	movlw	0
  1430  0010BC  6E81               	movwf	129,c	;volatile
  1431                           
  1432                           ;main.c: 179:     PORTC = 0;
  1433  0010BE  0E00               	movlw	0
  1434  0010C0  6E82               	movwf	130,c	;volatile
  1435                           
  1436                           ;main.c: 180:     PORTD = 0;
  1437  0010C2  0E00               	movlw	0
  1438  0010C4  6E83               	movwf	131,c	;volatile
  1439                           
  1440                           ;main.c: 181:     PORTE = 0;
  1441  0010C6  0E00               	movlw	0
  1442  0010C8  6E84               	movwf	132,c	;volatile
  1443                           
  1444                           ;main.c: 182:     PORTF = 0;
  1445  0010CA  0E00               	movlw	0
  1446  0010CC  6E85               	movwf	133,c	;volatile
  1447                           
  1448                           ;main.c: 183:     PORTH = 0b00001111;
  1449  0010CE  0E0F               	movlw	15
  1450  0010D0  6E87               	movwf	135,c	;volatile
  1451                           
  1452                           ;main.c: 184:     PORTJ = 0b00011111;
  1453  0010D2  0E1F               	movlw	31
  1454  0010D4  6E88               	movwf	136,c	;volatile
  1455                           
  1456                           ;main.c: 186:     TMR0L = 0xCE;
  1457  0010D6  0ECE               	movlw	206
  1458  0010D8  6ED6               	movwf	214,c	;volatile
  1459                           
  1460                           ;main.c: 187:     TMR0H = 0x3C;
  1461  0010DA  0E3C               	movlw	60
  1462  0010DC  6ED7               	movwf	215,c	;volatile
  1463                           
  1464                           ;main.c: 189:     type = 0;
  1465  0010DE  0E00               	movlw	0
  1466  0010E0  6E20               	movwf	_type^0,c
  1467  0010E2                     
  1468                           ; BSR set to: 0
  1469                           ;main.c: 190:     position = (Position){0, 0};
  1470  0010E2  C019  F0A6         	movff	init@F4605,init@4606
  1471  0010E6  C01A  F0A7         	movff	init@F4605+1,init@4606+1
  1472  0010EA                     
  1473                           ; BSR set to: 0
  1474  0010EA  C0A6  F01B         	movff	init@4606,_position
  1475  0010EE  C0A7  F01C         	movff	init@4606+1,_position+1
  1476                           
  1477                           ;main.c: 191:     rotation = 0;
  1478  0010F2  0E00               	movlw	0
  1479  0010F4  6E21               	movwf	_rotation^0,c
  1480                           
  1481                           ;main.c: 193:     for (int i=0; i<ARROW_KEY_COUNT; i++)
  1482  0010F6  0E00               	movlw	0
  1483  0010F8  6FAD               	movwf	(init@i_116+1)& (0+255),b
  1484  0010FA  0E00               	movlw	0
  1485  0010FC  6FAC               	movwf	init@i_116& (0+255),b
  1486  0010FE                     l2524:
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;main.c: 194:     {;main.c: 195:         PORTA_previous[i] = 0;
  1490  0010FE  0E0B               	movlw	low _PORTA_previous
  1491  001100  25AC               	addwf	init@i_116& (0+255),w,b
  1492  001102  6ED9               	movwf	fsr2l,c
  1493  001104  0E00               	movlw	high _PORTA_previous
  1494  001106  21AD               	addwfc	(init@i_116+1)& (0+255),w,b
  1495  001108  6EDA               	movwf	fsr2h,c
  1496  00110A  0E00               	movlw	0
  1497  00110C  6EDF               	movwf	indf2,c
  1498                           
  1499                           ;main.c: 196:         PORTA_current[i] = 0;
  1500  00110E  0E07               	movlw	low _PORTA_current
  1501  001110  25AC               	addwf	init@i_116& (0+255),w,b
  1502  001112  6ED9               	movwf	fsr2l,c
  1503  001114  0E00               	movlw	high _PORTA_current
  1504  001116  21AD               	addwfc	(init@i_116+1)& (0+255),w,b
  1505  001118  6EDA               	movwf	fsr2h,c
  1506  00111A  0E00               	movlw	0
  1507  00111C  6EDF               	movwf	indf2,c
  1508  00111E                     
  1509                           ; BSR set to: 0
  1510                           ;main.c: 197:     }
  1511  00111E  4BAC               	infsnz	init@i_116& (0+255),f,b
  1512  001120  2BAD               	incf	(init@i_116+1)& (0+255),f,b
  1513  001122                     
  1514                           ; BSR set to: 0
  1515  001122  BFAD               	btfsc	(init@i_116+1)& (0+255),7,b
  1516  001124  EF9D  F008         	goto	u2001
  1517  001128  51AD               	movf	(init@i_116+1)& (0+255),w,b
  1518  00112A  E109               	bnz	u2000
  1519  00112C  0E04               	movlw	4
  1520  00112E  5DAC               	subwf	init@i_116& (0+255),w,b
  1521  001130  A0D8               	btfss	status,0,c
  1522  001132  EF9D  F008         	goto	u2001
  1523  001136  EF9F  F008         	goto	u2000
  1524  00113A                     u2001:
  1525  00113A  EF7F  F008         	goto	l2524
  1526  00113E                     u2000:
  1527  00113E                     
  1528                           ; BSR set to: 0
  1529  00113E  0012               	return		;funcret
  1530  001140                     __end_of_init:
  1531                           	callstack 0
  1532                           
  1533 ;; *************** function _draw *****************
  1534 ;; Defined at:
  1535 ;;		line 284 in file "main.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  4684            2   45[BANK0 ] struct Position
  1540 ;;  4682            2   43[BANK0 ] struct Position
  1541 ;;  4680            2   41[BANK0 ] struct Position
  1542 ;;  4678            2   39[BANK0 ] struct Position
  1543 ;;  4676            2   37[BANK0 ] struct Position
  1544 ;;  4674            2   35[BANK0 ] struct Position
  1545 ;;  4672            2   33[BANK0 ] struct Position
  1546 ;;  4670            2   31[BANK0 ] struct Position
  1547 ;;  4668            2   29[BANK0 ] struct Position
  1548 ;;  4666            2   27[BANK0 ] struct Position
  1549 ;;  4664            2   25[BANK0 ] struct Position
  1550 ;;  4662            2   23[BANK0 ] struct Position
  1551 ;;  4660            2   21[BANK0 ] struct Position
  1552 ;;  4658            2   19[BANK0 ] struct Position
  1553 ;;  4656            2   17[BANK0 ] struct Position
  1554 ;;  4654            2   15[BANK0 ] struct Position
  1555 ;;  4652            2   13[BANK0 ] struct Position
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2, status,0, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;      Totals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;Total ram usage:       42 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; Hardware stack levels required when called:    6
  1572 ;; This function calls:
  1573 ;;		_setLed
  1574 ;; This function is called by:
  1575 ;;		_main
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           	psect	text9
  1580  000660                     __ptext9:
  1581                           	callstack 0
  1582  000660                     _draw:
  1583                           	callstack 24
  1584  000660                     
  1585                           ;main.c: 295:             }, blink_on);;main.c: 303:             }, blink_on);;main.c: 3
      +                          07:             }, blink_on);;main.c: 311:             }, blink_on);;main.c: 315:       
      +                                }, blink_on);;main.c: 325:                     }, blink_on);;main.c: 329:         
      +                                      }, blink_on);;main.c: 333:                     }, blink_on);;main.c: 339:   
      +                                            }, blink_on);;main.c: 343:                     }, blink_on);;main.c: 3
      +                          47:                     }, blink_on);;main.c: 353:                     }, blink_on);
  1586  000660  0100               	movlb	0	; () banked
  1587  000662  6BA7               	clrf	??_draw& (0+255),b
  1588  000664  A167               	btfss	(_grid+7)& (0+255),0,b
  1589  000666  D001               	bra	u2015
  1590  000668  8FA7               	bsf	??_draw& (0+255),7,b
  1591  00066A                     u2015:
  1592  00066A  C066  F0A8         	movff	_grid+6,??_draw+1
  1593  00066E  0E06               	movlw	6
  1594  000670  6FA9               	movwf	(??_draw+2)& (0+255),b
  1595  000672                     u2025:
  1596  000672  90D8               	bcf	status,0,c
  1597  000674  37A8               	rlcf	(??_draw+1)& (0+255),f,b
  1598  000676  2FA9               	decfsz	(??_draw+2)& (0+255),f,b
  1599  000678  EF39  F003         	goto	u2025
  1600  00067C  C065  F0AA         	movff	_grid+5,??_draw+3
  1601  000680  0E05               	movlw	5
  1602  000682  6FAB               	movwf	(??_draw+4)& (0+255),b
  1603  000684                     u2035:
  1604  000684  90D8               	bcf	status,0,c
  1605  000686  37AA               	rlcf	(??_draw+3)& (0+255),f,b
  1606  000688  2FAB               	decfsz	(??_draw+4)& (0+255),f,b
  1607  00068A  EF42  F003         	goto	u2035
  1608  00068E  C064  F0AC         	movff	_grid+4,??_draw+5
  1609  000692  3BAC               	swapf	(??_draw+5)& (0+255),f,b
  1610  000694  0EF0               	movlw	240
  1611  000696  17AC               	andwf	(??_draw+5)& (0+255),f,b
  1612  000698  C063  F0AD         	movff	_grid+3,??_draw+6
  1613  00069C  90D8               	bcf	status,0,c
  1614  00069E  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1615  0006A0  90D8               	bcf	status,0,c
  1616  0006A2  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1617  0006A4  90D8               	bcf	status,0,c
  1618  0006A6  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1619  0006A8  C062  F0AE         	movff	_grid+2,??_draw+7
  1620  0006AC  90D8               	bcf	status,0,c
  1621  0006AE  37AE               	rlcf	(??_draw+7)& (0+255),f,b
  1622  0006B0  90D8               	bcf	status,0,c
  1623  0006B2  37AE               	rlcf	(??_draw+7)& (0+255),f,b
  1624  0006B4  5161               	movf	(_grid+1)& (0+255),w,b
  1625  0006B6  2561               	addwf	(_grid+1)& (0+255),w,b
  1626  0006B8  11AE               	iorwf	(??_draw+7)& (0+255),w,b
  1627  0006BA  11AD               	iorwf	(??_draw+6)& (0+255),w,b
  1628  0006BC  11AC               	iorwf	(??_draw+5)& (0+255),w,b
  1629  0006BE  11AA               	iorwf	(??_draw+3)& (0+255),w,b
  1630  0006C0  11A8               	iorwf	(??_draw+1)& (0+255),w,b
  1631  0006C2  11A7               	iorwf	??_draw& (0+255),w,b
  1632  0006C4  1160               	iorwf	_grid& (0+255),w,b
  1633  0006C6  6E8B               	movwf	139,c	;volatile
  1634                           
  1635                           ;main.c: 286:     LATD = (unsigned char) ((grid[1][0] << 0) | (grid[1][1] << 1) | (grid[
      +                          1][2] << 2) | (grid[1][3] << 3) | (grid[1][4] << 4) | (grid[1][5] << 5) | (grid[1][6] <<
      +                           6) | (grid[1][7] << 7));
  1636  0006C8  6BA7               	clrf	??_draw& (0+255),b
  1637  0006CA  A16F               	btfss	(_grid+15)& (0+255),0,b
  1638  0006CC  D001               	bra	u2045
  1639  0006CE  8FA7               	bsf	??_draw& (0+255),7,b
  1640  0006D0                     u2045:
  1641  0006D0  C06E  F0A8         	movff	_grid+14,??_draw+1
  1642  0006D4  0E06               	movlw	6
  1643  0006D6  6FA9               	movwf	(??_draw+2)& (0+255),b
  1644  0006D8                     u2055:
  1645  0006D8  90D8               	bcf	status,0,c
  1646  0006DA  37A8               	rlcf	(??_draw+1)& (0+255),f,b
  1647  0006DC  2FA9               	decfsz	(??_draw+2)& (0+255),f,b
  1648  0006DE  EF6C  F003         	goto	u2055
  1649  0006E2  C06D  F0AA         	movff	_grid+13,??_draw+3
  1650  0006E6  0E05               	movlw	5
  1651  0006E8  6FAB               	movwf	(??_draw+4)& (0+255),b
  1652  0006EA                     u2065:
  1653  0006EA  90D8               	bcf	status,0,c
  1654  0006EC  37AA               	rlcf	(??_draw+3)& (0+255),f,b
  1655  0006EE  2FAB               	decfsz	(??_draw+4)& (0+255),f,b
  1656  0006F0  EF75  F003         	goto	u2065
  1657  0006F4  C06C  F0AC         	movff	_grid+12,??_draw+5
  1658  0006F8  3BAC               	swapf	(??_draw+5)& (0+255),f,b
  1659  0006FA  0EF0               	movlw	240
  1660  0006FC  17AC               	andwf	(??_draw+5)& (0+255),f,b
  1661  0006FE  C06B  F0AD         	movff	_grid+11,??_draw+6
  1662  000702  90D8               	bcf	status,0,c
  1663  000704  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1664  000706  90D8               	bcf	status,0,c
  1665  000708  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1666  00070A  90D8               	bcf	status,0,c
  1667  00070C  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1668  00070E  C06A  F0AE         	movff	_grid+10,??_draw+7
  1669  000712  90D8               	bcf	status,0,c
  1670  000714  37AE               	rlcf	(??_draw+7)& (0+255),f,b
  1671  000716  90D8               	bcf	status,0,c
  1672  000718  37AE               	rlcf	(??_draw+7)& (0+255),f,b
  1673  00071A  5169               	movf	(_grid+9)& (0+255),w,b
  1674  00071C  2569               	addwf	(_grid+9)& (0+255),w,b
  1675  00071E  11AE               	iorwf	(??_draw+7)& (0+255),w,b
  1676  000720  11AD               	iorwf	(??_draw+6)& (0+255),w,b
  1677  000722  11AC               	iorwf	(??_draw+5)& (0+255),w,b
  1678  000724  11AA               	iorwf	(??_draw+3)& (0+255),w,b
  1679  000726  11A8               	iorwf	(??_draw+1)& (0+255),w,b
  1680  000728  11A7               	iorwf	??_draw& (0+255),w,b
  1681  00072A  1168               	iorwf	(_grid+8)& (0+255),w,b
  1682  00072C  6E8C               	movwf	140,c	;volatile
  1683                           
  1684                           ;main.c: 287:     LATE = (unsigned char) ((grid[2][0] << 0) | (grid[2][1] << 1) | (grid[
      +                          2][2] << 2) | (grid[2][3] << 3) | (grid[2][4] << 4) | (grid[2][5] << 5) | (grid[2][6] <<
      +                           6) | (grid[2][7] << 7));
  1685  00072E  6BA7               	clrf	??_draw& (0+255),b
  1686  000730  A177               	btfss	(_grid+23)& (0+255),0,b
  1687  000732  D001               	bra	u2075
  1688  000734  8FA7               	bsf	??_draw& (0+255),7,b
  1689  000736                     u2075:
  1690  000736  C076  F0A8         	movff	_grid+22,??_draw+1
  1691  00073A  0E06               	movlw	6
  1692  00073C  6FA9               	movwf	(??_draw+2)& (0+255),b
  1693  00073E                     u2085:
  1694  00073E  90D8               	bcf	status,0,c
  1695  000740  37A8               	rlcf	(??_draw+1)& (0+255),f,b
  1696  000742  2FA9               	decfsz	(??_draw+2)& (0+255),f,b
  1697  000744  EF9F  F003         	goto	u2085
  1698  000748  C075  F0AA         	movff	_grid+21,??_draw+3
  1699  00074C  0E05               	movlw	5
  1700  00074E  6FAB               	movwf	(??_draw+4)& (0+255),b
  1701  000750                     u2095:
  1702  000750  90D8               	bcf	status,0,c
  1703  000752  37AA               	rlcf	(??_draw+3)& (0+255),f,b
  1704  000754  2FAB               	decfsz	(??_draw+4)& (0+255),f,b
  1705  000756  EFA8  F003         	goto	u2095
  1706  00075A  C074  F0AC         	movff	_grid+20,??_draw+5
  1707  00075E  3BAC               	swapf	(??_draw+5)& (0+255),f,b
  1708  000760  0EF0               	movlw	240
  1709  000762  17AC               	andwf	(??_draw+5)& (0+255),f,b
  1710  000764  C073  F0AD         	movff	_grid+19,??_draw+6
  1711  000768  90D8               	bcf	status,0,c
  1712  00076A  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1713  00076C  90D8               	bcf	status,0,c
  1714  00076E  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1715  000770  90D8               	bcf	status,0,c
  1716  000772  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1717  000774  C072  F0AE         	movff	_grid+18,??_draw+7
  1718  000778  90D8               	bcf	status,0,c
  1719  00077A  37AE               	rlcf	(??_draw+7)& (0+255),f,b
  1720  00077C  90D8               	bcf	status,0,c
  1721  00077E  37AE               	rlcf	(??_draw+7)& (0+255),f,b
  1722  000780  5171               	movf	(_grid+17)& (0+255),w,b
  1723  000782  2571               	addwf	(_grid+17)& (0+255),w,b
  1724  000784  11AE               	iorwf	(??_draw+7)& (0+255),w,b
  1725  000786  11AD               	iorwf	(??_draw+6)& (0+255),w,b
  1726  000788  11AC               	iorwf	(??_draw+5)& (0+255),w,b
  1727  00078A  11AA               	iorwf	(??_draw+3)& (0+255),w,b
  1728  00078C  11A8               	iorwf	(??_draw+1)& (0+255),w,b
  1729  00078E  11A7               	iorwf	??_draw& (0+255),w,b
  1730  000790  1170               	iorwf	(_grid+16)& (0+255),w,b
  1731  000792  6E8D               	movwf	141,c	;volatile
  1732                           
  1733                           ;main.c: 288:     LATF = (unsigned char) ((grid[3][0] << 0) | (grid[3][1] << 1) | (grid[
      +                          3][2] << 2) | (grid[3][3] << 3) | (grid[3][4] << 4) | (grid[3][5] << 5) | (grid[3][6] <<
      +                           6) | (grid[3][7] << 7));
  1734  000794  6BA7               	clrf	??_draw& (0+255),b
  1735  000796  A17F               	btfss	(_grid+31)& (0+255),0,b
  1736  000798  D001               	bra	u2105
  1737  00079A  8FA7               	bsf	??_draw& (0+255),7,b
  1738  00079C                     u2105:
  1739  00079C  C07E  F0A8         	movff	_grid+30,??_draw+1
  1740  0007A0  0E06               	movlw	6
  1741  0007A2  6FA9               	movwf	(??_draw+2)& (0+255),b
  1742  0007A4                     u2115:
  1743  0007A4  90D8               	bcf	status,0,c
  1744  0007A6  37A8               	rlcf	(??_draw+1)& (0+255),f,b
  1745  0007A8  2FA9               	decfsz	(??_draw+2)& (0+255),f,b
  1746  0007AA  EFD2  F003         	goto	u2115
  1747  0007AE  C07D  F0AA         	movff	_grid+29,??_draw+3
  1748  0007B2  0E05               	movlw	5
  1749  0007B4  6FAB               	movwf	(??_draw+4)& (0+255),b
  1750  0007B6                     u2125:
  1751  0007B6  90D8               	bcf	status,0,c
  1752  0007B8  37AA               	rlcf	(??_draw+3)& (0+255),f,b
  1753  0007BA  2FAB               	decfsz	(??_draw+4)& (0+255),f,b
  1754  0007BC  EFDB  F003         	goto	u2125
  1755  0007C0  C07C  F0AC         	movff	_grid+28,??_draw+5
  1756  0007C4  3BAC               	swapf	(??_draw+5)& (0+255),f,b
  1757  0007C6  0EF0               	movlw	240
  1758  0007C8  17AC               	andwf	(??_draw+5)& (0+255),f,b
  1759  0007CA  C07B  F0AD         	movff	_grid+27,??_draw+6
  1760  0007CE  90D8               	bcf	status,0,c
  1761  0007D0  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1762  0007D2  90D8               	bcf	status,0,c
  1763  0007D4  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1764  0007D6  90D8               	bcf	status,0,c
  1765  0007D8  37AD               	rlcf	(??_draw+6)& (0+255),f,b
  1766  0007DA  C07A  F0AE         	movff	_grid+26,??_draw+7
  1767  0007DE  90D8               	bcf	status,0,c
  1768  0007E0  37AE               	rlcf	(??_draw+7)& (0+255),f,b
  1769  0007E2  90D8               	bcf	status,0,c
  1770  0007E4  37AE               	rlcf	(??_draw+7)& (0+255),f,b
  1771  0007E6  5179               	movf	(_grid+25)& (0+255),w,b
  1772  0007E8  2579               	addwf	(_grid+25)& (0+255),w,b
  1773  0007EA  11AE               	iorwf	(??_draw+7)& (0+255),w,b
  1774  0007EC  11AD               	iorwf	(??_draw+6)& (0+255),w,b
  1775  0007EE  11AC               	iorwf	(??_draw+5)& (0+255),w,b
  1776  0007F0  11AA               	iorwf	(??_draw+3)& (0+255),w,b
  1777  0007F2  11A8               	iorwf	(??_draw+1)& (0+255),w,b
  1778  0007F4  11A7               	iorwf	??_draw& (0+255),w,b
  1779  0007F6  1178               	iorwf	(_grid+24)& (0+255),w,b
  1780  0007F8  6E8E               	movwf	142,c	;volatile
  1781                           
  1782                           ;main.c: 290:     switch (type) {
  1783  0007FA  EF3B  F005         	goto	l2626
  1784  0007FE                     l209:
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;main.c: 292:         {;main.c: 293:             setLed((Position) {
  1788  0007FE  C0A0  F0AF         	movff	draw@F4651,draw@4652
  1789  000802  C0A1  F0B0         	movff	draw@F4651+1,draw@4652+1
  1790  000806  C01B  F0AF         	movff	_position,draw@4652
  1791  00080A  C01C  F0B0         	movff	_position+1,draw@4652+1
  1792  00080E                     
  1793                           ; BSR set to: 0
  1794  00080E  C0AF  F0A2         	movff	draw@4652,setLed@pos
  1795  000812  C0B0  F0A3         	movff	draw@4652+1,setLed@pos+1
  1796  000816  C043  F0A4         	movff	_blink_on,setLed@value
  1797  00081A  EC2E  F007         	call	_setLed	;wreg free
  1798                           
  1799                           ;main.c: 296:             break;
  1800  00081E  EF54  F005         	goto	l219
  1801  000822                     l211:
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;main.c: 299:         {;main.c: 301:             setLed((Position) {
  1805  000822  C09E  F0B1         	movff	draw@F4653,draw@4654
  1806  000826  C09F  F0B2         	movff	draw@F4653+1,draw@4654+1
  1807  00082A  C01B  F0B1         	movff	_position,draw@4654
  1808  00082E  C01C  F0B2         	movff	_position+1,draw@4654+1
  1809  000832                     
  1810                           ; BSR set to: 0
  1811  000832  C0B1  F0A2         	movff	draw@4654,setLed@pos
  1812  000836  C0B2  F0A3         	movff	draw@4654+1,setLed@pos+1
  1813  00083A  C043  F0A4         	movff	_blink_on,setLed@value
  1814  00083E  EC2E  F007         	call	_setLed	;wreg free
  1815  000842                     
  1816                           ;main.c: 305:             setLed((Position) {
  1817  000842  C09C  F0B3         	movff	draw@F4655,draw@4656
  1818  000846  C09D  F0B4         	movff	draw@F4655+1,draw@4656+1
  1819  00084A  281B               	incf	_position^0,w,c
  1820  00084C  0100               	movlb	0	; () banked
  1821  00084E  6FB3               	movwf	draw@4656& (0+255),b
  1822  000850                     
  1823                           ; BSR set to: 0
  1824  000850  C01C  F0B4         	movff	_position+1,draw@4656+1
  1825  000854                     
  1826                           ; BSR set to: 0
  1827  000854  C0B3  F0A2         	movff	draw@4656,setLed@pos
  1828  000858  C0B4  F0A3         	movff	draw@4656+1,setLed@pos+1
  1829  00085C  C043  F0A4         	movff	_blink_on,setLed@value
  1830  000860  EC2E  F007         	call	_setLed	;wreg free
  1831  000864                     
  1832                           ;main.c: 309:             setLed((Position) {
  1833  000864  C09A  F0B5         	movff	draw@F4657,draw@4658
  1834  000868  C09B  F0B6         	movff	draw@F4657+1,draw@4658+1
  1835  00086C  C01B  F0B5         	movff	_position,draw@4658
  1836  000870  281C               	incf	(_position+1)^0,w,c
  1837  000872  0100               	movlb	0	; () banked
  1838  000874  6FB6               	movwf	(draw@4658+1)& (0+255),b
  1839  000876                     
  1840                           ; BSR set to: 0
  1841  000876  C0B5  F0A2         	movff	draw@4658,setLed@pos
  1842  00087A  C0B6  F0A3         	movff	draw@4658+1,setLed@pos+1
  1843  00087E  C043  F0A4         	movff	_blink_on,setLed@value
  1844  000882  EC2E  F007         	call	_setLed	;wreg free
  1845  000886                     
  1846                           ;main.c: 313:             setLed((Position) {
  1847  000886  C098  F0B7         	movff	draw@F4659,draw@4660
  1848  00088A  C099  F0B8         	movff	draw@F4659+1,draw@4660+1
  1849  00088E  281B               	incf	_position^0,w,c
  1850  000890  0100               	movlb	0	; () banked
  1851  000892  6FB7               	movwf	draw@4660& (0+255),b
  1852  000894                     
  1853                           ; BSR set to: 0
  1854  000894  281C               	incf	(_position+1)^0,w,c
  1855  000896  6FB8               	movwf	(draw@4660+1)& (0+255),b
  1856  000898                     
  1857                           ; BSR set to: 0
  1858  000898  C0B7  F0A2         	movff	draw@4660,setLed@pos
  1859  00089C  C0B8  F0A3         	movff	draw@4660+1,setLed@pos+1
  1860  0008A0  C043  F0A4         	movff	_blink_on,setLed@value
  1861  0008A4  EC2E  F007         	call	_setLed	;wreg free
  1862                           
  1863                           ;main.c: 316:             break;
  1864  0008A8  EF54  F005         	goto	l219
  1865  0008AC                     l214:
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;main.c: 323:                     setLed((Position) {
  1869  0008AC  C096  F0B9         	movff	draw@F4661,draw@4662
  1870  0008B0  C097  F0BA         	movff	draw@F4661+1,draw@4662+1
  1871  0008B4  C01B  F0B9         	movff	_position,draw@4662
  1872  0008B8  C01C  F0BA         	movff	_position+1,draw@4662+1
  1873  0008BC                     
  1874                           ; BSR set to: 0
  1875  0008BC  C0B9  F0A2         	movff	draw@4662,setLed@pos
  1876  0008C0  C0BA  F0A3         	movff	draw@4662+1,setLed@pos+1
  1877  0008C4  C043  F0A4         	movff	_blink_on,setLed@value
  1878  0008C8  EC2E  F007         	call	_setLed	;wreg free
  1879  0008CC                     
  1880                           ;main.c: 327:                     setLed((Position) {
  1881  0008CC  C094  F0BB         	movff	draw@F4663,draw@4664
  1882  0008D0  C095  F0BC         	movff	draw@F4663+1,draw@4664+1
  1883  0008D4  281B               	incf	_position^0,w,c
  1884  0008D6  0100               	movlb	0	; () banked
  1885  0008D8  6FBB               	movwf	draw@4664& (0+255),b
  1886  0008DA                     
  1887                           ; BSR set to: 0
  1888  0008DA  C01C  F0BC         	movff	_position+1,draw@4664+1
  1889  0008DE                     
  1890                           ; BSR set to: 0
  1891  0008DE  C0BB  F0A2         	movff	draw@4664,setLed@pos
  1892  0008E2  C0BC  F0A3         	movff	draw@4664+1,setLed@pos+1
  1893  0008E6  C043  F0A4         	movff	_blink_on,setLed@value
  1894  0008EA  EC2E  F007         	call	_setLed	;wreg free
  1895  0008EE                     
  1896                           ;main.c: 331:                     setLed((Position) {
  1897  0008EE  C092  F0BD         	movff	draw@F4665,draw@4666
  1898  0008F2  C093  F0BE         	movff	draw@F4665+1,draw@4666+1
  1899  0008F6  281B               	incf	_position^0,w,c
  1900  0008F8  0100               	movlb	0	; () banked
  1901  0008FA  6FBD               	movwf	draw@4666& (0+255),b
  1902  0008FC  281C               	incf	(_position+1)^0,w,c
  1903  0008FE  6FBE               	movwf	(draw@4666+1)& (0+255),b
  1904  000900                     
  1905                           ; BSR set to: 0
  1906  000900  C0BD  F0A2         	movff	draw@4666,setLed@pos
  1907  000904  C0BE  F0A3         	movff	draw@4666+1,setLed@pos+1
  1908  000908  C043  F0A4         	movff	_blink_on,setLed@value
  1909  00090C  EC2E  F007         	call	_setLed	;wreg free
  1910                           
  1911                           ;main.c: 334:                     break;
  1912  000910  EF54  F005         	goto	l219
  1913  000914                     l216:
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;main.c: 337:                     setLed((Position) {
  1917  000914  C090  F0BF         	movff	draw@F4667,draw@4668
  1918  000918  C091  F0C0         	movff	draw@F4667+1,draw@4668+1
  1919  00091C  C01B  F0BF         	movff	_position,draw@4668
  1920  000920  C01C  F0C0         	movff	_position+1,draw@4668+1
  1921  000924                     
  1922                           ; BSR set to: 0
  1923  000924  C0BF  F0A2         	movff	draw@4668,setLed@pos
  1924  000928  C0C0  F0A3         	movff	draw@4668+1,setLed@pos+1
  1925  00092C  C043  F0A4         	movff	_blink_on,setLed@value
  1926  000930  EC2E  F007         	call	_setLed	;wreg free
  1927  000934                     
  1928                           ;main.c: 341:                     setLed((Position) {
  1929  000934  C08E  F0C1         	movff	draw@F4669,draw@4670
  1930  000938  C08F  F0C2         	movff	draw@F4669+1,draw@4670+1
  1931  00093C  281B               	incf	_position^0,w,c
  1932  00093E  0100               	movlb	0	; () banked
  1933  000940  6FC1               	movwf	draw@4670& (0+255),b
  1934  000942                     
  1935                           ; BSR set to: 0
  1936  000942  C01C  F0C2         	movff	_position+1,draw@4670+1
  1937  000946                     
  1938                           ; BSR set to: 0
  1939  000946  C0C1  F0A2         	movff	draw@4670,setLed@pos
  1940  00094A  C0C2  F0A3         	movff	draw@4670+1,setLed@pos+1
  1941  00094E  C043  F0A4         	movff	_blink_on,setLed@value
  1942  000952  EC2E  F007         	call	_setLed	;wreg free
  1943  000956                     
  1944                           ;main.c: 345:                     setLed((Position) {
  1945  000956  C08C  F0C3         	movff	draw@F4671,draw@4672
  1946  00095A  C08D  F0C4         	movff	draw@F4671+1,draw@4672+1
  1947  00095E  C01B  F0C3         	movff	_position,draw@4672
  1948  000962  281C               	incf	(_position+1)^0,w,c
  1949  000964  0100               	movlb	0	; () banked
  1950  000966  6FC4               	movwf	(draw@4672+1)& (0+255),b
  1951  000968                     
  1952                           ; BSR set to: 0
  1953  000968  C0C3  F0A2         	movff	draw@4672,setLed@pos
  1954  00096C  C0C4  F0A3         	movff	draw@4672+1,setLed@pos+1
  1955  000970  C043  F0A4         	movff	_blink_on,setLed@value
  1956  000974  EC2E  F007         	call	_setLed	;wreg free
  1957                           
  1958                           ;main.c: 348:                     break;
  1959  000978  EF54  F005         	goto	l219
  1960  00097C                     l217:
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;main.c: 351:                     setLed((Position) {
  1964  00097C  C08A  F0C5         	movff	draw@F4673,draw@4674
  1965  000980  C08B  F0C6         	movff	draw@F4673+1,draw@4674+1
  1966  000984                     
  1967                           ; BSR set to: 0
  1968  000984  281B               	incf	_position^0,w,c
  1969  000986  6FC5               	movwf	draw@4674& (0+255),b
  1970  000988                     
  1971                           ; BSR set to: 0
  1972  000988  C01C  F0C6         	movff	_position+1,draw@4674+1
  1973  00098C                     
  1974                           ; BSR set to: 0
  1975  00098C  C0C5  F0A2         	movff	draw@4674,setLed@pos
  1976  000990  C0C6  F0A3         	movff	draw@4674+1,setLed@pos+1
  1977  000994  C043  F0A4         	movff	_blink_on,setLed@value
  1978  000998  EC2E  F007         	call	_setLed	;wreg free
  1979  00099C  C01B  F0C7         	movff	_position,draw@4676
  1980  0009A0  281C               	incf	(_position+1)^0,w,c
  1981  0009A2  0100               	movlb	0	; () banked
  1982  0009A4  6FC8               	movwf	(draw@4676+1)& (0+255),b
  1983  0009A6  C0C7  F0A2         	movff	draw@4676,setLed@pos
  1984  0009AA  C0C8  F0A3         	movff	draw@4676+1,setLed@pos+1
  1985  0009AE  C043  F0A4         	movff	_blink_on,setLed@value
  1986  0009B2  EC2E  F007         	call	_setLed	;wreg free
  1987  0009B6  281B               	incf	_position^0,w,c
  1988  0009B8  0100               	movlb	0	; () banked
  1989  0009BA  6FC9               	movwf	draw@4678& (0+255),b
  1990  0009BC                     
  1991                           ; BSR set to: 0
  1992  0009BC  281C               	incf	(_position+1)^0,w,c
  1993  0009BE  6FCA               	movwf	(draw@4678+1)& (0+255),b
  1994  0009C0  C0C9  F0A2         	movff	draw@4678,setLed@pos
  1995  0009C4  C0CA  F0A3         	movff	draw@4678+1,setLed@pos+1
  1996  0009C8  C043  F0A4         	movff	_blink_on,setLed@value
  1997  0009CC  EC2E  F007         	call	_setLed	;wreg free
  1998                           
  1999                           ;main.c: 362:                     break;
  2000  0009D0  EF54  F005         	goto	l219
  2001  0009D4                     l218:
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;main.c: 365:                     setLed((Position) {
  2005  0009D4  C084  F0CB         	movff	draw@F4679,draw@4680
  2006  0009D8  C085  F0CC         	movff	draw@F4679+1,draw@4680+1
  2007  0009DC  C01B  F0CB         	movff	_position,draw@4680
  2008  0009E0  C01C  F0CC         	movff	_position+1,draw@4680+1
  2009  0009E4                     
  2010                           ; BSR set to: 0
  2011  0009E4  C0CB  F0A2         	movff	draw@4680,setLed@pos
  2012  0009E8  C0CC  F0A3         	movff	draw@4680+1,setLed@pos+1
  2013  0009EC  C043  F0A4         	movff	_blink_on,setLed@value
  2014  0009F0  EC2E  F007         	call	_setLed	;wreg free
  2015  0009F4                     
  2016                           ;main.c: 369:                     setLed((Position) {
  2017  0009F4  C082  F0CD         	movff	draw@F4681,draw@4682
  2018  0009F8  C083  F0CE         	movff	draw@F4681+1,draw@4682+1
  2019  0009FC  C01B  F0CD         	movff	_position,draw@4682
  2020  000A00  281C               	incf	(_position+1)^0,w,c
  2021  000A02  0100               	movlb	0	; () banked
  2022  000A04  6FCE               	movwf	(draw@4682+1)& (0+255),b
  2023  000A06                     
  2024                           ; BSR set to: 0
  2025  000A06  C0CD  F0A2         	movff	draw@4682,setLed@pos
  2026  000A0A  C0CE  F0A3         	movff	draw@4682+1,setLed@pos+1
  2027  000A0E  C043  F0A4         	movff	_blink_on,setLed@value
  2028  000A12  EC2E  F007         	call	_setLed	;wreg free
  2029  000A16                     
  2030                           ;main.c: 373:                     setLed((Position) {
  2031  000A16  C080  F0CF         	movff	draw@F4683,draw@4684
  2032  000A1A  C081  F0D0         	movff	draw@F4683+1,draw@4684+1
  2033  000A1E  281B               	incf	_position^0,w,c
  2034  000A20  0100               	movlb	0	; () banked
  2035  000A22  6FCF               	movwf	draw@4684& (0+255),b
  2036  000A24  281C               	incf	(_position+1)^0,w,c
  2037  000A26  6FD0               	movwf	(draw@4684+1)& (0+255),b
  2038  000A28                     
  2039                           ; BSR set to: 0
  2040  000A28  C0CF  F0A2         	movff	draw@4684,setLed@pos
  2041  000A2C  C0D0  F0A3         	movff	draw@4684+1,setLed@pos+1
  2042  000A30  C043  F0A4         	movff	_blink_on,setLed@value
  2043  000A34  EC2E  F007         	call	_setLed	;wreg free
  2044                           
  2045                           ;main.c: 376:                     break;
  2046  000A38  EF54  F005         	goto	l219
  2047  000A3C                     l2622:
  2048                           
  2049                           ; BSR set to: 0
  2050  000A3C  5021               	movf	_rotation^0,w,c
  2051  000A3E  6FA7               	movwf	??_draw& (0+255),b
  2052  000A40  6BA8               	clrf	(??_draw+1)& (0+255),b
  2053                           
  2054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2055                           ; Switch size 1, requested type "simple"
  2056                           ; Number of cases is 1, Range of values is 0 to 0
  2057                           ; switch strategies available:
  2058                           ; Name         Instructions Cycles
  2059                           ; simple_byte            4     3 (average)
  2060                           ;	Chosen strategy is simple_byte
  2061  000A42  51A8               	movf	(??_draw+1)& (0+255),w,b
  2062  000A44  0A00               	xorlw	0	; case 0
  2063  000A46  B4D8               	btfsc	status,2,c
  2064  000A48  EF28  F005         	goto	l2898
  2065  000A4C  EF54  F005         	goto	l219
  2066  000A50                     l2898:
  2067                           
  2068                           ; BSR set to: 0
  2069                           ; Switch size 1, requested type "simple"
  2070                           ; Number of cases is 4, Range of values is 0 to 3
  2071                           ; switch strategies available:
  2072                           ; Name         Instructions Cycles
  2073                           ; simple_byte           13     7 (average)
  2074                           ;	Chosen strategy is simple_byte
  2075  000A50  51A7               	movf	??_draw& (0+255),w,b
  2076  000A52  0A00               	xorlw	0	; case 0
  2077  000A54  B4D8               	btfsc	status,2,c
  2078  000A56  EF56  F004         	goto	l214
  2079  000A5A  0A01               	xorlw	1	; case 1
  2080  000A5C  B4D8               	btfsc	status,2,c
  2081  000A5E  EFBE  F004         	goto	l217
  2082  000A62  0A03               	xorlw	3	; case 2
  2083  000A64  B4D8               	btfsc	status,2,c
  2084  000A66  EFEA  F004         	goto	l218
  2085  000A6A  0A01               	xorlw	1	; case 3
  2086  000A6C  B4D8               	btfsc	status,2,c
  2087  000A6E  EF8A  F004         	goto	l216
  2088  000A72  EF54  F005         	goto	l219
  2089  000A76                     l2626:
  2090                           
  2091                           ; BSR set to: 0
  2092  000A76  5020               	movf	_type^0,w,c
  2093  000A78  6FA7               	movwf	??_draw& (0+255),b
  2094  000A7A  6BA8               	clrf	(??_draw+1)& (0+255),b
  2095                           
  2096                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2097                           ; Switch size 1, requested type "simple"
  2098                           ; Number of cases is 1, Range of values is 0 to 0
  2099                           ; switch strategies available:
  2100                           ; Name         Instructions Cycles
  2101                           ; simple_byte            4     3 (average)
  2102                           ;	Chosen strategy is simple_byte
  2103  000A7C  51A8               	movf	(??_draw+1)& (0+255),w,b
  2104  000A7E  0A00               	xorlw	0	; case 0
  2105  000A80  B4D8               	btfsc	status,2,c
  2106  000A82  EF45  F005         	goto	l2900
  2107  000A86  EF54  F005         	goto	l219
  2108  000A8A                     l2900:
  2109                           
  2110                           ; BSR set to: 0
  2111                           ; Switch size 1, requested type "simple"
  2112                           ; Number of cases is 3, Range of values is 0 to 2
  2113                           ; switch strategies available:
  2114                           ; Name         Instructions Cycles
  2115                           ; simple_byte           10     6 (average)
  2116                           ;	Chosen strategy is simple_byte
  2117  000A8A  51A7               	movf	??_draw& (0+255),w,b
  2118  000A8C  0A00               	xorlw	0	; case 0
  2119  000A8E  B4D8               	btfsc	status,2,c
  2120  000A90  EFFF  F003         	goto	l209
  2121  000A94  0A01               	xorlw	1	; case 1
  2122  000A96  B4D8               	btfsc	status,2,c
  2123  000A98  EF11  F004         	goto	l211
  2124  000A9C  0A03               	xorlw	3	; case 2
  2125  000A9E  B4D8               	btfsc	status,2,c
  2126  000AA0  EF1E  F005         	goto	l2622
  2127  000AA4  EF54  F005         	goto	l219
  2128  000AA8                     l219:
  2129  000AA8  0012               	return		;funcret
  2130  000AAA                     __end_of_draw:
  2131                           	callstack 0
  2132                           
  2133 ;; *************** function _setLed *****************
  2134 ;; Defined at:
  2135 ;;		line 255 in file "main.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  pos             2    0[BANK0 ] struct Position
  2138 ;;  value           1    2[BANK0 ] unsigned char 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;		None
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2, status,0
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2150 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;Total ram usage:        5 bytes
  2155 ;; Hardware stack levels used:    1
  2156 ;; Hardware stack levels required when called:    5
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_draw
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text10
  2165  000E5C                     __ptext10:
  2166                           	callstack 0
  2167  000E5C                     _setLed:
  2168                           	callstack 24
  2169  000E5C                     
  2170                           ;main.c: 256:     switch (pos.x) {
  2171  000E5C  EFDC  F007         	goto	l2454
  2172  000E60                     l2428:
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;main.c: 258:             if (value)
  2176  000E60  51A4               	movf	setLed@value& (0+255),w,b
  2177  000E62  B4D8               	btfsc	status,2,c
  2178  000E64  EF36  F007         	goto	u1851
  2179  000E68  EF38  F007         	goto	u1850
  2180  000E6C                     u1851:
  2181  000E6C  EF49  F007         	goto	l2432
  2182  000E70                     u1850:
  2183  000E70                     
  2184                           ; BSR set to: 0
  2185                           ;main.c: 259:                 LATC |= (1 << pos.y);
  2186  000E70  C0A3  F0A5         	movff	setLed@pos+1,??_setLed
  2187  000E74  0E01               	movlw	1
  2188  000E76  6FA6               	movwf	(??_setLed+1)& (0+255),b
  2189  000E78  2BA5               	incf	??_setLed& (0+255),f,b
  2190  000E7A  EF41  F007         	goto	u1864
  2191  000E7E                     u1865:
  2192  000E7E  90D8               	bcf	status,0,c
  2193  000E80  37A6               	rlcf	(??_setLed+1)& (0+255),f,b
  2194  000E82                     u1864:
  2195  000E82  2FA5               	decfsz	??_setLed& (0+255),f,b
  2196  000E84  EF3F  F007         	goto	u1865
  2197  000E88  0100               	movlb	0	; () banked
  2198  000E8A  51A6               	movf	(??_setLed+1)& (0+255),w,b
  2199  000E8C  128B               	iorwf	139,f,c	;volatile
  2200  000E8E  EFFA  F007         	goto	l171
  2201  000E92                     l2432:
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;main.c: 261:                 LATC &= ~(1 << pos.y);
  2205  000E92  C0A3  F0A5         	movff	setLed@pos+1,??_setLed
  2206  000E96  0E01               	movlw	1
  2207  000E98  6FA6               	movwf	(??_setLed+1)& (0+255),b
  2208  000E9A  2BA5               	incf	??_setLed& (0+255),f,b
  2209  000E9C  EF52  F007         	goto	u1874
  2210  000EA0                     u1875:
  2211  000EA0  90D8               	bcf	status,0,c
  2212  000EA2  37A6               	rlcf	(??_setLed+1)& (0+255),f,b
  2213  000EA4                     u1874:
  2214  000EA4  2FA5               	decfsz	??_setLed& (0+255),f,b
  2215  000EA6  EF50  F007         	goto	u1875
  2216  000EAA  0100               	movlb	0	; () banked
  2217  000EAC  51A6               	movf	(??_setLed+1)& (0+255),w,b
  2218  000EAE  0AFF               	xorlw	255
  2219  000EB0  168B               	andwf	139,f,c	;volatile
  2220  000EB2  EFFA  F007         	goto	l171
  2221  000EB6                     l2434:
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;main.c: 264:             if (value)
  2225  000EB6  51A4               	movf	setLed@value& (0+255),w,b
  2226  000EB8  B4D8               	btfsc	status,2,c
  2227  000EBA  EF61  F007         	goto	u1881
  2228  000EBE  EF63  F007         	goto	u1880
  2229  000EC2                     u1881:
  2230  000EC2  EF74  F007         	goto	l2438
  2231  000EC6                     u1880:
  2232  000EC6                     
  2233                           ; BSR set to: 0
  2234                           ;main.c: 265:                 LATD |= (1 << pos.y);
  2235  000EC6  C0A3  F0A5         	movff	setLed@pos+1,??_setLed
  2236  000ECA  0E01               	movlw	1
  2237  000ECC  6FA6               	movwf	(??_setLed+1)& (0+255),b
  2238  000ECE  2BA5               	incf	??_setLed& (0+255),f,b
  2239  000ED0  EF6C  F007         	goto	u1894
  2240  000ED4                     u1895:
  2241  000ED4  90D8               	bcf	status,0,c
  2242  000ED6  37A6               	rlcf	(??_setLed+1)& (0+255),f,b
  2243  000ED8                     u1894:
  2244  000ED8  2FA5               	decfsz	??_setLed& (0+255),f,b
  2245  000EDA  EF6A  F007         	goto	u1895
  2246  000EDE  0100               	movlb	0	; () banked
  2247  000EE0  51A6               	movf	(??_setLed+1)& (0+255),w,b
  2248  000EE2  128C               	iorwf	140,f,c	;volatile
  2249  000EE4  EFFA  F007         	goto	l171
  2250  000EE8                     l2438:
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;main.c: 267:                 LATD &= ~(1 << pos.y);
  2254  000EE8  C0A3  F0A5         	movff	setLed@pos+1,??_setLed
  2255  000EEC  0E01               	movlw	1
  2256  000EEE  6FA6               	movwf	(??_setLed+1)& (0+255),b
  2257  000EF0  2BA5               	incf	??_setLed& (0+255),f,b
  2258  000EF2  EF7D  F007         	goto	u1904
  2259  000EF6                     u1905:
  2260  000EF6  90D8               	bcf	status,0,c
  2261  000EF8  37A6               	rlcf	(??_setLed+1)& (0+255),f,b
  2262  000EFA                     u1904:
  2263  000EFA  2FA5               	decfsz	??_setLed& (0+255),f,b
  2264  000EFC  EF7B  F007         	goto	u1905
  2265  000F00  0100               	movlb	0	; () banked
  2266  000F02  51A6               	movf	(??_setLed+1)& (0+255),w,b
  2267  000F04  0AFF               	xorlw	255
  2268  000F06  168C               	andwf	140,f,c	;volatile
  2269  000F08  EFFA  F007         	goto	l171
  2270  000F0C                     l2440:
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;main.c: 270:             if (value)
  2274  000F0C  51A4               	movf	setLed@value& (0+255),w,b
  2275  000F0E  B4D8               	btfsc	status,2,c
  2276  000F10  EF8C  F007         	goto	u1911
  2277  000F14  EF8E  F007         	goto	u1910
  2278  000F18                     u1911:
  2279  000F18  EF9F  F007         	goto	l2444
  2280  000F1C                     u1910:
  2281  000F1C                     
  2282                           ; BSR set to: 0
  2283                           ;main.c: 271:                 LATE |= (1 << pos.y);
  2284  000F1C  C0A3  F0A5         	movff	setLed@pos+1,??_setLed
  2285  000F20  0E01               	movlw	1
  2286  000F22  6FA6               	movwf	(??_setLed+1)& (0+255),b
  2287  000F24  2BA5               	incf	??_setLed& (0+255),f,b
  2288  000F26  EF97  F007         	goto	u1924
  2289  000F2A                     u1925:
  2290  000F2A  90D8               	bcf	status,0,c
  2291  000F2C  37A6               	rlcf	(??_setLed+1)& (0+255),f,b
  2292  000F2E                     u1924:
  2293  000F2E  2FA5               	decfsz	??_setLed& (0+255),f,b
  2294  000F30  EF95  F007         	goto	u1925
  2295  000F34  0100               	movlb	0	; () banked
  2296  000F36  51A6               	movf	(??_setLed+1)& (0+255),w,b
  2297  000F38  128D               	iorwf	141,f,c	;volatile
  2298  000F3A  EFFA  F007         	goto	l171
  2299  000F3E                     l2444:
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;main.c: 273:                 LATE &= ~(1 << pos.y);
  2303  000F3E  C0A3  F0A5         	movff	setLed@pos+1,??_setLed
  2304  000F42  0E01               	movlw	1
  2305  000F44  6FA6               	movwf	(??_setLed+1)& (0+255),b
  2306  000F46  2BA5               	incf	??_setLed& (0+255),f,b
  2307  000F48  EFA8  F007         	goto	u1934
  2308  000F4C                     u1935:
  2309  000F4C  90D8               	bcf	status,0,c
  2310  000F4E  37A6               	rlcf	(??_setLed+1)& (0+255),f,b
  2311  000F50                     u1934:
  2312  000F50  2FA5               	decfsz	??_setLed& (0+255),f,b
  2313  000F52  EFA6  F007         	goto	u1935
  2314  000F56  0100               	movlb	0	; () banked
  2315  000F58  51A6               	movf	(??_setLed+1)& (0+255),w,b
  2316  000F5A  0AFF               	xorlw	255
  2317  000F5C  168D               	andwf	141,f,c	;volatile
  2318  000F5E  EFFA  F007         	goto	l171
  2319  000F62                     l2446:
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;main.c: 276:             if (value)
  2323  000F62  51A4               	movf	setLed@value& (0+255),w,b
  2324  000F64  B4D8               	btfsc	status,2,c
  2325  000F66  EFB7  F007         	goto	u1941
  2326  000F6A  EFB9  F007         	goto	u1940
  2327  000F6E                     u1941:
  2328  000F6E  EFCA  F007         	goto	l2450
  2329  000F72                     u1940:
  2330  000F72                     
  2331                           ; BSR set to: 0
  2332                           ;main.c: 277:                 LATF |= (1 << pos.y);
  2333  000F72  C0A3  F0A5         	movff	setLed@pos+1,??_setLed
  2334  000F76  0E01               	movlw	1
  2335  000F78  6FA6               	movwf	(??_setLed+1)& (0+255),b
  2336  000F7A  2BA5               	incf	??_setLed& (0+255),f,b
  2337  000F7C  EFC2  F007         	goto	u1954
  2338  000F80                     u1955:
  2339  000F80  90D8               	bcf	status,0,c
  2340  000F82  37A6               	rlcf	(??_setLed+1)& (0+255),f,b
  2341  000F84                     u1954:
  2342  000F84  2FA5               	decfsz	??_setLed& (0+255),f,b
  2343  000F86  EFC0  F007         	goto	u1955
  2344  000F8A  0100               	movlb	0	; () banked
  2345  000F8C  51A6               	movf	(??_setLed+1)& (0+255),w,b
  2346  000F8E  128E               	iorwf	142,f,c	;volatile
  2347  000F90  EFFA  F007         	goto	l171
  2348  000F94                     l2450:
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;main.c: 279:                 LATF &= ~(1 << pos.y);
  2352  000F94  C0A3  F0A5         	movff	setLed@pos+1,??_setLed
  2353  000F98  0E01               	movlw	1
  2354  000F9A  6FA6               	movwf	(??_setLed+1)& (0+255),b
  2355  000F9C  2BA5               	incf	??_setLed& (0+255),f,b
  2356  000F9E  EFD3  F007         	goto	u1964
  2357  000FA2                     u1965:
  2358  000FA2  90D8               	bcf	status,0,c
  2359  000FA4  37A6               	rlcf	(??_setLed+1)& (0+255),f,b
  2360  000FA6                     u1964:
  2361  000FA6  2FA5               	decfsz	??_setLed& (0+255),f,b
  2362  000FA8  EFD1  F007         	goto	u1965
  2363  000FAC  0100               	movlb	0	; () banked
  2364  000FAE  51A6               	movf	(??_setLed+1)& (0+255),w,b
  2365  000FB0  0AFF               	xorlw	255
  2366  000FB2  168E               	andwf	142,f,c	;volatile
  2367  000FB4  EFFA  F007         	goto	l171
  2368  000FB8                     l2454:
  2369  000FB8  0100               	movlb	0	; () banked
  2370  000FBA  51A2               	movf	setLed@pos& (0+255),w,b
  2371  000FBC  6FA5               	movwf	??_setLed& (0+255),b
  2372  000FBE  6BA6               	clrf	(??_setLed+1)& (0+255),b
  2373                           
  2374                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2375                           ; Switch size 1, requested type "simple"
  2376                           ; Number of cases is 1, Range of values is 0 to 0
  2377                           ; switch strategies available:
  2378                           ; Name         Instructions Cycles
  2379                           ; simple_byte            4     3 (average)
  2380                           ;	Chosen strategy is simple_byte
  2381  000FC0  51A6               	movf	(??_setLed+1)& (0+255),w,b
  2382  000FC2  0A00               	xorlw	0	; case 0
  2383  000FC4  B4D8               	btfsc	status,2,c
  2384  000FC6  EFE7  F007         	goto	l2902
  2385  000FCA  EFFA  F007         	goto	l171
  2386  000FCE                     l2902:
  2387                           
  2388                           ; BSR set to: 0
  2389                           ; Switch size 1, requested type "simple"
  2390                           ; Number of cases is 4, Range of values is 0 to 3
  2391                           ; switch strategies available:
  2392                           ; Name         Instructions Cycles
  2393                           ; simple_byte           13     7 (average)
  2394                           ;	Chosen strategy is simple_byte
  2395  000FCE  51A5               	movf	??_setLed& (0+255),w,b
  2396  000FD0  0A00               	xorlw	0	; case 0
  2397  000FD2  B4D8               	btfsc	status,2,c
  2398  000FD4  EF30  F007         	goto	l2428
  2399  000FD8  0A01               	xorlw	1	; case 1
  2400  000FDA  B4D8               	btfsc	status,2,c
  2401  000FDC  EF5B  F007         	goto	l2434
  2402  000FE0  0A03               	xorlw	3	; case 2
  2403  000FE2  B4D8               	btfsc	status,2,c
  2404  000FE4  EF86  F007         	goto	l2440
  2405  000FE8  0A01               	xorlw	1	; case 3
  2406  000FEA  B4D8               	btfsc	status,2,c
  2407  000FEC  EFB1  F007         	goto	l2446
  2408  000FF0  EFFA  F007         	goto	l171
  2409  000FF4                     l171:
  2410                           
  2411                           ; BSR set to: 0
  2412  000FF4  0012               	return		;funcret
  2413  000FF6                     __end_of_setLed:
  2414                           	callstack 0
  2415                           
  2416 ;; *************** function _busy_wait *****************
  2417 ;; Defined at:
  2418 ;;		line 112 in file "main.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;		None
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  i               4    0[BANK0 ] long 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, status,2, status,0
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;Total ram usage:        4 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    5
  2439 ;; This function calls:
  2440 ;;		Nothing
  2441 ;; This function is called by:
  2442 ;;		_main
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text11
  2447  00147C                     __ptext11:
  2448                           	callstack 0
  2449  00147C                     _busy_wait:
  2450                           	callstack 25
  2451  00147C                     
  2452                           ;main.c: 113:     for (long int i = 0; i <= 454544; i++);
  2453  00147C  0E00               	movlw	0
  2454  00147E  0100               	movlb	0	; () banked
  2455  001480  6FA2               	movwf	busy_wait@i& (0+255),b
  2456  001482  0E00               	movlw	0
  2457  001484  6FA3               	movwf	(busy_wait@i+1)& (0+255),b
  2458  001486  0E00               	movlw	0
  2459  001488  6FA4               	movwf	(busy_wait@i+2)& (0+255),b
  2460  00148A  0E00               	movlw	0
  2461  00148C  6FA5               	movwf	(busy_wait@i+3)& (0+255),b
  2462  00148E                     l2488:
  2463                           
  2464                           ; BSR set to: 0
  2465  00148E  0E01               	movlw	1
  2466  001490  27A2               	addwf	busy_wait@i& (0+255),f,b
  2467  001492  0E00               	movlw	0
  2468  001494  23A3               	addwfc	(busy_wait@i+1)& (0+255),f,b
  2469  001496  23A4               	addwfc	(busy_wait@i+2)& (0+255),f,b
  2470  001498  23A5               	addwfc	(busy_wait@i+3)& (0+255),f,b
  2471  00149A  BFA5               	btfsc	(busy_wait@i+3)& (0+255),7,b
  2472  00149C  EF5D  F00A         	goto	u1971
  2473  0014A0  51A5               	movf	(busy_wait@i+3)& (0+255),w,b
  2474  0014A2  E10D               	bnz	u1970
  2475  0014A4  0E91               	movlw	145
  2476  0014A6  5DA2               	subwf	busy_wait@i& (0+255),w,b
  2477  0014A8  0EEF               	movlw	239
  2478  0014AA  59A3               	subwfb	(busy_wait@i+1)& (0+255),w,b
  2479  0014AC  0E06               	movlw	6
  2480  0014AE  59A4               	subwfb	(busy_wait@i+2)& (0+255),w,b
  2481  0014B0  A0D8               	btfss	status,0,c
  2482  0014B2  EF5D  F00A         	goto	u1971
  2483  0014B6  EF5F  F00A         	goto	u1970
  2484  0014BA                     u1971:
  2485  0014BA  EF47  F00A         	goto	l2488
  2486  0014BE                     u1970:
  2487  0014BE                     
  2488                           ; BSR set to: 0
  2489                           ;main.c: 114:     INTCON |= (1 << 7);
  2490  0014BE  8EF2               	bsf	242,7,c	;volatile
  2491  0014C0                     
  2492                           ; BSR set to: 0
  2493  0014C0  0012               	return		;funcret
  2494  0014C2                     __end_of_busy_wait:
  2495                           	callstack 0
  2496                           
  2497 ;; *************** function _HandleInterrupt *****************
  2498 ;; Defined at:
  2499 ;;		line 131 in file "main.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;		None
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;		None
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;Total ram usage:        4 bytes
  2518 ;; Hardware stack levels used:    1
  2519 ;; Hardware stack levels required when called:    4
  2520 ;; This function calls:
  2521 ;;		_blink
  2522 ;;		_rotate
  2523 ;;		_submit
  2524 ;; This function is called by:
  2525 ;;		Interrupt level 2
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           	psect	intcode
  2530  000008                     __pintcode:
  2531                           	callstack 0
  2532  000008                     _HandleInterrupt:
  2533                           	callstack 22
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;incstack = 0
  2537  000008  8244               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2538  00000A  EDBA  F009         	call	int_func,f	;refresh shadow registers
  2539                           
  2540                           	psect	intcode_body
  2541  001374                     __pintcode_body:
  2542                           	callstack 22
  2543  001374                     int_func:
  2544                           	callstack 22
  2545  001374  0006               	pop		; remove dummy address from shadow register refresh
  2546  001376  CFD9 F03F          	movff	fsr2l,??_HandleInterrupt
  2547  00137A  CFDA F040          	movff	fsr2h,??_HandleInterrupt+1
  2548  00137E  CFF3 F041          	movff	prodl,??_HandleInterrupt+2
  2549  001382  CFF4 F042          	movff	prodh,??_HandleInterrupt+3
  2550  001386                     
  2551                           ;main.c: 132:     if (((INTCON) & (1 << (2))))
  2552  001386  A4F2               	btfss	242,2,c	;volatile
  2553  001388  EFC8  F009         	goto	i2u174_41
  2554  00138C  EFCA  F009         	goto	i2u174_40
  2555  001390                     i2u174_41:
  2556  001390  EFDC  F009         	goto	i2l2142
  2557  001394                     i2u174_40:
  2558  001394                     
  2559                           ;main.c: 133:     {;main.c: 134:         blink_counter += 1;
  2560  001394  4A1D               	infsnz	_blink_counter^0,f,c
  2561  001396  2A1E               	incf	(_blink_counter+1)^0,f,c
  2562  001398                     
  2563                           ;main.c: 135:         if (blink_counter == 50) {
  2564  001398  0E32               	movlw	50
  2565  00139A  181D               	xorwf	_blink_counter^0,w,c
  2566  00139C  101E               	iorwf	(_blink_counter+1)^0,w,c
  2567  00139E  A4D8               	btfss	status,2,c
  2568  0013A0  EFD4  F009         	goto	i2u175_41
  2569  0013A4  EFD6  F009         	goto	i2u175_40
  2570  0013A8                     i2u175_41:
  2571  0013A8  EFD8  F009         	goto	i2l2138
  2572  0013AC                     i2u175_40:
  2573  0013AC                     
  2574                           ;main.c: 136:             blink();
  2575  0013AC  EC61  F00A         	call	_blink	;wreg free
  2576  0013B0                     i2l2138:
  2577                           
  2578                           ;main.c: 139:         TMR0L = 0xCE;
  2579  0013B0  0ECE               	movlw	206
  2580  0013B2  6ED6               	movwf	214,c	;volatile
  2581  0013B4                     
  2582                           ;main.c: 140:         TMR0H = 0x3C;
  2583  0013B4  0E3C               	movlw	60
  2584  0013B6  6ED7               	movwf	215,c	;volatile
  2585  0013B8                     i2l2142:
  2586                           
  2587                           ;main.c: 143:     if (((INTCON) & (1 << (0))))
  2588  0013B8  A0F2               	btfss	242,0,c	;volatile
  2589  0013BA  EFE1  F009         	goto	i2u176_41
  2590  0013BE  EFE3  F009         	goto	i2u176_40
  2591  0013C2                     i2u176_41:
  2592  0013C2  EF00  F00A         	goto	i2l2156
  2593  0013C6                     i2u176_40:
  2594  0013C6                     
  2595                           ;main.c: 144:     {;main.c: 145:         if (((PORTB) & (1 << (5))))
  2596  0013C6  AA81               	btfss	129,5,c	;volatile
  2597  0013C8  EFE8  F009         	goto	i2u177_41
  2598  0013CC  EFEA  F009         	goto	i2u177_40
  2599  0013D0                     i2u177_41:
  2600  0013D0  EFEC  F009         	goto	i2l2148
  2601  0013D4                     i2u177_40:
  2602  0013D4                     
  2603                           ;main.c: 146:             rotate();
  2604  0013D4  EC1A  F00B         	call	_rotate	;wreg free
  2605  0013D8                     i2l2148:
  2606                           
  2607                           ;main.c: 147:         if (!prev_submit && ((PORTB) & (1 << (6)))) {
  2608  0013D8  501F               	movf	_prev_submit^0,w,c
  2609  0013DA  A4D8               	btfss	status,2,c
  2610  0013DC  EFF2  F009         	goto	i2u178_41
  2611  0013E0  EFF4  F009         	goto	i2u178_40
  2612  0013E4                     i2u178_41:
  2613  0013E4  EFFD  F009         	goto	i2l2154
  2614  0013E8                     i2u178_40:
  2615  0013E8  AC81               	btfss	129,6,c	;volatile
  2616  0013EA  EFF9  F009         	goto	i2u179_41
  2617  0013EE  EFFB  F009         	goto	i2u179_40
  2618  0013F2                     i2u179_41:
  2619  0013F2  EFFD  F009         	goto	i2l2154
  2620  0013F6                     i2u179_40:
  2621  0013F6                     
  2622                           ;main.c: 148:             submit();
  2623  0013F6  EC55  F005         	call	_submit	;wreg free
  2624  0013FA                     i2l2154:
  2625                           
  2626                           ;main.c: 150:         prev_submit = ((PORTB) & (1 << (6)));
  2627  0013FA  5081               	movf	129,w,c	;volatile
  2628  0013FC  0B40               	andlw	64
  2629  0013FE  6E1F               	movwf	_prev_submit^0,c
  2630  001400                     i2l2156:
  2631                           
  2632                           ;main.c: 153:     INTCON &= ~((1 << 0) | (1 << 1) | (1 << 2));
  2633  001400  0EF8               	movlw	248
  2634  001402  16F2               	andwf	242,f,c	;volatile
  2635  001404  C042  FFF4         	movff	??_HandleInterrupt+3,prodh
  2636  001408  C041  FFF3         	movff	??_HandleInterrupt+2,prodl
  2637  00140C  C040  FFDA         	movff	??_HandleInterrupt+1,fsr2h
  2638  001410  C03F  FFD9         	movff	??_HandleInterrupt,fsr2l
  2639  001414  9244               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2640  001416  0011               	retfie		f
  2641  001418                     __end_of_HandleInterrupt:
  2642                           	callstack 0
  2643                           
  2644 ;; *************** function _submit *****************
  2645 ;; Defined at:
  2646 ;;		line 387 in file "main.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;		None
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  4720            2   26[COMRAM] struct Position
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;Total ram usage:        6 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    1
  2667 ;; This function calls:
  2668 ;;		___lwmod
  2669 ;;		_not_intersects
  2670 ;; This function is called by:
  2671 ;;		_HandleInterrupt
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text13
  2676  000AAA                     __ptext13:
  2677                           	callstack 0
  2678  000AAA                     _submit:
  2679                           	callstack 24
  2680  000AAA                     
  2681                           ;main.c: 440:         position = (Position){0, 0};;main.c: 388:     if (not_intersects()
      +                          ) {
  2682  000AAA  EC09  F000         	call	_not_intersects	;wreg free
  2683  000AAE  0900               	iorlw	0
  2684  000AB0  B4D8               	btfsc	status,2,c
  2685  000AB2  EF5D  F005         	goto	i2u149_41
  2686  000AB6  EF5F  F005         	goto	i2u149_40
  2687  000ABA                     i2u149_41:
  2688  000ABA  EF2D  F007         	goto	i2l239
  2689  000ABE                     i2u149_40:
  2690  000ABE  EFFC  F006         	goto	i2l1922
  2691  000AC2                     i2l1886:
  2692                           
  2693                           ;main.c: 391:             {;main.c: 392:                 grid[position.x][position.y] = 
      +                          1;
  2694  000AC2  501B               	movf	_position^0,w,c
  2695  000AC4  0D08               	mullw	8
  2696  000AC6  0E60               	movlw	low _grid
  2697  000AC8  6E39               	movwf	??_submit^0,c
  2698  000ACA  0E00               	movlw	high _grid
  2699  000ACC  6E3A               	movwf	(??_submit+1)^0,c
  2700  000ACE  50F3               	movf	243,w,c
  2701  000AD0  2639               	addwf	??_submit^0,f,c
  2702  000AD2  50F4               	movf	244,w,c
  2703  000AD4  223A               	addwfc	(??_submit+1)^0,f,c
  2704  000AD6  501C               	movf	(_position+1)^0,w,c
  2705  000AD8  2439               	addwf	??_submit^0,w,c
  2706  000ADA  6ED9               	movwf	fsr2l,c
  2707  000ADC  0E00               	movlw	0
  2708  000ADE  203A               	addwfc	(??_submit+1)^0,w,c
  2709  000AE0  6EDA               	movwf	fsr2h,c
  2710  000AE2  0E01               	movlw	1
  2711  000AE4  6EDF               	movwf	indf2,c
  2712                           
  2713                           ;main.c: 393:                 break;
  2714  000AE6  EF15  F007         	goto	i2l1924
  2715  000AEA                     i2l1888:
  2716                           
  2717                           ;main.c: 396:             {;main.c: 397:                 grid[position.x][position.y] = 
      +                          1;
  2718  000AEA  501B               	movf	_position^0,w,c
  2719  000AEC  0D08               	mullw	8
  2720  000AEE  0E60               	movlw	low _grid
  2721  000AF0  6E39               	movwf	??_submit^0,c
  2722  000AF2  0E00               	movlw	high _grid
  2723  000AF4  6E3A               	movwf	(??_submit+1)^0,c
  2724  000AF6  50F3               	movf	243,w,c
  2725  000AF8  2639               	addwf	??_submit^0,f,c
  2726  000AFA  50F4               	movf	244,w,c
  2727  000AFC  223A               	addwfc	(??_submit+1)^0,f,c
  2728  000AFE  501C               	movf	(_position+1)^0,w,c
  2729  000B00  2439               	addwf	??_submit^0,w,c
  2730  000B02  6ED9               	movwf	fsr2l,c
  2731  000B04  0E00               	movlw	0
  2732  000B06  203A               	addwfc	(??_submit+1)^0,w,c
  2733  000B08  6EDA               	movwf	fsr2h,c
  2734  000B0A  0E01               	movlw	1
  2735  000B0C  6EDF               	movwf	indf2,c
  2736  000B0E                     
  2737                           ;main.c: 398:                 grid[position.x + 1][position.y] = 1;
  2738  000B0E  501B               	movf	_position^0,w,c
  2739  000B10  6E39               	movwf	??_submit^0,c
  2740  000B12  6A3A               	clrf	(??_submit+1)^0,c
  2741  000B14  90D8               	bcf	status,0,c
  2742  000B16  3639               	rlcf	??_submit^0,f,c
  2743  000B18  363A               	rlcf	(??_submit+1)^0,f,c
  2744  000B1A  90D8               	bcf	status,0,c
  2745  000B1C  3639               	rlcf	??_submit^0,f,c
  2746  000B1E  363A               	rlcf	(??_submit+1)^0,f,c
  2747  000B20  90D8               	bcf	status,0,c
  2748  000B22  3639               	rlcf	??_submit^0,f,c
  2749  000B24  363A               	rlcf	(??_submit+1)^0,f,c
  2750  000B26  0E60               	movlw	low _grid
  2751  000B28  6E3B               	movwf	(??_submit+2)^0,c
  2752  000B2A  0E00               	movlw	high _grid
  2753  000B2C  6E3C               	movwf	(??_submit+3)^0,c
  2754  000B2E  0E08               	movlw	8
  2755  000B30  263B               	addwf	(??_submit+2)^0,f,c
  2756  000B32  0E00               	movlw	0
  2757  000B34  223C               	addwfc	(??_submit+3)^0,f,c
  2758  000B36  5039               	movf	??_submit^0,w,c
  2759  000B38  263B               	addwf	(??_submit+2)^0,f,c
  2760  000B3A  503A               	movf	(??_submit+1)^0,w,c
  2761  000B3C  223C               	addwfc	(??_submit+3)^0,f,c
  2762  000B3E  501C               	movf	(_position+1)^0,w,c
  2763  000B40  243B               	addwf	(??_submit+2)^0,w,c
  2764  000B42  6ED9               	movwf	fsr2l,c
  2765  000B44  0E00               	movlw	0
  2766  000B46  203C               	addwfc	(??_submit+3)^0,w,c
  2767  000B48  6EDA               	movwf	fsr2h,c
  2768  000B4A  0E01               	movlw	1
  2769  000B4C  6EDF               	movwf	indf2,c
  2770  000B4E                     
  2771                           ;main.c: 399:                 grid[position.x][position.y + 1] = 1;
  2772  000B4E  501B               	movf	_position^0,w,c
  2773  000B50  0D08               	mullw	8
  2774  000B52  0E60               	movlw	low _grid
  2775  000B54  6E39               	movwf	??_submit^0,c
  2776  000B56  0E00               	movlw	high _grid
  2777  000B58  6E3A               	movwf	(??_submit+1)^0,c
  2778  000B5A  0E01               	movlw	1
  2779  000B5C  2639               	addwf	??_submit^0,f,c
  2780  000B5E  0E00               	movlw	0
  2781  000B60  223A               	addwfc	(??_submit+1)^0,f,c
  2782  000B62  50F3               	movf	243,w,c
  2783  000B64  2639               	addwf	??_submit^0,f,c
  2784  000B66  50F4               	movf	244,w,c
  2785  000B68  223A               	addwfc	(??_submit+1)^0,f,c
  2786  000B6A  501C               	movf	(_position+1)^0,w,c
  2787  000B6C  2439               	addwf	??_submit^0,w,c
  2788  000B6E  6ED9               	movwf	fsr2l,c
  2789  000B70  0E00               	movlw	0
  2790  000B72  203A               	addwfc	(??_submit+1)^0,w,c
  2791  000B74  6EDA               	movwf	fsr2h,c
  2792  000B76  0E01               	movlw	1
  2793  000B78  6EDF               	movwf	indf2,c
  2794                           
  2795                           ;main.c: 400:                 grid[position.x + 1][position.y + 1] = 1;
  2796  000B7A  501B               	movf	_position^0,w,c
  2797  000B7C  6E39               	movwf	??_submit^0,c
  2798  000B7E  6A3A               	clrf	(??_submit+1)^0,c
  2799  000B80  90D8               	bcf	status,0,c
  2800  000B82  3639               	rlcf	??_submit^0,f,c
  2801  000B84  363A               	rlcf	(??_submit+1)^0,f,c
  2802  000B86  90D8               	bcf	status,0,c
  2803  000B88  3639               	rlcf	??_submit^0,f,c
  2804  000B8A  363A               	rlcf	(??_submit+1)^0,f,c
  2805  000B8C  90D8               	bcf	status,0,c
  2806  000B8E  3639               	rlcf	??_submit^0,f,c
  2807  000B90  363A               	rlcf	(??_submit+1)^0,f,c
  2808  000B92  0E60               	movlw	low _grid
  2809  000B94  6E3B               	movwf	(??_submit+2)^0,c
  2810  000B96  0E00               	movlw	high _grid
  2811  000B98  6E3C               	movwf	(??_submit+3)^0,c
  2812  000B9A  0E09               	movlw	9
  2813  000B9C  263B               	addwf	(??_submit+2)^0,f,c
  2814  000B9E  0E00               	movlw	0
  2815  000BA0  223C               	addwfc	(??_submit+3)^0,f,c
  2816  000BA2  501C               	movf	(_position+1)^0,w,c
  2817  000BA4  263B               	addwf	(??_submit+2)^0,f,c
  2818  000BA6  0E00               	movlw	0
  2819  000BA8  223C               	addwfc	(??_submit+3)^0,f,c
  2820  000BAA  5039               	movf	??_submit^0,w,c
  2821  000BAC  243B               	addwf	(??_submit+2)^0,w,c
  2822  000BAE  6ED9               	movwf	fsr2l,c
  2823  000BB0  503A               	movf	(??_submit+1)^0,w,c
  2824  000BB2  203C               	addwfc	(??_submit+3)^0,w,c
  2825  000BB4  6EDA               	movwf	fsr2h,c
  2826  000BB6  0E01               	movlw	1
  2827  000BB8  6EDF               	movwf	indf2,c
  2828                           
  2829                           ;main.c: 401:                 break;
  2830  000BBA  EF15  F007         	goto	i2l1924
  2831  000BBE                     i2l1894:
  2832                           
  2833                           ;main.c: 407:                     {;main.c: 408:                         grid[position.x
      +                          ][position.y] = 1;
  2834  000BBE  501B               	movf	_position^0,w,c
  2835  000BC0  0D08               	mullw	8
  2836  000BC2  0E60               	movlw	low _grid
  2837  000BC4  6E39               	movwf	??_submit^0,c
  2838  000BC6  0E00               	movlw	high _grid
  2839  000BC8  6E3A               	movwf	(??_submit+1)^0,c
  2840  000BCA  50F3               	movf	243,w,c
  2841  000BCC  2639               	addwf	??_submit^0,f,c
  2842  000BCE  50F4               	movf	244,w,c
  2843  000BD0  223A               	addwfc	(??_submit+1)^0,f,c
  2844  000BD2  501C               	movf	(_position+1)^0,w,c
  2845  000BD4  2439               	addwf	??_submit^0,w,c
  2846  000BD6  6ED9               	movwf	fsr2l,c
  2847  000BD8  0E00               	movlw	0
  2848  000BDA  203A               	addwfc	(??_submit+1)^0,w,c
  2849  000BDC  6EDA               	movwf	fsr2h,c
  2850  000BDE  0E01               	movlw	1
  2851  000BE0  6EDF               	movwf	indf2,c
  2852  000BE2                     
  2853                           ;main.c: 409:                         grid[position.x + 1][position.y] = 1;
  2854  000BE2  501B               	movf	_position^0,w,c
  2855  000BE4  6E39               	movwf	??_submit^0,c
  2856  000BE6  6A3A               	clrf	(??_submit+1)^0,c
  2857  000BE8  90D8               	bcf	status,0,c
  2858  000BEA  3639               	rlcf	??_submit^0,f,c
  2859  000BEC  363A               	rlcf	(??_submit+1)^0,f,c
  2860  000BEE  90D8               	bcf	status,0,c
  2861  000BF0  3639               	rlcf	??_submit^0,f,c
  2862  000BF2  363A               	rlcf	(??_submit+1)^0,f,c
  2863  000BF4  90D8               	bcf	status,0,c
  2864  000BF6  3639               	rlcf	??_submit^0,f,c
  2865  000BF8  363A               	rlcf	(??_submit+1)^0,f,c
  2866  000BFA  0E60               	movlw	low _grid
  2867  000BFC  6E3B               	movwf	(??_submit+2)^0,c
  2868  000BFE  0E00               	movlw	high _grid
  2869  000C00  6E3C               	movwf	(??_submit+3)^0,c
  2870  000C02  0E08               	movlw	8
  2871  000C04  263B               	addwf	(??_submit+2)^0,f,c
  2872  000C06  0E00               	movlw	0
  2873  000C08  223C               	addwfc	(??_submit+3)^0,f,c
  2874  000C0A  5039               	movf	??_submit^0,w,c
  2875  000C0C  263B               	addwf	(??_submit+2)^0,f,c
  2876  000C0E  503A               	movf	(??_submit+1)^0,w,c
  2877  000C10  223C               	addwfc	(??_submit+3)^0,f,c
  2878  000C12  501C               	movf	(_position+1)^0,w,c
  2879  000C14  243B               	addwf	(??_submit+2)^0,w,c
  2880  000C16  6ED9               	movwf	fsr2l,c
  2881  000C18  0E00               	movlw	0
  2882  000C1A  203C               	addwfc	(??_submit+3)^0,w,c
  2883  000C1C  6EDA               	movwf	fsr2h,c
  2884  000C1E  0E01               	movlw	1
  2885  000C20  6EDF               	movwf	indf2,c
  2886  000C22                     i2l1898:
  2887                           
  2888                           ;main.c: 410:                         grid[position.x + 1][position.y + 1] = 1;
  2889  000C22  501B               	movf	_position^0,w,c
  2890  000C24  6E39               	movwf	??_submit^0,c
  2891  000C26  6A3A               	clrf	(??_submit+1)^0,c
  2892  000C28  90D8               	bcf	status,0,c
  2893  000C2A  3639               	rlcf	??_submit^0,f,c
  2894  000C2C  363A               	rlcf	(??_submit+1)^0,f,c
  2895  000C2E  90D8               	bcf	status,0,c
  2896  000C30  3639               	rlcf	??_submit^0,f,c
  2897  000C32  363A               	rlcf	(??_submit+1)^0,f,c
  2898  000C34  90D8               	bcf	status,0,c
  2899  000C36  3639               	rlcf	??_submit^0,f,c
  2900  000C38  363A               	rlcf	(??_submit+1)^0,f,c
  2901  000C3A  0E60               	movlw	low _grid
  2902  000C3C  6E3B               	movwf	(??_submit+2)^0,c
  2903  000C3E  0E00               	movlw	high _grid
  2904  000C40  6E3C               	movwf	(??_submit+3)^0,c
  2905  000C42  0E09               	movlw	9
  2906  000C44  263B               	addwf	(??_submit+2)^0,f,c
  2907  000C46  0E00               	movlw	0
  2908  000C48  223C               	addwfc	(??_submit+3)^0,f,c
  2909  000C4A  501C               	movf	(_position+1)^0,w,c
  2910  000C4C  263B               	addwf	(??_submit+2)^0,f,c
  2911  000C4E  0E00               	movlw	0
  2912  000C50  223C               	addwfc	(??_submit+3)^0,f,c
  2913  000C52  5039               	movf	??_submit^0,w,c
  2914  000C54  243B               	addwf	(??_submit+2)^0,w,c
  2915  000C56  6ED9               	movwf	fsr2l,c
  2916  000C58  503A               	movf	(??_submit+1)^0,w,c
  2917  000C5A  203C               	addwfc	(??_submit+3)^0,w,c
  2918  000C5C  6EDA               	movwf	fsr2h,c
  2919  000C5E  0E01               	movlw	1
  2920  000C60  6EDF               	movwf	indf2,c
  2921                           
  2922                           ;main.c: 411:                         break;
  2923  000C62  EF15  F007         	goto	i2l1924
  2924  000C66                     i2l1900:
  2925                           
  2926                           ;main.c: 414:                     {;main.c: 415:                         grid[position.x
      +                           + 1][position.y] = 1;
  2927  000C66  501B               	movf	_position^0,w,c
  2928  000C68  6E39               	movwf	??_submit^0,c
  2929  000C6A  6A3A               	clrf	(??_submit+1)^0,c
  2930  000C6C  90D8               	bcf	status,0,c
  2931  000C6E  3639               	rlcf	??_submit^0,f,c
  2932  000C70  363A               	rlcf	(??_submit+1)^0,f,c
  2933  000C72  90D8               	bcf	status,0,c
  2934  000C74  3639               	rlcf	??_submit^0,f,c
  2935  000C76  363A               	rlcf	(??_submit+1)^0,f,c
  2936  000C78  90D8               	bcf	status,0,c
  2937  000C7A  3639               	rlcf	??_submit^0,f,c
  2938  000C7C  363A               	rlcf	(??_submit+1)^0,f,c
  2939  000C7E  0E60               	movlw	low _grid
  2940  000C80  6E3B               	movwf	(??_submit+2)^0,c
  2941  000C82  0E00               	movlw	high _grid
  2942  000C84  6E3C               	movwf	(??_submit+3)^0,c
  2943  000C86  0E08               	movlw	8
  2944  000C88  263B               	addwf	(??_submit+2)^0,f,c
  2945  000C8A  0E00               	movlw	0
  2946  000C8C  223C               	addwfc	(??_submit+3)^0,f,c
  2947  000C8E  5039               	movf	??_submit^0,w,c
  2948  000C90  263B               	addwf	(??_submit+2)^0,f,c
  2949  000C92  503A               	movf	(??_submit+1)^0,w,c
  2950  000C94  223C               	addwfc	(??_submit+3)^0,f,c
  2951  000C96  501C               	movf	(_position+1)^0,w,c
  2952  000C98  243B               	addwf	(??_submit+2)^0,w,c
  2953  000C9A  6ED9               	movwf	fsr2l,c
  2954  000C9C  0E00               	movlw	0
  2955  000C9E  203C               	addwfc	(??_submit+3)^0,w,c
  2956  000CA0  6EDA               	movwf	fsr2h,c
  2957  000CA2  0E01               	movlw	1
  2958  000CA4  6EDF               	movwf	indf2,c
  2959  000CA6                     
  2960                           ;main.c: 416:                         grid[position.x][position.y + 1] = 1;
  2961  000CA6  501B               	movf	_position^0,w,c
  2962  000CA8  0D08               	mullw	8
  2963  000CAA  0E60               	movlw	low _grid
  2964  000CAC  6E39               	movwf	??_submit^0,c
  2965  000CAE  0E00               	movlw	high _grid
  2966  000CB0  6E3A               	movwf	(??_submit+1)^0,c
  2967  000CB2  0E01               	movlw	1
  2968  000CB4  2639               	addwf	??_submit^0,f,c
  2969  000CB6  0E00               	movlw	0
  2970  000CB8  223A               	addwfc	(??_submit+1)^0,f,c
  2971  000CBA  50F3               	movf	243,w,c
  2972  000CBC  2639               	addwf	??_submit^0,f,c
  2973  000CBE  50F4               	movf	244,w,c
  2974  000CC0  223A               	addwfc	(??_submit+1)^0,f,c
  2975  000CC2  501C               	movf	(_position+1)^0,w,c
  2976  000CC4  2439               	addwf	??_submit^0,w,c
  2977  000CC6  6ED9               	movwf	fsr2l,c
  2978  000CC8  0E00               	movlw	0
  2979  000CCA  203A               	addwfc	(??_submit+1)^0,w,c
  2980  000CCC  6EDA               	movwf	fsr2h,c
  2981  000CCE  0E01               	movlw	1
  2982  000CD0  6EDF               	movwf	indf2,c
  2983  000CD2  EF11  F006         	goto	i2l1898
  2984  000CD6                     i2l1906:
  2985                           
  2986                           ;main.c: 421:                     {;main.c: 422:                         grid[position.x
      +                          ][position.y] = 1;
  2987  000CD6  501B               	movf	_position^0,w,c
  2988  000CD8  0D08               	mullw	8
  2989  000CDA  0E60               	movlw	low _grid
  2990  000CDC  6E39               	movwf	??_submit^0,c
  2991  000CDE  0E00               	movlw	high _grid
  2992  000CE0  6E3A               	movwf	(??_submit+1)^0,c
  2993  000CE2  50F3               	movf	243,w,c
  2994  000CE4  2639               	addwf	??_submit^0,f,c
  2995  000CE6  50F4               	movf	244,w,c
  2996  000CE8  223A               	addwfc	(??_submit+1)^0,f,c
  2997  000CEA  501C               	movf	(_position+1)^0,w,c
  2998  000CEC  2439               	addwf	??_submit^0,w,c
  2999  000CEE  6ED9               	movwf	fsr2l,c
  3000  000CF0  0E00               	movlw	0
  3001  000CF2  203A               	addwfc	(??_submit+1)^0,w,c
  3002  000CF4  6EDA               	movwf	fsr2h,c
  3003  000CF6  0E01               	movlw	1
  3004  000CF8  6EDF               	movwf	indf2,c
  3005                           
  3006                           ;main.c: 423:                         grid[position.x][position.y + 1] = 1;
  3007  000CFA  501B               	movf	_position^0,w,c
  3008  000CFC  0D08               	mullw	8
  3009  000CFE  0E60               	movlw	low _grid
  3010  000D00  6E39               	movwf	??_submit^0,c
  3011  000D02  0E00               	movlw	high _grid
  3012  000D04  6E3A               	movwf	(??_submit+1)^0,c
  3013  000D06  0E01               	movlw	1
  3014  000D08  2639               	addwf	??_submit^0,f,c
  3015  000D0A  0E00               	movlw	0
  3016  000D0C  223A               	addwfc	(??_submit+1)^0,f,c
  3017  000D0E  50F3               	movf	243,w,c
  3018  000D10  2639               	addwf	??_submit^0,f,c
  3019  000D12  50F4               	movf	244,w,c
  3020  000D14  223A               	addwfc	(??_submit+1)^0,f,c
  3021  000D16  501C               	movf	(_position+1)^0,w,c
  3022  000D18  2439               	addwf	??_submit^0,w,c
  3023  000D1A  6ED9               	movwf	fsr2l,c
  3024  000D1C  0E00               	movlw	0
  3025  000D1E  203A               	addwfc	(??_submit+1)^0,w,c
  3026  000D20  6EDA               	movwf	fsr2h,c
  3027  000D22  0E01               	movlw	1
  3028  000D24  6EDF               	movwf	indf2,c
  3029  000D26  EF11  F006         	goto	i2l1898
  3030  000D2A                     i2l1910:
  3031                           
  3032                           ;main.c: 428:                     {;main.c: 429:                         grid[position.x
      +                          ][position.y] = 1;
  3033  000D2A  501B               	movf	_position^0,w,c
  3034  000D2C  0D08               	mullw	8
  3035  000D2E  0E60               	movlw	low _grid
  3036  000D30  6E39               	movwf	??_submit^0,c
  3037  000D32  0E00               	movlw	high _grid
  3038  000D34  6E3A               	movwf	(??_submit+1)^0,c
  3039  000D36  50F3               	movf	243,w,c
  3040  000D38  2639               	addwf	??_submit^0,f,c
  3041  000D3A  50F4               	movf	244,w,c
  3042  000D3C  223A               	addwfc	(??_submit+1)^0,f,c
  3043  000D3E  501C               	movf	(_position+1)^0,w,c
  3044  000D40  2439               	addwf	??_submit^0,w,c
  3045  000D42  6ED9               	movwf	fsr2l,c
  3046  000D44  0E00               	movlw	0
  3047  000D46  203A               	addwfc	(??_submit+1)^0,w,c
  3048  000D48  6EDA               	movwf	fsr2h,c
  3049  000D4A  0E01               	movlw	1
  3050  000D4C  6EDF               	movwf	indf2,c
  3051  000D4E                     
  3052                           ;main.c: 430:                         grid[position.x + 1][position.y] = 1;
  3053  000D4E  501B               	movf	_position^0,w,c
  3054  000D50  6E39               	movwf	??_submit^0,c
  3055  000D52  6A3A               	clrf	(??_submit+1)^0,c
  3056  000D54  90D8               	bcf	status,0,c
  3057  000D56  3639               	rlcf	??_submit^0,f,c
  3058  000D58  363A               	rlcf	(??_submit+1)^0,f,c
  3059  000D5A  90D8               	bcf	status,0,c
  3060  000D5C  3639               	rlcf	??_submit^0,f,c
  3061  000D5E  363A               	rlcf	(??_submit+1)^0,f,c
  3062  000D60  90D8               	bcf	status,0,c
  3063  000D62  3639               	rlcf	??_submit^0,f,c
  3064  000D64  363A               	rlcf	(??_submit+1)^0,f,c
  3065  000D66  0E60               	movlw	low _grid
  3066  000D68  6E3B               	movwf	(??_submit+2)^0,c
  3067  000D6A  0E00               	movlw	high _grid
  3068  000D6C  6E3C               	movwf	(??_submit+3)^0,c
  3069  000D6E  0E08               	movlw	8
  3070  000D70  263B               	addwf	(??_submit+2)^0,f,c
  3071  000D72  0E00               	movlw	0
  3072  000D74  223C               	addwfc	(??_submit+3)^0,f,c
  3073  000D76  5039               	movf	??_submit^0,w,c
  3074  000D78  263B               	addwf	(??_submit+2)^0,f,c
  3075  000D7A  503A               	movf	(??_submit+1)^0,w,c
  3076  000D7C  223C               	addwfc	(??_submit+3)^0,f,c
  3077  000D7E  501C               	movf	(_position+1)^0,w,c
  3078  000D80  243B               	addwf	(??_submit+2)^0,w,c
  3079  000D82  6ED9               	movwf	fsr2l,c
  3080  000D84  0E00               	movlw	0
  3081  000D86  203C               	addwfc	(??_submit+3)^0,w,c
  3082  000D88  6EDA               	movwf	fsr2h,c
  3083  000D8A  0E01               	movlw	1
  3084  000D8C  6EDF               	movwf	indf2,c
  3085  000D8E                     
  3086                           ;main.c: 431:                         grid[position.x][position.y + 1] = 1;
  3087  000D8E  501B               	movf	_position^0,w,c
  3088  000D90  0D08               	mullw	8
  3089  000D92  0E60               	movlw	low _grid
  3090  000D94  6E39               	movwf	??_submit^0,c
  3091  000D96  0E00               	movlw	high _grid
  3092  000D98  6E3A               	movwf	(??_submit+1)^0,c
  3093  000D9A  0E01               	movlw	1
  3094  000D9C  2639               	addwf	??_submit^0,f,c
  3095  000D9E  0E00               	movlw	0
  3096  000DA0  223A               	addwfc	(??_submit+1)^0,f,c
  3097  000DA2  50F3               	movf	243,w,c
  3098  000DA4  2639               	addwf	??_submit^0,f,c
  3099  000DA6  50F4               	movf	244,w,c
  3100  000DA8  223A               	addwfc	(??_submit+1)^0,f,c
  3101  000DAA  501C               	movf	(_position+1)^0,w,c
  3102  000DAC  2439               	addwf	??_submit^0,w,c
  3103  000DAE  6ED9               	movwf	fsr2l,c
  3104  000DB0  0E00               	movlw	0
  3105  000DB2  203A               	addwfc	(??_submit+1)^0,w,c
  3106  000DB4  6EDA               	movwf	fsr2h,c
  3107  000DB6  0E01               	movlw	1
  3108  000DB8  6EDF               	movwf	indf2,c
  3109                           
  3110                           ;main.c: 432:                         break;
  3111  000DBA  EF15  F007         	goto	i2l1924
  3112  000DBE                     i2l1918:
  3113  000DBE  5021               	movf	_rotation^0,w,c
  3114  000DC0  6E39               	movwf	??_submit^0,c
  3115  000DC2  6A3A               	clrf	(??_submit+1)^0,c
  3116                           
  3117                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3118                           ; Switch size 1, requested type "simple"
  3119                           ; Number of cases is 1, Range of values is 0 to 0
  3120                           ; switch strategies available:
  3121                           ; Name         Instructions Cycles
  3122                           ; simple_byte            4     3 (average)
  3123                           ;	Chosen strategy is simple_byte
  3124  000DC4  503A               	movf	(??_submit+1)^0,w,c
  3125  000DC6  0A00               	xorlw	0	; case 0
  3126  000DC8  B4D8               	btfsc	status,2,c
  3127  000DCA  EFE9  F006         	goto	i2l2904
  3128  000DCE  EF15  F007         	goto	i2l1924
  3129  000DD2                     i2l2904:
  3130                           
  3131                           ; Switch size 1, requested type "simple"
  3132                           ; Number of cases is 4, Range of values is 0 to 3
  3133                           ; switch strategies available:
  3134                           ; Name         Instructions Cycles
  3135                           ; simple_byte           13     7 (average)
  3136                           ;	Chosen strategy is simple_byte
  3137  000DD2  5039               	movf	??_submit^0,w,c
  3138  000DD4  0A00               	xorlw	0	; case 0
  3139  000DD6  B4D8               	btfsc	status,2,c
  3140  000DD8  EFDF  F005         	goto	i2l1894
  3141  000DDC  0A01               	xorlw	1	; case 1
  3142  000DDE  B4D8               	btfsc	status,2,c
  3143  000DE0  EF33  F006         	goto	i2l1900
  3144  000DE4  0A03               	xorlw	3	; case 2
  3145  000DE6  B4D8               	btfsc	status,2,c
  3146  000DE8  EF6B  F006         	goto	i2l1906
  3147  000DEC  0A01               	xorlw	1	; case 3
  3148  000DEE  B4D8               	btfsc	status,2,c
  3149  000DF0  EF95  F006         	goto	i2l1910
  3150  000DF4  EF15  F007         	goto	i2l1924
  3151  000DF8                     i2l1922:
  3152  000DF8  5020               	movf	_type^0,w,c
  3153  000DFA  6E39               	movwf	??_submit^0,c
  3154  000DFC  6A3A               	clrf	(??_submit+1)^0,c
  3155                           
  3156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3157                           ; Switch size 1, requested type "simple"
  3158                           ; Number of cases is 1, Range of values is 0 to 0
  3159                           ; switch strategies available:
  3160                           ; Name         Instructions Cycles
  3161                           ; simple_byte            4     3 (average)
  3162                           ;	Chosen strategy is simple_byte
  3163  000DFE  503A               	movf	(??_submit+1)^0,w,c
  3164  000E00  0A00               	xorlw	0	; case 0
  3165  000E02  B4D8               	btfsc	status,2,c
  3166  000E04  EF06  F007         	goto	i2l2906
  3167  000E08  EF15  F007         	goto	i2l1924
  3168  000E0C                     i2l2906:
  3169                           
  3170                           ; Switch size 1, requested type "simple"
  3171                           ; Number of cases is 3, Range of values is 0 to 2
  3172                           ; switch strategies available:
  3173                           ; Name         Instructions Cycles
  3174                           ; simple_byte           10     6 (average)
  3175                           ;	Chosen strategy is simple_byte
  3176  000E0C  5039               	movf	??_submit^0,w,c
  3177  000E0E  0A00               	xorlw	0	; case 0
  3178  000E10  B4D8               	btfsc	status,2,c
  3179  000E12  EF61  F005         	goto	i2l1886
  3180  000E16  0A01               	xorlw	1	; case 1
  3181  000E18  B4D8               	btfsc	status,2,c
  3182  000E1A  EF75  F005         	goto	i2l1888
  3183  000E1E  0A03               	xorlw	3	; case 2
  3184  000E20  B4D8               	btfsc	status,2,c
  3185  000E22  EFDF  F006         	goto	i2l1918
  3186  000E26  EF15  F007         	goto	i2l1924
  3187  000E2A                     i2l1924:
  3188                           
  3189                           ;main.c: 439:         type = (type + 1) % 3;
  3190  000E2A  0E01               	movlw	1
  3191  000E2C  2420               	addwf	_type^0,w,c
  3192  000E2E  6E23               	movwf	___lwmod@dividend^0,c
  3193  000E30  6A24               	clrf	(___lwmod@dividend+1)^0,c
  3194  000E32  0E00               	movlw	0
  3195  000E34  2224               	addwfc	(___lwmod@dividend+1)^0,f,c
  3196  000E36  0E00               	movlw	0
  3197  000E38  6E26               	movwf	(___lwmod@divisor+1)^0,c
  3198  000E3A  0E03               	movlw	3
  3199  000E3C  6E25               	movwf	___lwmod@divisor^0,c
  3200  000E3E  EC0C  F00A         	call	___lwmod	;wreg free
  3201  000E42  5023               	movf	?___lwmod^0,w,c
  3202  000E44  6E20               	movwf	_type^0,c
  3203  000E46                     
  3204                           ;main.c: 440:         position = (Position){0, 0};
  3205  000E46  C017  F03D         	movff	submit@F4719,submit@4720
  3206  000E4A  C018  F03E         	movff	submit@F4719+1,submit@4720+1
  3207  000E4E  C03D  F01B         	movff	submit@4720,_position
  3208  000E52  C03E  F01C         	movff	submit@4720+1,_position+1
  3209  000E56                     
  3210                           ;main.c: 441:         rotation = 0;
  3211  000E56  0E00               	movlw	0
  3212  000E58  6E21               	movwf	_rotation^0,c
  3213  000E5A                     i2l239:
  3214  000E5A  0012               	return		;funcret
  3215  000E5C                     __end_of_submit:
  3216                           	callstack 0
  3217                           
  3218 ;; *************** function _not_intersects *****************
  3219 ;; Defined at:
  3220 ;;		line 200 in file "main.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  intersects      1   21[COMRAM] unsigned char 
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      unsigned char 
  3227 ;; Registers used:
  3228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3237 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3238 ;;Total ram usage:       22 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; This function calls:
  3241 ;;		Nothing
  3242 ;; This function is called by:
  3243 ;;		_submit
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           	psect	text14
  3248  000012                     __ptext14:
  3249                           	callstack 0
  3250  000012                     _not_intersects:
  3251                           	callstack 24
  3252  000012                     
  3253                           ;main.c: 201:     unsigned char intersects = 0;
  3254  000012  0E00               	movlw	0
  3255  000014  6E38               	movwf	not_intersects@intersects^0,c
  3256                           
  3257                           ;main.c: 202:     switch (type) {
  3258  000016  EF0C  F003         	goto	i2l1778
  3259  00001A                     i2l1658:
  3260                           
  3261                           ;main.c: 204:         {;main.c: 205:             intersects = intersects || grid[positio
      +                          n.x][position.y];
  3262  00001A  0E01               	movlw	1
  3263  00001C  6E27               	movwf	_not_intersects$119^0,c
  3264  00001E  501B               	movf	_position^0,w,c
  3265  000020  0D08               	mullw	8
  3266  000022  0E60               	movlw	low _grid
  3267  000024  6E23               	movwf	??_not_intersects^0,c
  3268  000026  0E00               	movlw	high _grid
  3269  000028  6E24               	movwf	(??_not_intersects+1)^0,c
  3270  00002A  50F3               	movf	243,w,c
  3271  00002C  2623               	addwf	??_not_intersects^0,f,c
  3272  00002E  50F4               	movf	244,w,c
  3273  000030  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3274  000032  501C               	movf	(_position+1)^0,w,c
  3275  000034  2423               	addwf	??_not_intersects^0,w,c
  3276  000036  6ED9               	movwf	fsr2l,c
  3277  000038  0E00               	movlw	0
  3278  00003A  2024               	addwfc	(??_not_intersects+1)^0,w,c
  3279  00003C  6EDA               	movwf	fsr2h,c
  3280  00003E  50DF               	movf	indf2,w,c
  3281  000040  A4D8               	btfss	status,2,c
  3282  000042  EF25  F000         	goto	i2u101_41
  3283  000046  EF27  F000         	goto	i2u101_40
  3284  00004A                     i2u101_41:
  3285  00004A  EF29  F000         	goto	i2l1664
  3286  00004E                     i2u101_40:
  3287  00004E  0E00               	movlw	0
  3288  000050  6E27               	movwf	_not_intersects$119^0,c
  3289  000052                     i2l1664:
  3290  000052  C027  F038         	movff	_not_intersects$119,not_intersects@intersects
  3291                           
  3292                           ;main.c: 206:             break;
  3293  000056  EF25  F003         	goto	i2l1780
  3294  00005A                     i2l1666:
  3295                           
  3296                           ;main.c: 209:         {;main.c: 210:             intersects = intersects || grid[positio
      +                          n.x][position.y];
  3297  00005A  0E01               	movlw	1
  3298  00005C  6E28               	movwf	_not_intersects$120^0,c
  3299  00005E  501B               	movf	_position^0,w,c
  3300  000060  0D08               	mullw	8
  3301  000062  0E60               	movlw	low _grid
  3302  000064  6E23               	movwf	??_not_intersects^0,c
  3303  000066  0E00               	movlw	high _grid
  3304  000068  6E24               	movwf	(??_not_intersects+1)^0,c
  3305  00006A  50F3               	movf	243,w,c
  3306  00006C  2623               	addwf	??_not_intersects^0,f,c
  3307  00006E  50F4               	movf	244,w,c
  3308  000070  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3309  000072  501C               	movf	(_position+1)^0,w,c
  3310  000074  2423               	addwf	??_not_intersects^0,w,c
  3311  000076  6ED9               	movwf	fsr2l,c
  3312  000078  0E00               	movlw	0
  3313  00007A  2024               	addwfc	(??_not_intersects+1)^0,w,c
  3314  00007C  6EDA               	movwf	fsr2h,c
  3315  00007E  50DF               	movf	indf2,w,c
  3316  000080  A4D8               	btfss	status,2,c
  3317  000082  EF45  F000         	goto	i2u102_41
  3318  000086  EF47  F000         	goto	i2u102_40
  3319  00008A                     i2u102_41:
  3320  00008A  EF49  F000         	goto	i2l1672
  3321  00008E                     i2u102_40:
  3322  00008E  0E00               	movlw	0
  3323  000090  6E28               	movwf	_not_intersects$120^0,c
  3324  000092                     i2l1672:
  3325  000092  C028  F038         	movff	_not_intersects$120,not_intersects@intersects
  3326                           
  3327                           ;main.c: 211:             intersects = intersects || grid[position.x + 1][position.y];
  3328  000096  0E01               	movlw	1
  3329  000098  6E29               	movwf	_not_intersects$121^0,c
  3330  00009A  5038               	movf	not_intersects@intersects^0,w,c
  3331  00009C  A4D8               	btfss	status,2,c
  3332  00009E  EF53  F000         	goto	i2u103_41
  3333  0000A2  EF55  F000         	goto	i2u103_40
  3334  0000A6                     i2u103_41:
  3335  0000A6  EF7D  F000         	goto	i2l1678
  3336  0000AA                     i2u103_40:
  3337  0000AA  501B               	movf	_position^0,w,c
  3338  0000AC  6E23               	movwf	??_not_intersects^0,c
  3339  0000AE  6A24               	clrf	(??_not_intersects+1)^0,c
  3340  0000B0  90D8               	bcf	status,0,c
  3341  0000B2  3623               	rlcf	??_not_intersects^0,f,c
  3342  0000B4  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3343  0000B6  90D8               	bcf	status,0,c
  3344  0000B8  3623               	rlcf	??_not_intersects^0,f,c
  3345  0000BA  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3346  0000BC  90D8               	bcf	status,0,c
  3347  0000BE  3623               	rlcf	??_not_intersects^0,f,c
  3348  0000C0  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3349  0000C2  0E60               	movlw	low _grid
  3350  0000C4  6E25               	movwf	(??_not_intersects+2)^0,c
  3351  0000C6  0E00               	movlw	high _grid
  3352  0000C8  6E26               	movwf	(??_not_intersects+3)^0,c
  3353  0000CA  0E08               	movlw	8
  3354  0000CC  2625               	addwf	(??_not_intersects+2)^0,f,c
  3355  0000CE  0E00               	movlw	0
  3356  0000D0  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3357  0000D2  5023               	movf	??_not_intersects^0,w,c
  3358  0000D4  2625               	addwf	(??_not_intersects+2)^0,f,c
  3359  0000D6  5024               	movf	(??_not_intersects+1)^0,w,c
  3360  0000D8  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3361  0000DA  501C               	movf	(_position+1)^0,w,c
  3362  0000DC  2425               	addwf	(??_not_intersects+2)^0,w,c
  3363  0000DE  6ED9               	movwf	fsr2l,c
  3364  0000E0  0E00               	movlw	0
  3365  0000E2  2026               	addwfc	(??_not_intersects+3)^0,w,c
  3366  0000E4  6EDA               	movwf	fsr2h,c
  3367  0000E6  50DF               	movf	indf2,w,c
  3368  0000E8  A4D8               	btfss	status,2,c
  3369  0000EA  EF79  F000         	goto	i2u104_41
  3370  0000EE  EF7B  F000         	goto	i2u104_40
  3371  0000F2                     i2u104_41:
  3372  0000F2  EF7D  F000         	goto	i2l1678
  3373  0000F6                     i2u104_40:
  3374  0000F6  0E00               	movlw	0
  3375  0000F8  6E29               	movwf	_not_intersects$121^0,c
  3376  0000FA                     i2l1678:
  3377  0000FA  C029  F038         	movff	_not_intersects$121,not_intersects@intersects
  3378                           
  3379                           ;main.c: 212:             intersects = intersects || grid[position.x][position.y + 1];
  3380  0000FE  0E01               	movlw	1
  3381  000100  6E2A               	movwf	_not_intersects$122^0,c
  3382  000102  5038               	movf	not_intersects@intersects^0,w,c
  3383  000104  A4D8               	btfss	status,2,c
  3384  000106  EF87  F000         	goto	i2u105_41
  3385  00010A  EF89  F000         	goto	i2u105_40
  3386  00010E                     i2u105_41:
  3387  00010E  EFA7  F000         	goto	i2l1684
  3388  000112                     i2u105_40:
  3389  000112  501B               	movf	_position^0,w,c
  3390  000114  0D08               	mullw	8
  3391  000116  0E60               	movlw	low _grid
  3392  000118  6E23               	movwf	??_not_intersects^0,c
  3393  00011A  0E00               	movlw	high _grid
  3394  00011C  6E24               	movwf	(??_not_intersects+1)^0,c
  3395  00011E  0E01               	movlw	1
  3396  000120  2623               	addwf	??_not_intersects^0,f,c
  3397  000122  0E00               	movlw	0
  3398  000124  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3399  000126  50F3               	movf	243,w,c
  3400  000128  2623               	addwf	??_not_intersects^0,f,c
  3401  00012A  50F4               	movf	244,w,c
  3402  00012C  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3403  00012E  501C               	movf	(_position+1)^0,w,c
  3404  000130  2423               	addwf	??_not_intersects^0,w,c
  3405  000132  6ED9               	movwf	fsr2l,c
  3406  000134  0E00               	movlw	0
  3407  000136  2024               	addwfc	(??_not_intersects+1)^0,w,c
  3408  000138  6EDA               	movwf	fsr2h,c
  3409  00013A  50DF               	movf	indf2,w,c
  3410  00013C  A4D8               	btfss	status,2,c
  3411  00013E  EFA3  F000         	goto	i2u106_41
  3412  000142  EFA5  F000         	goto	i2u106_40
  3413  000146                     i2u106_41:
  3414  000146  EFA7  F000         	goto	i2l1684
  3415  00014A                     i2u106_40:
  3416  00014A  0E00               	movlw	0
  3417  00014C  6E2A               	movwf	_not_intersects$122^0,c
  3418  00014E                     i2l1684:
  3419  00014E  C02A  F038         	movff	_not_intersects$122,not_intersects@intersects
  3420                           
  3421                           ;main.c: 213:             intersects = intersects || grid[position.x + 1][position.y + 1
      +                          ];
  3422  000152  0E01               	movlw	1
  3423  000154  6E2B               	movwf	_not_intersects$123^0,c
  3424  000156  5038               	movf	not_intersects@intersects^0,w,c
  3425  000158  A4D8               	btfss	status,2,c
  3426  00015A  EFB1  F000         	goto	i2u107_41
  3427  00015E  EFB3  F000         	goto	i2u107_40
  3428  000162                     i2u107_41:
  3429  000162  EFDB  F000         	goto	i2l1690
  3430  000166                     i2u107_40:
  3431  000166  501B               	movf	_position^0,w,c
  3432  000168  6E23               	movwf	??_not_intersects^0,c
  3433  00016A  6A24               	clrf	(??_not_intersects+1)^0,c
  3434  00016C  90D8               	bcf	status,0,c
  3435  00016E  3623               	rlcf	??_not_intersects^0,f,c
  3436  000170  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3437  000172  90D8               	bcf	status,0,c
  3438  000174  3623               	rlcf	??_not_intersects^0,f,c
  3439  000176  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3440  000178  90D8               	bcf	status,0,c
  3441  00017A  3623               	rlcf	??_not_intersects^0,f,c
  3442  00017C  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3443  00017E  0E60               	movlw	low _grid
  3444  000180  6E25               	movwf	(??_not_intersects+2)^0,c
  3445  000182  0E00               	movlw	high _grid
  3446  000184  6E26               	movwf	(??_not_intersects+3)^0,c
  3447  000186  0E09               	movlw	9
  3448  000188  2625               	addwf	(??_not_intersects+2)^0,f,c
  3449  00018A  0E00               	movlw	0
  3450  00018C  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3451  00018E  501C               	movf	(_position+1)^0,w,c
  3452  000190  2625               	addwf	(??_not_intersects+2)^0,f,c
  3453  000192  0E00               	movlw	0
  3454  000194  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3455  000196  5023               	movf	??_not_intersects^0,w,c
  3456  000198  2425               	addwf	(??_not_intersects+2)^0,w,c
  3457  00019A  6ED9               	movwf	fsr2l,c
  3458  00019C  5024               	movf	(??_not_intersects+1)^0,w,c
  3459  00019E  2026               	addwfc	(??_not_intersects+3)^0,w,c
  3460  0001A0  6EDA               	movwf	fsr2h,c
  3461  0001A2  50DF               	movf	indf2,w,c
  3462  0001A4  A4D8               	btfss	status,2,c
  3463  0001A6  EFD7  F000         	goto	i2u108_41
  3464  0001AA  EFD9  F000         	goto	i2u108_40
  3465  0001AE                     i2u108_41:
  3466  0001AE  EFDB  F000         	goto	i2l1690
  3467  0001B2                     i2u108_40:
  3468  0001B2  0E00               	movlw	0
  3469  0001B4  6E2B               	movwf	_not_intersects$123^0,c
  3470  0001B6                     i2l1690:
  3471  0001B6  C02B  F038         	movff	_not_intersects$123,not_intersects@intersects
  3472                           
  3473                           ;main.c: 214:             break;
  3474  0001BA  EF25  F003         	goto	i2l1780
  3475  0001BE                     i2l1692:
  3476                           
  3477                           ;main.c: 220:                 {;main.c: 221:                     intersects = intersects
      +                           || grid[position.x][position.y];
  3478  0001BE  0E01               	movlw	1
  3479  0001C0  6E2C               	movwf	_not_intersects$124^0,c
  3480  0001C2  501B               	movf	_position^0,w,c
  3481  0001C4  0D08               	mullw	8
  3482  0001C6  0E60               	movlw	low _grid
  3483  0001C8  6E23               	movwf	??_not_intersects^0,c
  3484  0001CA  0E00               	movlw	high _grid
  3485  0001CC  6E24               	movwf	(??_not_intersects+1)^0,c
  3486  0001CE  50F3               	movf	243,w,c
  3487  0001D0  2623               	addwf	??_not_intersects^0,f,c
  3488  0001D2  50F4               	movf	244,w,c
  3489  0001D4  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3490  0001D6  501C               	movf	(_position+1)^0,w,c
  3491  0001D8  2423               	addwf	??_not_intersects^0,w,c
  3492  0001DA  6ED9               	movwf	fsr2l,c
  3493  0001DC  0E00               	movlw	0
  3494  0001DE  2024               	addwfc	(??_not_intersects+1)^0,w,c
  3495  0001E0  6EDA               	movwf	fsr2h,c
  3496  0001E2  50DF               	movf	indf2,w,c
  3497  0001E4  A4D8               	btfss	status,2,c
  3498  0001E6  EFF7  F000         	goto	i2u109_41
  3499  0001EA  EFF9  F000         	goto	i2u109_40
  3500  0001EE                     i2u109_41:
  3501  0001EE  EFFB  F000         	goto	i2l1698
  3502  0001F2                     i2u109_40:
  3503  0001F2  0E00               	movlw	0
  3504  0001F4  6E2C               	movwf	_not_intersects$124^0,c
  3505  0001F6                     i2l1698:
  3506  0001F6  C02C  F038         	movff	_not_intersects$124,not_intersects@intersects
  3507                           
  3508                           ;main.c: 222:                     intersects = intersects || grid[position.x + 1][positi
      +                          on.y];
  3509  0001FA  0E01               	movlw	1
  3510  0001FC  6E2D               	movwf	_not_intersects$125^0,c
  3511  0001FE  5038               	movf	not_intersects@intersects^0,w,c
  3512  000200  A4D8               	btfss	status,2,c
  3513  000202  EF05  F001         	goto	i2u110_41
  3514  000206  EF07  F001         	goto	i2u110_40
  3515  00020A                     i2u110_41:
  3516  00020A  EF2F  F001         	goto	i2l1704
  3517  00020E                     i2u110_40:
  3518  00020E  501B               	movf	_position^0,w,c
  3519  000210  6E23               	movwf	??_not_intersects^0,c
  3520  000212  6A24               	clrf	(??_not_intersects+1)^0,c
  3521  000214  90D8               	bcf	status,0,c
  3522  000216  3623               	rlcf	??_not_intersects^0,f,c
  3523  000218  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3524  00021A  90D8               	bcf	status,0,c
  3525  00021C  3623               	rlcf	??_not_intersects^0,f,c
  3526  00021E  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3527  000220  90D8               	bcf	status,0,c
  3528  000222  3623               	rlcf	??_not_intersects^0,f,c
  3529  000224  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3530  000226  0E60               	movlw	low _grid
  3531  000228  6E25               	movwf	(??_not_intersects+2)^0,c
  3532  00022A  0E00               	movlw	high _grid
  3533  00022C  6E26               	movwf	(??_not_intersects+3)^0,c
  3534  00022E  0E08               	movlw	8
  3535  000230  2625               	addwf	(??_not_intersects+2)^0,f,c
  3536  000232  0E00               	movlw	0
  3537  000234  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3538  000236  5023               	movf	??_not_intersects^0,w,c
  3539  000238  2625               	addwf	(??_not_intersects+2)^0,f,c
  3540  00023A  5024               	movf	(??_not_intersects+1)^0,w,c
  3541  00023C  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3542  00023E  501C               	movf	(_position+1)^0,w,c
  3543  000240  2425               	addwf	(??_not_intersects+2)^0,w,c
  3544  000242  6ED9               	movwf	fsr2l,c
  3545  000244  0E00               	movlw	0
  3546  000246  2026               	addwfc	(??_not_intersects+3)^0,w,c
  3547  000248  6EDA               	movwf	fsr2h,c
  3548  00024A  50DF               	movf	indf2,w,c
  3549  00024C  A4D8               	btfss	status,2,c
  3550  00024E  EF2B  F001         	goto	i2u111_41
  3551  000252  EF2D  F001         	goto	i2u111_40
  3552  000256                     i2u111_41:
  3553  000256  EF2F  F001         	goto	i2l1704
  3554  00025A                     i2u111_40:
  3555  00025A  0E00               	movlw	0
  3556  00025C  6E2D               	movwf	_not_intersects$125^0,c
  3557  00025E                     i2l1704:
  3558  00025E  C02D  F038         	movff	_not_intersects$125,not_intersects@intersects
  3559                           
  3560                           ;main.c: 223:                     intersects = intersects || grid[position.x + 1][positi
      +                          on.y + 1];
  3561  000262  0E01               	movlw	1
  3562  000264  6E2E               	movwf	_not_intersects$126^0,c
  3563  000266  5038               	movf	not_intersects@intersects^0,w,c
  3564  000268  A4D8               	btfss	status,2,c
  3565  00026A  EF39  F001         	goto	i2u112_41
  3566  00026E  EF3B  F001         	goto	i2u112_40
  3567  000272                     i2u112_41:
  3568  000272  EF63  F001         	goto	i2l1710
  3569  000276                     i2u112_40:
  3570  000276  501B               	movf	_position^0,w,c
  3571  000278  6E23               	movwf	??_not_intersects^0,c
  3572  00027A  6A24               	clrf	(??_not_intersects+1)^0,c
  3573  00027C  90D8               	bcf	status,0,c
  3574  00027E  3623               	rlcf	??_not_intersects^0,f,c
  3575  000280  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3576  000282  90D8               	bcf	status,0,c
  3577  000284  3623               	rlcf	??_not_intersects^0,f,c
  3578  000286  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3579  000288  90D8               	bcf	status,0,c
  3580  00028A  3623               	rlcf	??_not_intersects^0,f,c
  3581  00028C  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3582  00028E  0E60               	movlw	low _grid
  3583  000290  6E25               	movwf	(??_not_intersects+2)^0,c
  3584  000292  0E00               	movlw	high _grid
  3585  000294  6E26               	movwf	(??_not_intersects+3)^0,c
  3586  000296  0E09               	movlw	9
  3587  000298  2625               	addwf	(??_not_intersects+2)^0,f,c
  3588  00029A  0E00               	movlw	0
  3589  00029C  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3590  00029E  501C               	movf	(_position+1)^0,w,c
  3591  0002A0  2625               	addwf	(??_not_intersects+2)^0,f,c
  3592  0002A2  0E00               	movlw	0
  3593  0002A4  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3594  0002A6  5023               	movf	??_not_intersects^0,w,c
  3595  0002A8  2425               	addwf	(??_not_intersects+2)^0,w,c
  3596  0002AA  6ED9               	movwf	fsr2l,c
  3597  0002AC  5024               	movf	(??_not_intersects+1)^0,w,c
  3598  0002AE  2026               	addwfc	(??_not_intersects+3)^0,w,c
  3599  0002B0  6EDA               	movwf	fsr2h,c
  3600  0002B2  50DF               	movf	indf2,w,c
  3601  0002B4  A4D8               	btfss	status,2,c
  3602  0002B6  EF5F  F001         	goto	i2u113_41
  3603  0002BA  EF61  F001         	goto	i2u113_40
  3604  0002BE                     i2u113_41:
  3605  0002BE  EF63  F001         	goto	i2l1710
  3606  0002C2                     i2u113_40:
  3607  0002C2  0E00               	movlw	0
  3608  0002C4  6E2E               	movwf	_not_intersects$126^0,c
  3609  0002C6                     i2l1710:
  3610  0002C6  C02E  F038         	movff	_not_intersects$126,not_intersects@intersects
  3611                           
  3612                           ;main.c: 224:                     break;
  3613  0002CA  EF25  F003         	goto	i2l1780
  3614  0002CE                     i2l1712:
  3615                           
  3616                           ;main.c: 227:                 {;main.c: 228:                     intersects = intersects
      +                           || grid[position.x + 1][position.y];
  3617  0002CE  0E01               	movlw	1
  3618  0002D0  6E2F               	movwf	_not_intersects$127^0,c
  3619  0002D2  501B               	movf	_position^0,w,c
  3620  0002D4  6E23               	movwf	??_not_intersects^0,c
  3621  0002D6  6A24               	clrf	(??_not_intersects+1)^0,c
  3622  0002D8  90D8               	bcf	status,0,c
  3623  0002DA  3623               	rlcf	??_not_intersects^0,f,c
  3624  0002DC  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3625  0002DE  90D8               	bcf	status,0,c
  3626  0002E0  3623               	rlcf	??_not_intersects^0,f,c
  3627  0002E2  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3628  0002E4  90D8               	bcf	status,0,c
  3629  0002E6  3623               	rlcf	??_not_intersects^0,f,c
  3630  0002E8  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3631  0002EA  0E60               	movlw	low _grid
  3632  0002EC  6E25               	movwf	(??_not_intersects+2)^0,c
  3633  0002EE  0E00               	movlw	high _grid
  3634  0002F0  6E26               	movwf	(??_not_intersects+3)^0,c
  3635  0002F2  0E08               	movlw	8
  3636  0002F4  2625               	addwf	(??_not_intersects+2)^0,f,c
  3637  0002F6  0E00               	movlw	0
  3638  0002F8  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3639  0002FA  5023               	movf	??_not_intersects^0,w,c
  3640  0002FC  2625               	addwf	(??_not_intersects+2)^0,f,c
  3641  0002FE  5024               	movf	(??_not_intersects+1)^0,w,c
  3642  000300  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3643  000302  501C               	movf	(_position+1)^0,w,c
  3644  000304  2425               	addwf	(??_not_intersects+2)^0,w,c
  3645  000306  6ED9               	movwf	fsr2l,c
  3646  000308  0E00               	movlw	0
  3647  00030A  2026               	addwfc	(??_not_intersects+3)^0,w,c
  3648  00030C  6EDA               	movwf	fsr2h,c
  3649  00030E  50DF               	movf	indf2,w,c
  3650  000310  A4D8               	btfss	status,2,c
  3651  000312  EF8D  F001         	goto	i2u114_41
  3652  000316  EF8F  F001         	goto	i2u114_40
  3653  00031A                     i2u114_41:
  3654  00031A  EF91  F001         	goto	i2l1718
  3655  00031E                     i2u114_40:
  3656  00031E  0E00               	movlw	0
  3657  000320  6E2F               	movwf	_not_intersects$127^0,c
  3658  000322                     i2l1718:
  3659  000322  C02F  F038         	movff	_not_intersects$127,not_intersects@intersects
  3660                           
  3661                           ;main.c: 229:                     intersects = intersects || grid[position.x][position.y
      +                           + 1];
  3662  000326  0E01               	movlw	1
  3663  000328  6E30               	movwf	_not_intersects$128^0,c
  3664  00032A  5038               	movf	not_intersects@intersects^0,w,c
  3665  00032C  A4D8               	btfss	status,2,c
  3666  00032E  EF9B  F001         	goto	i2u115_41
  3667  000332  EF9D  F001         	goto	i2u115_40
  3668  000336                     i2u115_41:
  3669  000336  EFBB  F001         	goto	i2l1724
  3670  00033A                     i2u115_40:
  3671  00033A  501B               	movf	_position^0,w,c
  3672  00033C  0D08               	mullw	8
  3673  00033E  0E60               	movlw	low _grid
  3674  000340  6E23               	movwf	??_not_intersects^0,c
  3675  000342  0E00               	movlw	high _grid
  3676  000344  6E24               	movwf	(??_not_intersects+1)^0,c
  3677  000346  0E01               	movlw	1
  3678  000348  2623               	addwf	??_not_intersects^0,f,c
  3679  00034A  0E00               	movlw	0
  3680  00034C  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3681  00034E  50F3               	movf	243,w,c
  3682  000350  2623               	addwf	??_not_intersects^0,f,c
  3683  000352  50F4               	movf	244,w,c
  3684  000354  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3685  000356  501C               	movf	(_position+1)^0,w,c
  3686  000358  2423               	addwf	??_not_intersects^0,w,c
  3687  00035A  6ED9               	movwf	fsr2l,c
  3688  00035C  0E00               	movlw	0
  3689  00035E  2024               	addwfc	(??_not_intersects+1)^0,w,c
  3690  000360  6EDA               	movwf	fsr2h,c
  3691  000362  50DF               	movf	indf2,w,c
  3692  000364  A4D8               	btfss	status,2,c
  3693  000366  EFB7  F001         	goto	i2u116_41
  3694  00036A  EFB9  F001         	goto	i2u116_40
  3695  00036E                     i2u116_41:
  3696  00036E  EFBB  F001         	goto	i2l1724
  3697  000372                     i2u116_40:
  3698  000372  0E00               	movlw	0
  3699  000374  6E30               	movwf	_not_intersects$128^0,c
  3700  000376                     i2l1724:
  3701  000376  C030  F038         	movff	_not_intersects$128,not_intersects@intersects
  3702                           
  3703                           ;main.c: 230:                     intersects = intersects || grid[position.x + 1][positi
      +                          on.y + 1];
  3704  00037A  0E01               	movlw	1
  3705  00037C  6E31               	movwf	_not_intersects$129^0,c
  3706  00037E  5038               	movf	not_intersects@intersects^0,w,c
  3707  000380  A4D8               	btfss	status,2,c
  3708  000382  EFC5  F001         	goto	i2u117_41
  3709  000386  EFC7  F001         	goto	i2u117_40
  3710  00038A                     i2u117_41:
  3711  00038A  EFEF  F001         	goto	i2l1730
  3712  00038E                     i2u117_40:
  3713  00038E  501B               	movf	_position^0,w,c
  3714  000390  6E23               	movwf	??_not_intersects^0,c
  3715  000392  6A24               	clrf	(??_not_intersects+1)^0,c
  3716  000394  90D8               	bcf	status,0,c
  3717  000396  3623               	rlcf	??_not_intersects^0,f,c
  3718  000398  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3719  00039A  90D8               	bcf	status,0,c
  3720  00039C  3623               	rlcf	??_not_intersects^0,f,c
  3721  00039E  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3722  0003A0  90D8               	bcf	status,0,c
  3723  0003A2  3623               	rlcf	??_not_intersects^0,f,c
  3724  0003A4  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3725  0003A6  0E60               	movlw	low _grid
  3726  0003A8  6E25               	movwf	(??_not_intersects+2)^0,c
  3727  0003AA  0E00               	movlw	high _grid
  3728  0003AC  6E26               	movwf	(??_not_intersects+3)^0,c
  3729  0003AE  0E09               	movlw	9
  3730  0003B0  2625               	addwf	(??_not_intersects+2)^0,f,c
  3731  0003B2  0E00               	movlw	0
  3732  0003B4  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3733  0003B6  501C               	movf	(_position+1)^0,w,c
  3734  0003B8  2625               	addwf	(??_not_intersects+2)^0,f,c
  3735  0003BA  0E00               	movlw	0
  3736  0003BC  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3737  0003BE  5023               	movf	??_not_intersects^0,w,c
  3738  0003C0  2425               	addwf	(??_not_intersects+2)^0,w,c
  3739  0003C2  6ED9               	movwf	fsr2l,c
  3740  0003C4  5024               	movf	(??_not_intersects+1)^0,w,c
  3741  0003C6  2026               	addwfc	(??_not_intersects+3)^0,w,c
  3742  0003C8  6EDA               	movwf	fsr2h,c
  3743  0003CA  50DF               	movf	indf2,w,c
  3744  0003CC  A4D8               	btfss	status,2,c
  3745  0003CE  EFEB  F001         	goto	i2u118_41
  3746  0003D2  EFED  F001         	goto	i2u118_40
  3747  0003D6                     i2u118_41:
  3748  0003D6  EFEF  F001         	goto	i2l1730
  3749  0003DA                     i2u118_40:
  3750  0003DA  0E00               	movlw	0
  3751  0003DC  6E31               	movwf	_not_intersects$129^0,c
  3752  0003DE                     i2l1730:
  3753  0003DE  C031  F038         	movff	_not_intersects$129,not_intersects@intersects
  3754                           
  3755                           ;main.c: 231:                     break;
  3756  0003E2  EF25  F003         	goto	i2l1780
  3757  0003E6                     i2l1732:
  3758                           
  3759                           ;main.c: 234:                 {;main.c: 235:                     intersects = intersects
      +                           || grid[position.x][position.y];
  3760  0003E6  0E01               	movlw	1
  3761  0003E8  6E32               	movwf	_not_intersects$130^0,c
  3762  0003EA  501B               	movf	_position^0,w,c
  3763  0003EC  0D08               	mullw	8
  3764  0003EE  0E60               	movlw	low _grid
  3765  0003F0  6E23               	movwf	??_not_intersects^0,c
  3766  0003F2  0E00               	movlw	high _grid
  3767  0003F4  6E24               	movwf	(??_not_intersects+1)^0,c
  3768  0003F6  50F3               	movf	243,w,c
  3769  0003F8  2623               	addwf	??_not_intersects^0,f,c
  3770  0003FA  50F4               	movf	244,w,c
  3771  0003FC  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3772  0003FE  501C               	movf	(_position+1)^0,w,c
  3773  000400  2423               	addwf	??_not_intersects^0,w,c
  3774  000402  6ED9               	movwf	fsr2l,c
  3775  000404  0E00               	movlw	0
  3776  000406  2024               	addwfc	(??_not_intersects+1)^0,w,c
  3777  000408  6EDA               	movwf	fsr2h,c
  3778  00040A  50DF               	movf	indf2,w,c
  3779  00040C  A4D8               	btfss	status,2,c
  3780  00040E  EF0B  F002         	goto	i2u119_41
  3781  000412  EF0D  F002         	goto	i2u119_40
  3782  000416                     i2u119_41:
  3783  000416  EF0F  F002         	goto	i2l1738
  3784  00041A                     i2u119_40:
  3785  00041A  0E00               	movlw	0
  3786  00041C  6E32               	movwf	_not_intersects$130^0,c
  3787  00041E                     i2l1738:
  3788  00041E  C032  F038         	movff	_not_intersects$130,not_intersects@intersects
  3789                           
  3790                           ;main.c: 236:                     intersects = intersects || grid[position.x][position.y
      +                           + 1];
  3791  000422  0E01               	movlw	1
  3792  000424  6E33               	movwf	_not_intersects$131^0,c
  3793  000426  5038               	movf	not_intersects@intersects^0,w,c
  3794  000428  A4D8               	btfss	status,2,c
  3795  00042A  EF19  F002         	goto	i2u120_41
  3796  00042E  EF1B  F002         	goto	i2u120_40
  3797  000432                     i2u120_41:
  3798  000432  EF39  F002         	goto	i2l1744
  3799  000436                     i2u120_40:
  3800  000436  501B               	movf	_position^0,w,c
  3801  000438  0D08               	mullw	8
  3802  00043A  0E60               	movlw	low _grid
  3803  00043C  6E23               	movwf	??_not_intersects^0,c
  3804  00043E  0E00               	movlw	high _grid
  3805  000440  6E24               	movwf	(??_not_intersects+1)^0,c
  3806  000442  0E01               	movlw	1
  3807  000444  2623               	addwf	??_not_intersects^0,f,c
  3808  000446  0E00               	movlw	0
  3809  000448  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3810  00044A  50F3               	movf	243,w,c
  3811  00044C  2623               	addwf	??_not_intersects^0,f,c
  3812  00044E  50F4               	movf	244,w,c
  3813  000450  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3814  000452  501C               	movf	(_position+1)^0,w,c
  3815  000454  2423               	addwf	??_not_intersects^0,w,c
  3816  000456  6ED9               	movwf	fsr2l,c
  3817  000458  0E00               	movlw	0
  3818  00045A  2024               	addwfc	(??_not_intersects+1)^0,w,c
  3819  00045C  6EDA               	movwf	fsr2h,c
  3820  00045E  50DF               	movf	indf2,w,c
  3821  000460  A4D8               	btfss	status,2,c
  3822  000462  EF35  F002         	goto	i2u121_41
  3823  000466  EF37  F002         	goto	i2u121_40
  3824  00046A                     i2u121_41:
  3825  00046A  EF39  F002         	goto	i2l1744
  3826  00046E                     i2u121_40:
  3827  00046E  0E00               	movlw	0
  3828  000470  6E33               	movwf	_not_intersects$131^0,c
  3829  000472                     i2l1744:
  3830  000472  C033  F038         	movff	_not_intersects$131,not_intersects@intersects
  3831                           
  3832                           ;main.c: 237:                     intersects = intersects || grid[position.x + 1][positi
      +                          on.y + 1];
  3833  000476  0E01               	movlw	1
  3834  000478  6E34               	movwf	_not_intersects$132^0,c
  3835  00047A  5038               	movf	not_intersects@intersects^0,w,c
  3836  00047C  A4D8               	btfss	status,2,c
  3837  00047E  EF43  F002         	goto	i2u122_41
  3838  000482  EF45  F002         	goto	i2u122_40
  3839  000486                     i2u122_41:
  3840  000486  EF6D  F002         	goto	i2l1750
  3841  00048A                     i2u122_40:
  3842  00048A  501B               	movf	_position^0,w,c
  3843  00048C  6E23               	movwf	??_not_intersects^0,c
  3844  00048E  6A24               	clrf	(??_not_intersects+1)^0,c
  3845  000490  90D8               	bcf	status,0,c
  3846  000492  3623               	rlcf	??_not_intersects^0,f,c
  3847  000494  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3848  000496  90D8               	bcf	status,0,c
  3849  000498  3623               	rlcf	??_not_intersects^0,f,c
  3850  00049A  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3851  00049C  90D8               	bcf	status,0,c
  3852  00049E  3623               	rlcf	??_not_intersects^0,f,c
  3853  0004A0  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3854  0004A2  0E60               	movlw	low _grid
  3855  0004A4  6E25               	movwf	(??_not_intersects+2)^0,c
  3856  0004A6  0E00               	movlw	high _grid
  3857  0004A8  6E26               	movwf	(??_not_intersects+3)^0,c
  3858  0004AA  0E09               	movlw	9
  3859  0004AC  2625               	addwf	(??_not_intersects+2)^0,f,c
  3860  0004AE  0E00               	movlw	0
  3861  0004B0  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3862  0004B2  501C               	movf	(_position+1)^0,w,c
  3863  0004B4  2625               	addwf	(??_not_intersects+2)^0,f,c
  3864  0004B6  0E00               	movlw	0
  3865  0004B8  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3866  0004BA  5023               	movf	??_not_intersects^0,w,c
  3867  0004BC  2425               	addwf	(??_not_intersects+2)^0,w,c
  3868  0004BE  6ED9               	movwf	fsr2l,c
  3869  0004C0  5024               	movf	(??_not_intersects+1)^0,w,c
  3870  0004C2  2026               	addwfc	(??_not_intersects+3)^0,w,c
  3871  0004C4  6EDA               	movwf	fsr2h,c
  3872  0004C6  50DF               	movf	indf2,w,c
  3873  0004C8  A4D8               	btfss	status,2,c
  3874  0004CA  EF69  F002         	goto	i2u123_41
  3875  0004CE  EF6B  F002         	goto	i2u123_40
  3876  0004D2                     i2u123_41:
  3877  0004D2  EF6D  F002         	goto	i2l1750
  3878  0004D6                     i2u123_40:
  3879  0004D6  0E00               	movlw	0
  3880  0004D8  6E34               	movwf	_not_intersects$132^0,c
  3881  0004DA                     i2l1750:
  3882  0004DA  C034  F038         	movff	_not_intersects$132,not_intersects@intersects
  3883                           
  3884                           ;main.c: 238:                     break;
  3885  0004DE  EF25  F003         	goto	i2l1780
  3886  0004E2                     i2l1752:
  3887                           
  3888                           ;main.c: 241:                 {;main.c: 242:                     intersects = intersects
      +                           || grid[position.x][position.y];
  3889  0004E2  0E01               	movlw	1
  3890  0004E4  6E35               	movwf	_not_intersects$133^0,c
  3891  0004E6  501B               	movf	_position^0,w,c
  3892  0004E8  0D08               	mullw	8
  3893  0004EA  0E60               	movlw	low _grid
  3894  0004EC  6E23               	movwf	??_not_intersects^0,c
  3895  0004EE  0E00               	movlw	high _grid
  3896  0004F0  6E24               	movwf	(??_not_intersects+1)^0,c
  3897  0004F2  50F3               	movf	243,w,c
  3898  0004F4  2623               	addwf	??_not_intersects^0,f,c
  3899  0004F6  50F4               	movf	244,w,c
  3900  0004F8  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3901  0004FA  501C               	movf	(_position+1)^0,w,c
  3902  0004FC  2423               	addwf	??_not_intersects^0,w,c
  3903  0004FE  6ED9               	movwf	fsr2l,c
  3904  000500  0E00               	movlw	0
  3905  000502  2024               	addwfc	(??_not_intersects+1)^0,w,c
  3906  000504  6EDA               	movwf	fsr2h,c
  3907  000506  50DF               	movf	indf2,w,c
  3908  000508  A4D8               	btfss	status,2,c
  3909  00050A  EF89  F002         	goto	i2u124_41
  3910  00050E  EF8B  F002         	goto	i2u124_40
  3911  000512                     i2u124_41:
  3912  000512  EF8D  F002         	goto	i2l1758
  3913  000516                     i2u124_40:
  3914  000516  0E00               	movlw	0
  3915  000518  6E35               	movwf	_not_intersects$133^0,c
  3916  00051A                     i2l1758:
  3917  00051A  C035  F038         	movff	_not_intersects$133,not_intersects@intersects
  3918                           
  3919                           ;main.c: 243:                     intersects = intersects || grid[position.x + 1][positi
      +                          on.y];
  3920  00051E  0E01               	movlw	1
  3921  000520  6E36               	movwf	_not_intersects$134^0,c
  3922  000522  5038               	movf	not_intersects@intersects^0,w,c
  3923  000524  A4D8               	btfss	status,2,c
  3924  000526  EF97  F002         	goto	i2u125_41
  3925  00052A  EF99  F002         	goto	i2u125_40
  3926  00052E                     i2u125_41:
  3927  00052E  EFC1  F002         	goto	i2l1764
  3928  000532                     i2u125_40:
  3929  000532  501B               	movf	_position^0,w,c
  3930  000534  6E23               	movwf	??_not_intersects^0,c
  3931  000536  6A24               	clrf	(??_not_intersects+1)^0,c
  3932  000538  90D8               	bcf	status,0,c
  3933  00053A  3623               	rlcf	??_not_intersects^0,f,c
  3934  00053C  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3935  00053E  90D8               	bcf	status,0,c
  3936  000540  3623               	rlcf	??_not_intersects^0,f,c
  3937  000542  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3938  000544  90D8               	bcf	status,0,c
  3939  000546  3623               	rlcf	??_not_intersects^0,f,c
  3940  000548  3624               	rlcf	(??_not_intersects+1)^0,f,c
  3941  00054A  0E60               	movlw	low _grid
  3942  00054C  6E25               	movwf	(??_not_intersects+2)^0,c
  3943  00054E  0E00               	movlw	high _grid
  3944  000550  6E26               	movwf	(??_not_intersects+3)^0,c
  3945  000552  0E08               	movlw	8
  3946  000554  2625               	addwf	(??_not_intersects+2)^0,f,c
  3947  000556  0E00               	movlw	0
  3948  000558  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3949  00055A  5023               	movf	??_not_intersects^0,w,c
  3950  00055C  2625               	addwf	(??_not_intersects+2)^0,f,c
  3951  00055E  5024               	movf	(??_not_intersects+1)^0,w,c
  3952  000560  2226               	addwfc	(??_not_intersects+3)^0,f,c
  3953  000562  501C               	movf	(_position+1)^0,w,c
  3954  000564  2425               	addwf	(??_not_intersects+2)^0,w,c
  3955  000566  6ED9               	movwf	fsr2l,c
  3956  000568  0E00               	movlw	0
  3957  00056A  2026               	addwfc	(??_not_intersects+3)^0,w,c
  3958  00056C  6EDA               	movwf	fsr2h,c
  3959  00056E  50DF               	movf	indf2,w,c
  3960  000570  A4D8               	btfss	status,2,c
  3961  000572  EFBD  F002         	goto	i2u126_41
  3962  000576  EFBF  F002         	goto	i2u126_40
  3963  00057A                     i2u126_41:
  3964  00057A  EFC1  F002         	goto	i2l1764
  3965  00057E                     i2u126_40:
  3966  00057E  0E00               	movlw	0
  3967  000580  6E36               	movwf	_not_intersects$134^0,c
  3968  000582                     i2l1764:
  3969  000582  C036  F038         	movff	_not_intersects$134,not_intersects@intersects
  3970                           
  3971                           ;main.c: 244:                     intersects = intersects || grid[position.x][position.y
      +                           + 1];
  3972  000586  0E01               	movlw	1
  3973  000588  6E37               	movwf	_not_intersects$135^0,c
  3974  00058A  5038               	movf	not_intersects@intersects^0,w,c
  3975  00058C  A4D8               	btfss	status,2,c
  3976  00058E  EFCB  F002         	goto	i2u127_41
  3977  000592  EFCD  F002         	goto	i2u127_40
  3978  000596                     i2u127_41:
  3979  000596  EFEB  F002         	goto	i2l1770
  3980  00059A                     i2u127_40:
  3981  00059A  501B               	movf	_position^0,w,c
  3982  00059C  0D08               	mullw	8
  3983  00059E  0E60               	movlw	low _grid
  3984  0005A0  6E23               	movwf	??_not_intersects^0,c
  3985  0005A2  0E00               	movlw	high _grid
  3986  0005A4  6E24               	movwf	(??_not_intersects+1)^0,c
  3987  0005A6  0E01               	movlw	1
  3988  0005A8  2623               	addwf	??_not_intersects^0,f,c
  3989  0005AA  0E00               	movlw	0
  3990  0005AC  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3991  0005AE  50F3               	movf	243,w,c
  3992  0005B0  2623               	addwf	??_not_intersects^0,f,c
  3993  0005B2  50F4               	movf	244,w,c
  3994  0005B4  2224               	addwfc	(??_not_intersects+1)^0,f,c
  3995  0005B6  501C               	movf	(_position+1)^0,w,c
  3996  0005B8  2423               	addwf	??_not_intersects^0,w,c
  3997  0005BA  6ED9               	movwf	fsr2l,c
  3998  0005BC  0E00               	movlw	0
  3999  0005BE  2024               	addwfc	(??_not_intersects+1)^0,w,c
  4000  0005C0  6EDA               	movwf	fsr2h,c
  4001  0005C2  50DF               	movf	indf2,w,c
  4002  0005C4  A4D8               	btfss	status,2,c
  4003  0005C6  EFE7  F002         	goto	i2u128_41
  4004  0005CA  EFE9  F002         	goto	i2u128_40
  4005  0005CE                     i2u128_41:
  4006  0005CE  EFEB  F002         	goto	i2l1770
  4007  0005D2                     i2u128_40:
  4008  0005D2  0E00               	movlw	0
  4009  0005D4  6E37               	movwf	_not_intersects$135^0,c
  4010  0005D6                     i2l1770:
  4011  0005D6  C037  F038         	movff	_not_intersects$135,not_intersects@intersects
  4012                           
  4013                           ;main.c: 245:                     break;
  4014  0005DA  EF25  F003         	goto	i2l1780
  4015  0005DE                     i2l1774:
  4016  0005DE  5021               	movf	_rotation^0,w,c
  4017  0005E0  6E23               	movwf	??_not_intersects^0,c
  4018  0005E2  6A24               	clrf	(??_not_intersects+1)^0,c
  4019                           
  4020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4021                           ; Switch size 1, requested type "simple"
  4022                           ; Number of cases is 1, Range of values is 0 to 0
  4023                           ; switch strategies available:
  4024                           ; Name         Instructions Cycles
  4025                           ; simple_byte            4     3 (average)
  4026                           ;	Chosen strategy is simple_byte
  4027  0005E4  5024               	movf	(??_not_intersects+1)^0,w,c
  4028  0005E6  0A00               	xorlw	0	; case 0
  4029  0005E8  B4D8               	btfsc	status,2,c
  4030  0005EA  EFF9  F002         	goto	i2l2908
  4031  0005EE  EF25  F003         	goto	i2l1780
  4032  0005F2                     i2l2908:
  4033                           
  4034                           ; Switch size 1, requested type "simple"
  4035                           ; Number of cases is 4, Range of values is 0 to 3
  4036                           ; switch strategies available:
  4037                           ; Name         Instructions Cycles
  4038                           ; simple_byte           13     7 (average)
  4039                           ;	Chosen strategy is simple_byte
  4040  0005F2  5023               	movf	??_not_intersects^0,w,c
  4041  0005F4  0A00               	xorlw	0	; case 0
  4042  0005F6  B4D8               	btfsc	status,2,c
  4043  0005F8  EFDF  F000         	goto	i2l1692
  4044  0005FC  0A01               	xorlw	1	; case 1
  4045  0005FE  B4D8               	btfsc	status,2,c
  4046  000600  EF67  F001         	goto	i2l1712
  4047  000604  0A03               	xorlw	3	; case 2
  4048  000606  B4D8               	btfsc	status,2,c
  4049  000608  EFF3  F001         	goto	i2l1732
  4050  00060C  0A01               	xorlw	1	; case 3
  4051  00060E  B4D8               	btfsc	status,2,c
  4052  000610  EF71  F002         	goto	i2l1752
  4053  000614  EF25  F003         	goto	i2l1780
  4054  000618                     i2l1778:
  4055  000618  5020               	movf	_type^0,w,c
  4056  00061A  6E23               	movwf	??_not_intersects^0,c
  4057  00061C  6A24               	clrf	(??_not_intersects+1)^0,c
  4058                           
  4059                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4060                           ; Switch size 1, requested type "simple"
  4061                           ; Number of cases is 1, Range of values is 0 to 0
  4062                           ; switch strategies available:
  4063                           ; Name         Instructions Cycles
  4064                           ; simple_byte            4     3 (average)
  4065                           ;	Chosen strategy is simple_byte
  4066  00061E  5024               	movf	(??_not_intersects+1)^0,w,c
  4067  000620  0A00               	xorlw	0	; case 0
  4068  000622  B4D8               	btfsc	status,2,c
  4069  000624  EF16  F003         	goto	i2l2910
  4070  000628  EF25  F003         	goto	i2l1780
  4071  00062C                     i2l2910:
  4072                           
  4073                           ; Switch size 1, requested type "simple"
  4074                           ; Number of cases is 3, Range of values is 0 to 2
  4075                           ; switch strategies available:
  4076                           ; Name         Instructions Cycles
  4077                           ; simple_byte           10     6 (average)
  4078                           ;	Chosen strategy is simple_byte
  4079  00062C  5023               	movf	??_not_intersects^0,w,c
  4080  00062E  0A00               	xorlw	0	; case 0
  4081  000630  B4D8               	btfsc	status,2,c
  4082  000632  EF0D  F000         	goto	i2l1658
  4083  000636  0A01               	xorlw	1	; case 1
  4084  000638  B4D8               	btfsc	status,2,c
  4085  00063A  EF2D  F000         	goto	i2l1666
  4086  00063E  0A03               	xorlw	3	; case 2
  4087  000640  B4D8               	btfsc	status,2,c
  4088  000642  EFEF  F002         	goto	i2l1774
  4089  000646  EF25  F003         	goto	i2l1780
  4090  00064A                     i2l1780:
  4091                           
  4092                           ;main.c: 252:     return !intersects;
  4093  00064A  5038               	movf	not_intersects@intersects^0,w,c
  4094  00064C  B4D8               	btfsc	status,2,c
  4095  00064E  EF2B  F003         	goto	i2u129_41
  4096  000652  EF2E  F003         	goto	i2u129_40
  4097  000656                     i2u129_41:
  4098  000656  0E01               	movlw	1
  4099  000658  EF2F  F003         	goto	i2u130_40
  4100  00065C                     i2u129_40:
  4101  00065C  0E00               	movlw	0
  4102  00065E                     i2u130_40:
  4103  00065E  0012               	return		;funcret
  4104  000660                     __end_of_not_intersects:
  4105                           	callstack 0
  4106                           
  4107 ;; *************** function ___lwmod *****************
  4108 ;; Defined at:
  4109 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/lwmod.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;  dividend        2    0[COMRAM] unsigned int 
  4112 ;;  divisor         2    2[COMRAM] unsigned int 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;  counter         1    4[COMRAM] unsigned char 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  2    0[COMRAM] unsigned int 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4124 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;Total ram usage:        5 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; This function calls:
  4131 ;;		Nothing
  4132 ;; This function is called by:
  4133 ;;		_submit
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           	psect	text15
  4138  001418                     __ptext15:
  4139                           	callstack 0
  4140  001418                     ___lwmod:
  4141                           	callstack 24
  4142  001418  5025               	movf	___lwmod@divisor^0,w,c
  4143  00141A  1026               	iorwf	(___lwmod@divisor+1)^0,w,c
  4144  00141C  B4D8               	btfsc	status,2,c
  4145  00141E  EF13  F00A         	goto	i2u143_41
  4146  001422  EF15  F00A         	goto	i2u143_40
  4147  001426                     i2u143_41:
  4148  001426  EF39  F00A         	goto	i2l794
  4149  00142A                     i2u143_40:
  4150  00142A  0E01               	movlw	1
  4151  00142C  6E27               	movwf	___lwmod@counter^0,c
  4152  00142E  EF1D  F00A         	goto	i2l1854
  4153  001432                     i2l1852:
  4154  001432  90D8               	bcf	status,0,c
  4155  001434  3625               	rlcf	___lwmod@divisor^0,f,c
  4156  001436  3626               	rlcf	(___lwmod@divisor+1)^0,f,c
  4157  001438  2A27               	incf	___lwmod@counter^0,f,c
  4158  00143A                     i2l1854:
  4159  00143A  AE26               	btfss	(___lwmod@divisor+1)^0,7,c
  4160  00143C  EF22  F00A         	goto	i2u144_41
  4161  001440  EF24  F00A         	goto	i2u144_40
  4162  001444                     i2u144_41:
  4163  001444  EF19  F00A         	goto	i2l1852
  4164  001448                     i2u144_40:
  4165  001448                     i2l1856:
  4166  001448  5025               	movf	___lwmod@divisor^0,w,c
  4167  00144A  5C23               	subwf	___lwmod@dividend^0,w,c
  4168  00144C  5026               	movf	(___lwmod@divisor+1)^0,w,c
  4169  00144E  5824               	subwfb	(___lwmod@dividend+1)^0,w,c
  4170  001450  A0D8               	btfss	status,0,c
  4171  001452  EF2D  F00A         	goto	i2u145_41
  4172  001456  EF2F  F00A         	goto	i2u145_40
  4173  00145A                     i2u145_41:
  4174  00145A  EF33  F00A         	goto	i2l1860
  4175  00145E                     i2u145_40:
  4176  00145E  5025               	movf	___lwmod@divisor^0,w,c
  4177  001460  5E23               	subwf	___lwmod@dividend^0,f,c
  4178  001462  5026               	movf	(___lwmod@divisor+1)^0,w,c
  4179  001464  5A24               	subwfb	(___lwmod@dividend+1)^0,f,c
  4180  001466                     i2l1860:
  4181  001466  90D8               	bcf	status,0,c
  4182  001468  3226               	rrcf	(___lwmod@divisor+1)^0,f,c
  4183  00146A  3225               	rrcf	___lwmod@divisor^0,f,c
  4184  00146C  2E27               	decfsz	___lwmod@counter^0,f,c
  4185  00146E  EF24  F00A         	goto	i2l1856
  4186  001472                     i2l794:
  4187  001472  C023  F023         	movff	___lwmod@dividend,?___lwmod
  4188  001476  C024  F024         	movff	___lwmod@dividend+1,?___lwmod+1
  4189  00147A  0012               	return		;funcret
  4190  00147C                     __end_of___lwmod:
  4191                           	callstack 0
  4192                           
  4193 ;; *************** function _rotate *****************
  4194 ;; Defined at:
  4195 ;;		line 383 in file "main.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;		None
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;		None
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      void 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;Total ram usage:        0 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; This function calls:
  4216 ;;		Nothing
  4217 ;; This function is called by:
  4218 ;;		_HandleInterrupt
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text16
  4223  001634                     __ptext16:
  4224                           	callstack 0
  4225  001634                     _rotate:
  4226                           	callstack 25
  4227  001634                     
  4228                           ;main.c: 384:     rotation = (rotation + 1) % 4;
  4229  001634  2821               	incf	_rotation^0,w,c
  4230  001636  0B03               	andlw	3
  4231  001638  6E21               	movwf	_rotation^0,c
  4232  00163A  0012               	return		;funcret
  4233  00163C                     __end_of_rotate:
  4234                           	callstack 0
  4235                           
  4236 ;; *************** function _blink *****************
  4237 ;; Defined at:
  4238 ;;		line 119 in file "main.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      void 
  4245 ;; Registers used:
  4246 ;;		wreg, status,2, status,0, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;Total ram usage:        0 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    3
  4259 ;; This function calls:
  4260 ;;		i2_move_down
  4261 ;; This function is called by:
  4262 ;;		_HandleInterrupt
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text17
  4267  0014C2                     __ptext17:
  4268                           	callstack 0
  4269  0014C2                     _blink:
  4270                           	callstack 22
  4271  0014C2                     
  4272                           ;main.c: 120:     counter250ms += 1;
  4273  0014C2  2A22               	incf	_counter250ms^0,f,c
  4274  0014C4                     
  4275                           ;main.c: 121:     if (counter250ms == 8) {
  4276  0014C4  0E08               	movlw	8
  4277  0014C6  1822               	xorwf	_counter250ms^0,w,c
  4278  0014C8  A4D8               	btfss	status,2,c
  4279  0014CA  EF69  F00A         	goto	i2u146_41
  4280  0014CE  EF6B  F00A         	goto	i2u146_40
  4281  0014D2                     i2u146_41:
  4282  0014D2  EF6F  F00A         	goto	i2l1878
  4283  0014D6                     i2u146_40:
  4284  0014D6                     
  4285                           ;main.c: 122:         counter250ms = 0;
  4286  0014D6  0E00               	movlw	0
  4287  0014D8  6E22               	movwf	_counter250ms^0,c
  4288  0014DA                     
  4289                           ;main.c: 123:         move_down();
  4290  0014DA  ECFF  F00A         	call	i2_move_down	;wreg free
  4291  0014DE                     i2l1878:
  4292                           
  4293                           ;main.c: 125:     blink_counter = 0;
  4294  0014DE  0E00               	movlw	0
  4295  0014E0  6E1E               	movwf	(_blink_counter+1)^0,c
  4296  0014E2  0E00               	movlw	0
  4297  0014E4  6E1D               	movwf	_blink_counter^0,c
  4298  0014E6                     
  4299                           ;main.c: 126:     blink_on = !blink_on;
  4300  0014E6  5043               	movf	_blink_on^0,w,c
  4301  0014E8  B4D8               	btfsc	status,2,c
  4302  0014EA  EF79  F00A         	goto	i2u147_41
  4303  0014EE  EF7C  F00A         	goto	i2u147_40
  4304  0014F2                     i2u147_41:
  4305  0014F2  0E01               	movlw	1
  4306  0014F4  EF7D  F00A         	goto	i2u148_40
  4307  0014F8                     i2u147_40:
  4308  0014F8  0E00               	movlw	0
  4309  0014FA                     i2u148_40:
  4310  0014FA  6E43               	movwf	_blink_on^0,c
  4311  0014FC  0012               	return		;funcret
  4312  0014FE                     __end_of_blink:
  4313                           	callstack 0
  4314                           
  4315 ;; *************** function i2_move_down *****************
  4316 ;; Defined at:
  4317 ;;		line 488 in file "main.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;		None
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  newPosition     2   11[COMRAM] struct Position
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  1    wreg      void 
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, status,0, cstack
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;Total ram usage:        2 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; Hardware stack levels required when called:    2
  4338 ;; This function calls:
  4339 ;;		i2_move
  4340 ;; This function is called by:
  4341 ;;		_blink
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text18
  4346  0015FE                     __ptext18:
  4347                           	callstack 0
  4348  0015FE                     i2_move_down:
  4349                           	callstack 22
  4350  0015FE                     
  4351                           ;main.c: 489:     Position newPosition = {position.x, position.y + 1};
  4352  0015FE  C00F  F02E         	movff	move_down@F4756,i2move_down@newPosition
  4353  001602  C010  F02F         	movff	move_down@F4756+1,i2move_down@newPosition+1
  4354  001606  C01B  F02E         	movff	_position,i2move_down@newPosition
  4355  00160A  281C               	incf	(_position+1)^0,w,c
  4356  00160C  6E2F               	movwf	(i2move_down@newPosition+1)^0,c
  4357  00160E                     
  4358                           ;main.c: 490:     move(newPosition);
  4359  00160E  C02E  F02C         	movff	i2move_down@newPosition,i2move@newPosition
  4360  001612  C02F  F02D         	movff	i2move_down@newPosition+1,i2move@newPosition+1
  4361  001616  ECAC  F00A         	call	i2_move	;wreg free
  4362  00161A  0012               	return		;funcret
  4363  00161C                     __end_ofi2_move_down:
  4364                           	callstack 0
  4365                           
  4366 ;; *************** function i2_move *****************
  4367 ;; Defined at:
  4368 ;;		line 467 in file "main.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  newPosition     2    9[COMRAM] struct Position
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;		None
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  1    wreg      void 
  4375 ;; Registers used:
  4376 ;;		wreg, status,2, status,0, cstack
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4385 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;Total ram usage:        2 bytes
  4387 ;; Hardware stack levels used:    1
  4388 ;; Hardware stack levels required when called:    1
  4389 ;; This function calls:
  4390 ;;		i2_canMove
  4391 ;; This function is called by:
  4392 ;;		i2_move_down
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           	psect	text19
  4397  001558                     __ptext19:
  4398                           	callstack 0
  4399  001558                     i2_move:
  4400                           	callstack 22
  4401  001558                     
  4402                           ;main.c: 468:     if (canMove(newPosition)) {
  4403  001558  C02C  F023         	movff	i2move@newPosition,i2canMove@position
  4404  00155C  C02D  F024         	movff	i2move@newPosition+1,i2canMove@position+1
  4405  001560  EC65  F009         	call	i2_canMove	;wreg free
  4406  001564  0900               	iorlw	0
  4407  001566  B4D8               	btfsc	status,2,c
  4408  001568  EFB8  F00A         	goto	i2u100_41
  4409  00156C  EFBA  F00A         	goto	i2u100_40
  4410  001570                     i2u100_41:
  4411  001570  EFBE  F00A         	goto	i2l253
  4412  001574                     i2u100_40:
  4413  001574                     
  4414                           ;main.c: 469:         position = newPosition;
  4415  001574  C02C  F01B         	movff	i2move@newPosition,_position
  4416  001578  C02D  F01C         	movff	i2move@newPosition+1,_position+1
  4417  00157C                     i2l253:
  4418  00157C  0012               	return		;funcret
  4419  00157E                     __end_ofi2_move:
  4420                           	callstack 0
  4421                           
  4422 ;; *************** function i2_canMove *****************
  4423 ;; Defined at:
  4424 ;;		line 445 in file "main.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  position        2    0[COMRAM] struct Position
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  bot             1    7[COMRAM] unsigned char 
  4429 ;;  top             1    6[COMRAM] unsigned char 
  4430 ;;  right           1    5[COMRAM] unsigned char 
  4431 ;;  left            1    4[COMRAM] unsigned char 
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  1    wreg      unsigned char 
  4434 ;; Registers used:
  4435 ;;		wreg, status,2, status,0
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;Total ram usage:        9 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; This function calls:
  4448 ;;		Nothing
  4449 ;; This function is called by:
  4450 ;;		i2_move
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           	psect	text20
  4455  0012CA                     __ptext20:
  4456                           	callstack 0
  4457  0012CA                     i2_canMove:
  4458                           	callstack 22
  4459  0012CA                     
  4460                           ;main.c: 446:     unsigned char left, right, top, bot;;main.c: 447:     switch (type) {
  4461  0012CA  EF7B  F009         	goto	i2l1622
  4462  0012CE                     i2l243:
  4463                           
  4464                           ;main.c: 449:         {;main.c: 450:             left = right = position.x;
  4465  0012CE  C023  F028         	movff	i2canMove@position,i2canMove@right
  4466  0012D2  C028  F027         	movff	i2canMove@right,i2canMove@left
  4467                           
  4468                           ;main.c: 451:             top = bot = position.y;
  4469  0012D6  C024  F02A         	movff	i2canMove@position+1,i2canMove@bot
  4470  0012DA  C02A  F029         	movff	i2canMove@bot,i2canMove@top
  4471                           
  4472                           ;main.c: 452:             break;
  4473  0012DE  EF94  F009         	goto	i2l1624
  4474  0012E2                     i2l246:
  4475                           
  4476                           ;main.c: 456:         {;main.c: 457:             left = position.x;
  4477  0012E2  C023  F027         	movff	i2canMove@position,i2canMove@left
  4478  0012E6                     
  4479                           ;main.c: 458:             right = position.x + 1;
  4480  0012E6  2823               	incf	i2canMove@position^0,w,c
  4481  0012E8  6E28               	movwf	i2canMove@right^0,c
  4482  0012EA                     
  4483                           ;main.c: 459:             top = position.y;
  4484  0012EA  C024  F029         	movff	i2canMove@position+1,i2canMove@top
  4485                           
  4486                           ;main.c: 460:             bot = position.y + 1;
  4487  0012EE  2824               	incf	(i2canMove@position+1)^0,w,c
  4488  0012F0  6E2A               	movwf	i2canMove@bot^0,c
  4489                           
  4490                           ;main.c: 461:             break;
  4491  0012F2  EF94  F009         	goto	i2l1624
  4492  0012F6                     i2l1622:
  4493  0012F6  5020               	movf	_type^0,w,c
  4494  0012F8  6E25               	movwf	??i2_canMove^0,c
  4495  0012FA  6A26               	clrf	(??i2_canMove+1)^0,c
  4496                           
  4497                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4498                           ; Switch size 1, requested type "simple"
  4499                           ; Number of cases is 1, Range of values is 0 to 0
  4500                           ; switch strategies available:
  4501                           ; Name         Instructions Cycles
  4502                           ; simple_byte            4     3 (average)
  4503                           ;	Chosen strategy is simple_byte
  4504  0012FC  5026               	movf	(??i2_canMove+1)^0,w,c
  4505  0012FE  0A00               	xorlw	0	; case 0
  4506  001300  B4D8               	btfsc	status,2,c
  4507  001302  EF85  F009         	goto	i2l2912
  4508  001306  EF94  F009         	goto	i2l1624
  4509  00130A                     i2l2912:
  4510                           
  4511                           ; Switch size 1, requested type "simple"
  4512                           ; Number of cases is 3, Range of values is 0 to 2
  4513                           ; switch strategies available:
  4514                           ; Name         Instructions Cycles
  4515                           ; simple_byte           10     6 (average)
  4516                           ;	Chosen strategy is simple_byte
  4517  00130A  5025               	movf	??i2_canMove^0,w,c
  4518  00130C  0A00               	xorlw	0	; case 0
  4519  00130E  B4D8               	btfsc	status,2,c
  4520  001310  EF67  F009         	goto	i2l243
  4521  001314  0A01               	xorlw	1	; case 1
  4522  001316  B4D8               	btfsc	status,2,c
  4523  001318  EF71  F009         	goto	i2l246
  4524  00131C  0A03               	xorlw	3	; case 2
  4525  00131E  B4D8               	btfsc	status,2,c
  4526  001320  EF71  F009         	goto	i2l246
  4527  001324  EF94  F009         	goto	i2l1624
  4528  001328                     i2l1624:
  4529                           
  4530                           ;main.c: 464:     return (left < 4 && right < 4 && top < 8 && bot < 8);
  4531  001328  0E00               	movlw	0
  4532  00132A  6E2B               	movwf	i2_canMove$262^0,c
  4533  00132C  0E04               	movlw	4
  4534  00132E  6027               	cpfslt	i2canMove@left^0,c
  4535  001330  EF9C  F009         	goto	i2u95_41
  4536  001334  EF9E  F009         	goto	i2u95_40
  4537  001338                     i2u95_41:
  4538  001338  EFB8  F009         	goto	i2l248
  4539  00133C                     i2u95_40:
  4540  00133C  0E04               	movlw	4
  4541  00133E  6028               	cpfslt	i2canMove@right^0,c
  4542  001340  EFA4  F009         	goto	i2u96_41
  4543  001344  EFA6  F009         	goto	i2u96_40
  4544  001348                     i2u96_41:
  4545  001348  EFB8  F009         	goto	i2l248
  4546  00134C                     i2u96_40:
  4547  00134C  0E08               	movlw	8
  4548  00134E  6029               	cpfslt	i2canMove@top^0,c
  4549  001350  EFAC  F009         	goto	i2u97_41
  4550  001354  EFAE  F009         	goto	i2u97_40
  4551  001358                     i2u97_41:
  4552  001358  EFB8  F009         	goto	i2l248
  4553  00135C                     i2u97_40:
  4554  00135C  0E08               	movlw	8
  4555  00135E  602A               	cpfslt	i2canMove@bot^0,c
  4556  001360  EFB4  F009         	goto	i2u98_41
  4557  001364  EFB6  F009         	goto	i2u98_40
  4558  001368                     i2u98_41:
  4559  001368  EFB8  F009         	goto	i2l248
  4560  00136C                     i2u98_40:
  4561  00136C  0E01               	movlw	1
  4562  00136E  6E2B               	movwf	i2_canMove$262^0,c
  4563  001370                     i2l248:
  4564  001370  502B               	movf	i2_canMove$262^0,w,c
  4565  001372  0012               	return		;funcret
  4566  001374                     __end_ofi2_canMove:
  4567                           	callstack 0
  4568  0000                     
  4569                           	psect	rparam
  4570  0000                     
  4571                           	psect	temp
  4572  000044                     btemp:
  4573                           	callstack 0
  4574  000044                     	ds	1
  4575  0000                     int$flags	set	btemp
  4576  0000                     wtemp8	set	btemp+1
  4577  0000                     ttemp5	set	btemp+1
  4578  0000                     ttemp6	set	btemp+4
  4579  0000                     ttemp7	set	btemp+8
  4580                           
  4581                           	psect	config
  4582                           
  4583                           ; Padding undefined space
  4584  300000                     	org	3145728
  4585  300000  FF                 	db	255
  4586                           
  4587                           ;Config register CONFIG1H @ 0x300001
  4588                           ;	Oscillator Selection bits
  4589                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  4590                           ;	Fail-Safe Clock Monitor Enable bit
  4591                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4592                           ;	Internal/External Oscillator Switchover bit
  4593                           ;	IESO = OFF, Two-Speed Start-up disabled
  4594  300001                     	org	3145729
  4595  300001  06                 	db	6
  4596                           
  4597                           ;Config register CONFIG2L @ 0x300002
  4598                           ;	Power-up Timer Enable bit
  4599                           ;	PWRT = OFF, PWRT disabled
  4600                           ;	Brown-out Reset Enable bits
  4601                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4602                           ;	Brown-out Voltage bits
  4603                           ;	BORV = 0x3, unprogrammed default
  4604  300002                     	org	3145730
  4605  300002  19                 	db	25
  4606                           
  4607                           ;Config register CONFIG2H @ 0x300003
  4608                           ;	Watchdog Timer
  4609                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4610                           ;	Watchdog Timer Postscale Select bits
  4611                           ;	WDTPS = 0xF, unprogrammed default
  4612  300003                     	org	3145731
  4613  300003  1E                 	db	30
  4614                           
  4615                           ;Config register CONFIG3L @ 0x300004
  4616                           ;	unspecified, using default values
  4617                           ;	Processor Data Memory Mode Select bits
  4618                           ;	MODE = 0x3, unprogrammed default
  4619                           ;	Address Bus Width Select bits
  4620                           ;	ADDRBW = 0x3, unprogrammed default
  4621                           ;	Data Bus Width Select bit
  4622                           ;	DATABW = 0x1, unprogrammed default
  4623                           ;	External Bus Data Wait Enable bit
  4624                           ;	WAIT = 0x1, unprogrammed default
  4625  300004                     	org	3145732
  4626  300004  F3                 	db	243
  4627                           
  4628                           ;Config register CONFIG3H @ 0x300005
  4629                           ;	CCP2 MUX bit
  4630                           ;	CCP2MX = 0x1, unprogrammed default
  4631                           ;	ECCP MUX bit
  4632                           ;	ECCPMX = 0x1, unprogrammed default
  4633                           ;	Low-Power Timer1 Oscillator Enable bit
  4634                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4635                           ;	MCLR Pin Enable bit
  4636                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  4637  300005                     	org	3145733
  4638  300005  83                 	db	131
  4639                           
  4640                           ;Config register CONFIG4L @ 0x300006
  4641                           ;	Stack Full/Underflow Reset Enable bit
  4642                           ;	STVREN = 0x1, unprogrammed default
  4643                           ;	Single-Supply ICSP Enable bit
  4644                           ;	LVP = OFF, Single-Supply ICSP disabled
  4645                           ;	Boot Block Size Select bits
  4646                           ;	BBSIZ = 0x0, unprogrammed default
  4647                           ;	Extended Instruction Set Enable bit
  4648                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4649                           ;	Background Debugger Enable bit
  4650                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4651  300006                     	org	3145734
  4652  300006  81                 	db	129
  4653                           
  4654                           ; Padding undefined space
  4655  300007                     	org	3145735
  4656  300007  FF                 	db	255
  4657                           tosu	equ	0xFFF
  4658                           tosh	equ	0xFFE
  4659                           tosl	equ	0xFFD
  4660                           stkptr	equ	0xFFC
  4661                           pclatu	equ	0xFFB
  4662                           pclath	equ	0xFFA
  4663                           pcl	equ	0xFF9
  4664                           tblptru	equ	0xFF8
  4665                           tblptrh	equ	0xFF7
  4666                           tblptrl	equ	0xFF6
  4667                           tablat	equ	0xFF5
  4668                           prodh	equ	0xFF4
  4669                           prodl	equ	0xFF3
  4670                           indf0	equ	0xFEF
  4671                           postinc0	equ	0xFEE
  4672                           postdec0	equ	0xFED
  4673                           preinc0	equ	0xFEC
  4674                           plusw0	equ	0xFEB
  4675                           fsr0h	equ	0xFEA
  4676                           fsr0l	equ	0xFE9
  4677                           wreg	equ	0xFE8
  4678                           indf1	equ	0xFE7
  4679                           postinc1	equ	0xFE6
  4680                           postdec1	equ	0xFE5
  4681                           preinc1	equ	0xFE4
  4682                           plusw1	equ	0xFE3
  4683                           fsr1h	equ	0xFE2
  4684                           fsr1l	equ	0xFE1
  4685                           bsr	equ	0xFE0
  4686                           indf2	equ	0xFDF
  4687                           postinc2	equ	0xFDE
  4688                           postdec2	equ	0xFDD
  4689                           preinc2	equ	0xFDC
  4690                           plusw2	equ	0xFDB
  4691                           fsr2h	equ	0xFDA
  4692                           fsr2l	equ	0xFD9
  4693                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         100
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      67
    BANK0           160     47     113
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _HandleInterrupt in COMRAM

    _HandleInterrupt->_submit
    _submit->_not_intersects
    _blink->i2_move_down
    i2_move_down->i2_move
    i2_move->i2_canMove

Critical Paths under _main in BANK0

    _main->_draw
    _poll_a->_move_down
    _poll_a->_move_left
    _poll_a->_move_right
    _poll_a->_move_up
    _move_up->_move
    _move_right->_move
    _move_left->_move
    _move_down->_move
    _move->_canMove
    _draw->_setLed

Critical Paths under _HandleInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HandleInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HandleInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HandleInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HandleInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HandleInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HandleInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HandleInterrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HandleInterrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HandleInterrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HandleInterrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HandleInterrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HandleInterrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HandleInterrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HandleInterrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HandleInterrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9147
                          _busy_wait
                               _draw
                               _init
                             _poll_a
 ---------------------------------------------------------------------------------
 (1) _poll_a                                               1     1      0    3994
                                             13 BANK0      1     1      0
                          _move_down
                          _move_left
                         _move_right
                            _move_up
 ---------------------------------------------------------------------------------
 (2) _move_up                                              2     2      0     966
                                             11 BANK0      2     2      0
                               _move
 ---------------------------------------------------------------------------------
 (2) _move_right                                           2     2      0     966
                                             11 BANK0      2     2      0
                               _move
 ---------------------------------------------------------------------------------
 (2) _move_left                                            2     2      0     966
                                             11 BANK0      2     2      0
                               _move
 ---------------------------------------------------------------------------------
 (2) _move_down                                            2     2      0     966
                                             11 BANK0      2     2      0
                               _move
 ---------------------------------------------------------------------------------
 (3) _move                                                 2     0      2     892
                                              9 BANK0      2     0      2
                            _canMove
 ---------------------------------------------------------------------------------
 (4) _canMove                                              9     7      2     470
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _init                                                12    12      0     362
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (1) _draw                                                42    42      0    4745
                                              5 BANK0     42    42      0
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _setLed                                               5     2      3    3487
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _busy_wait                                            4     4      0      46
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HandleInterrupt                                      4     4      0    1555
                                             28 COMRAM     4     4      0
                              _blink
                             _rotate
                             _submit
 ---------------------------------------------------------------------------------
 (6) _submit                                               6     6      0    1156
                                             22 COMRAM     6     6      0
                            ___lwmod
                     _not_intersects
 ---------------------------------------------------------------------------------
 (7) _not_intersects                                      22    22      0     822
                                              0 COMRAM    22    22      0
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _rotate                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _blink                                                0     0      0     399
                        i2_move_down
 ---------------------------------------------------------------------------------
 (7) i2_move_down                                          2     2      0     399
                                             11 COMRAM     2     2      0
                             i2_move
 ---------------------------------------------------------------------------------
 (8) i2_move                                               2     0      2     351
                                              9 COMRAM     2     0      2
                          i2_canMove
 ---------------------------------------------------------------------------------
 (9) i2_canMove                                            9     7      2     281
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _busy_wait
   _draw
     _setLed
   _init
   _poll_a
     _move_down
       _move
         _canMove
     _move_left
       _move
         _canMove
     _move_right
       _move
         _canMove
     _move_up
       _move
         _canMove

 _HandleInterrupt (ROOT)
   _blink
     i2_move_down
       i2_move
         i2_canMove
   _rotate
   _submit
     ___lwmod
     _not_intersects

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2F      71       5       70.6%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      43       1       71.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B4      32        0.0%
DATA                 0      0      B4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Apr 20 16:47:43 2024

                      l77 14C0       __end_ofi2_move_down 161C        _not_intersects$120 0028  
      _not_intersects$121 0029        _not_intersects$130 0032        _not_intersects$122 002A  
      _not_intersects$131 0033        _not_intersects$123 002B        _not_intersects$132 0034  
      _not_intersects$124 002C        _not_intersects$133 0035        _not_intersects$125 002D  
      _not_intersects$134 0036        _not_intersects$126 002E        _not_intersects$135 0037  
      _not_intersects$127 002F        _not_intersects$119 0027        _not_intersects$128 0030  
      _not_intersects$129 0031                       l106 113E                       l211 0822  
                     l214 08AC                       l216 0914                       l217 097C  
                     l209 07FE                       l218 09D4                       l171 0FF4  
                     l219 0AA8                       l243 1222                       l253 1556  
                     l246 1236                       l263 15BC                       l248 12C6  
                     l249 12C8                       l273 15FC                       l258 15DC  
                     l282 121C                       l268 159C                       wreg 000FE8  
       i2canMove@position 0023                      l2400 1292                      l2402 12A2  
                    l2404 12B2                      l2420 15DE                      l2430 0E70  
                    l2510 106A                      l2406 12C2                      l2422 15EA  
                    l2440 0F0C                      l2432 0E92                      l2600 09B6  
                    l2512 106E                      l2504 1010                      l2416 1532  
                    l2424 15F0                      l2450 0F94                      l2442 0F1C  
                    l2434 0EB6                      l2426 0E5C                      l2610 09FC  
                    l2602 09B6                      l2530 0660                      l2514 108A  
                    l2506 104A                      l2418 154E                      l2444 0F3E  
                    l2436 0EC6                      l2428 0E60                      l2612 0A00  
                    l2604 09BC                      l2540 0850                      l2532 080E  
                    l2524 10FE                      l2516 10E2                      l2508 104E  
                    l2460 15BE                      l2446 0F62                      l2438 0EE8  
                    l2454 0FB8                      l2622 0A3C                      l2614 0A06  
                    l2606 09E4                      l2550 0886                      l2542 0854  
                    l2534 0832                      l2526 111E                      l2518 10EA  
                    l2390 123E                      l2462 15C6                      l2470 15A6  
                    l2448 0F72                      l2616 0A16                      l2608 09F4  
                    l2560 08CC                      l2552 088E                      l2544 0864  
                    l2536 0842                      l2528 1122                      l2464 15CC  
                    l2472 15AC                      l2480 1590                      l2640 1140  
                    l2490 14BE                      l2482 147C                      l2618 0A28  
                    l2570 0900                      l2562 08D4                      l2554 0894  
                    l2546 086C                      l2538 084A                      l2626 0A76  
                    l2394 124A                      l2386 121E                      l2466 15D0  
                    l2474 15B0                      l2650 118C                      l2642 1158  
                    l2900 0A8A                      l2580 0946                      l2572 0924  
                    l2564 08DA                      l2556 0898                      l2548 0876  
                    l2492 0FF6                      l2388 123A                      l2396 127E  
                    l2468 159E                      l2476 157E                      l2660 11C4  
                    l2652 119C                      l2644 1168                      l2902 0FCE  
                    l2590 0988                      l2582 0956                      l2574 0934  
                    l2566 08DE                      l2558 08BC                      l2398 1282  
                    l2478 158A                      l2662 11D4                      l2654 11A0  
                    l2646 1178                      l2488 148E                      l2592 098C  
                    l2584 095E                      l2576 093C                      l2568 08EE  
                    l2672 11EE                      l2664 11E4                      l2656 11B0  
                    l2648 117C                      l2680 1620                      l2594 099C  
                    l2586 0968                      l2578 0942                      l2498 1008  
                    l2674 120A                      l2666 11E8                      l2658 11C0  
                    l2682 1624                      l2596 099C                      l2588 0984  
                    l2676 120C                      l2684 1628                      l2598 09A0  
                    l2678 161C                      l2896 1260                      l2898 0A50  
                    u2000 113E                      u2001 113A                      u2015 066A  
                    u2200 11E4                      u2105 079C                      u2025 0672  
                    u2201 11E0                      u2210 121C                      u2130 1168  
                    u2115 07A4                      u2035 0684                      u2211 1218  
                    u2131 1164                      u2140 1178                      u2125 07B6  
                    u2045 06D0                      u2141 1174                      u2150 118C  
                    u2055 06D8                      u2151 1188                      _LATC 000F8B  
                    u2160 119C                      _LATD 000F8C                      u2065 06EA  
                    u2161 1198                      _LATE 000F8D                      u2170 11B0  
                    _LATF 000F8E                      u2075 0736                      u2171 11AC  
                    u2180 11C0                      u2085 073E                      u2181 11BC  
                    u2190 11D4                      u2095 0750                      u2191 11D0  
                    u1800 1292                      u1801 128E                      u1810 12A2  
                    u1811 129E                      u1820 12B2                      u1821 12AE  
                    u1910 0F1C                      u1830 12C2                      u1911 0F18  
                    u1831 12BE                      u1904 0EFA                      u1840 154E  
                    u1905 0EF6                      u1841 154A                      u1850 0E70  
                    u1851 0E6C                      u1940 0F72                      u1924 0F2E  
                    u1941 0F6E                      u1925 0F2A                      u1934 0F50  
                    u1935 0F4C                      u1880 0EC6                      u1864 0E82  
                    u1881 0EC2                      u1865 0E7E                      u1970 14BE  
                    u1954 0F84                      u1874 0EA4                      u1971 14BA  
                    u1955 0F80                      u1875 0EA0                      u1964 0FA6  
                    u1980 106A                      u1965 0FA2                      u1981 1066  
                    u1894 0ED8                      u1990 108A                      u1895 0ED4  
                    u1991 1086                      i2l83 14FC                      i2l95 1404  
                    _draw 0660                      _main 161C                      _grid 0060  
                    _init 0FF6                      _keys 0001                      _move 1532  
                    fsr2h 000FDA                      indf1 000FE7                      indf2 000FDF  
                    fsr1l 000FE1                      fsr2l 000FD9                      btemp 0044  
                    _type 0020     move_right@newPosition 00AD                      prodh 000FF4  
                    prodl 000FF3                      start 000E              ___param_bank 000000  
                   ?_draw 0023                     ?_main 0023                     ?_init 0023  
                   ?_move 00AB                     _T0CON 000FD5           __end_of___lwmod 147C  
                   i2l222 163A                     i2l154 065E                     i2l243 12CE  
                   i2l253 157C                     i2l246 12E2                     i2l239 0E5A  
                   i2l248 1370                     i2l249 1372                     i2l273 161A  
                   i2l801 147A           __end_of_canMove 12CA                     i2l794 1472  
                   _TMR0H 000FD7                     _TMR0L 000FD6                     _PORTA 000F80  
                   _PORTB 000F81                     _PORTC 000F82                     _PORTD 000F83  
                   _PORTE 000F84                     _PORTF 000F85                     _PORTH 000F87  
                   _PORTJ 000F88                     _TRISA 000F92                     _TRISB 000F93  
                   _TRISC 000F94                     _TRISD 000F95                     _TRISE 000F96  
                   _TRISF 000F97                     _TRISH 000F99                     _TRISJ 000F9A  
                   _blink 14C2      move_down@newPosition 00AD                     init@i 00A8  
                   init@j 00AA           __end_of_move_up 159E                     tablat 000FF5  
                   ttemp5 0045                     ttemp6 0048                     ttemp7 004C  
                   status 000FD8                     wtemp8 0045        __size_ofi2_canMove 00AA  
             i2_move_down 15FE           __initialization 14FE              __end_of_draw 0AAA  
            __end_of_main 1634              __end_of_init 1140              __end_of_move 1558  
       ??_HandleInterrupt 003F                    ??_draw 00A7                    ??_main 00D1  
                  ??_init 00A2                    ??_move 00AD             __activetblptr 000003  
            i2canMove@bot 002A              i2canMove@top 0029             i2_canMove$262 002B  
                  ?_blink 0023                    i2l2130 1386                    i2l2140 13B4  
                  i2l2132 1394                    i2l2150 13E8                    i2l2134 1398  
                  i2l2142 13B8                    i2l1272 1634                    i2l2152 13F6  
                  i2l2144 13C6                    i2l2136 13AC                    i2l2154 13FA  
                  i2l2146 13D4                    i2l2138 13B0                    i2l1700 020E  
                  i2l2148 13D8                    i2l2156 1400                    i2l1630 134C  
                  i2l1622 12F6                    i2l1614 12CA                    i2l1710 02C6  
                  i2l1702 025A                    i2l1632 135C                    i2l1616 12E6  
                  i2l1624 1328                    i2l1720 033A                    i2l1712 02CE  
                  i2l1704 025E                    i2l1634 136C                    i2l1626 132C  
                  i2l1618 12EA                    i2l1730 03DE                    i2l1722 0372  
                  i2l1714 02D2                    i2l1706 0276                    i2l1628 133C  
                  i2l1740 0436                    i2l1732 03E6                    i2l1724 0376  
                  i2l1716 031E                    i2l1708 02C2                    i2l1660 001E  
                  i2l1900 0C66                    i2l1646 1558                    i2l1750 04DA  
                  i2l1742 046E                    i2l1734 03EA                    i2l1726 038E  
                  i2l1718 0322                    i2l1670 008E                    i2l1662 004E  
                  i2l1910 0D2A                    i2l1902 0CA6                    i2l1648 1574  
                  i2l1760 0532                    i2l1752 04E2                    i2l1744 0472  
                  i2l1736 041A                    i2l1728 03DA                    i2l1680 0112  
                  i2l1672 0092                    i2l1664 0052                    i2l1656 0012  
                  i2l1912 0D4E                    i2l1850 142A                    i2l1770 05D6  
                  i2l1762 057E                    i2l1754 04E6                    i2l1746 048A  
                  i2l1738 041E                    i2l1690 01B6                    i2l1682 014A  
                  i2l1674 00AA                    i2l1666 005A                    i2l1658 001A  
                  i2l1930 0E56                    i2l1914 0D8E                    i2l1906 0CD6  
                  i2l1922 0DF8                    i2l1860 1466                    i2l1852 1432  
                  i2l1764 0582                    i2l1756 0516                    i2l1748 04D6  
                  i2l1692 01BE                    i2l1684 014E                    i2l1676 00F6  
                  i2l1668 005E                    i2l1780 064A                    i2l1924 0E2A  
                  i2l1870 14C2                    i2l1862 146C                    i2l1854 143A  
                  i2l2910 062C                    i2l1774 05DE                    i2l1766 059A  
                  i2l1758 051A                    i2l1694 01C2                    i2l1686 0166  
                  i2l1678 00FA                    i2l1926 0E46                    i2l1918 0DBE  
                  i2l2912 130A                    i2l1864 15FE                    i2l1880 14E6  
                  i2l1872 14C4                    i2l1856 1448                    i2l1848 1418  
                  i2l1768 05D2                    i2l1696 01F2                    i2l1688 01B2  
                  i2l1928 0E4E                    i2l2904 0DD2                    i2l1866 160A  
                  i2l1874 14D6                    i2l1858 145E                    i2l1698 01F6  
                  i2l1778 0618                    i2l2906 0E0C                    i2l1890 0B0E  
                  i2l1882 0AAA                    i2l1868 160E                    i2l1876 14DA  
                  i2l2908 05F2                    i2l1892 0B4E                    i2l1878 14DE  
                  i2l1894 0BBE                    i2l1886 0AC2                    i2l1896 0BE2  
                  i2l1888 0AEA                    i2l1898 0C22                    _INTCON 000FF2  
                  i2_move 1558                 ??___lwmod 0027                 ??_canMove 00A4  
                  clear_0 1516                    clear_1 1522                    _setLed 0E5C  
                  _poll_a 1140                    _rotate 1634                    _submit 0AAA  
            __pdataCOMRAM 0043         __end_ofi2_canMove 1374                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8                 ??_move_up 00AD  
              __accesstop 0060   __end_of__initialization 1528             ___rparam_used 000001  
          __pcstackCOMRAM 0023             __end_of_blink 14FE                   ??_blink 0030  
 __size_of_not_intersects 064E                __pbssBANK0 0060             i2canMove@left 0027  
          move_left@F4747 0015               setLed@value 00A4            move_down@F4756 000F  
                 ?i2_move 002C        __size_of_busy_wait 0046                   ?_setLed 00A2  
                 ?_poll_a 0023        __size_of_move_left 0020        __size_of_move_down 0020  
      move_up@newPosition 00AD                   ?_rotate 0023                   ?_submit 0023  
              canMove@bot 00A9                canMove@top 00A8           canMove@position 00A2  
                 i2u95_40 133C                   i2u95_41 1338                   i2u96_40 134C  
                 i2u96_41 1348                   i2u97_40 135C                   i2u97_41 1358  
                 i2u98_40 136C                   i2u98_41 1368           _HandleInterrupt 0008  
       i2move@newPosition 002C           __size_ofi2_move 0026                   __Hparam 0000  
                 __Lparam 0000              ?i2_move_down 0023                   ___lwmod 1418  
                 _canMove 121E                   __pcinit 14FE                   __ramtop 1000  
         __size_of_setLed 019A              canMove@right 00A7                   __ptext0 161C  
                 __ptext1 1140                   __ptext2 157E                   __ptext3 159E  
                 __ptext4 15BE                   __ptext5 15DE                   __ptext6 1532  
                 __ptext7 121E                   __ptext8 0FF6                   __ptext9 0660  
         __size_of_poll_a 00DE           __size_of_rotate 0008           __size_of_submit 03B2  
       __end_of_busy_wait 14C2                   _move_up 157E            __pintcode_body 1374  
    end_of_initialization 1528         __end_of_move_left 15DE         __end_of_move_down 15FE  
                 int_func 1374                   poll_a@i 00AF                _move_right 159E  
                 postinc0 000FEE  not_intersects@intersects 0038            _not_intersects 0012  
 __end_of_HandleInterrupt 1418                 i2_canMove 12CA            __end_ofi2_move 157E  
          _PORTA_previous 000B             __pidataCOMRAM 163C            __end_of_setLed 0FF6  
          __end_of_poll_a 121E            __end_of_rotate 163C            __end_of_submit 0E5C  
             _canMove$262 00AA    __end_of_not_intersects 0660              _counter250ms 0022  
     start_initialization 14FE               submit@F4719 0017                ?i2_canMove 0023  
                ??i2_move 002E               ?_move_right 0023                busy_wait@i 00A2  
    __size_ofi2_move_down 001E                  ??_setLed 00A5                  ??_poll_a 00AF  
                ??_rotate 0023                  ??_submit 0039           ?_not_intersects 0023  
          i2canMove@right 0028               __pbssCOMRAM 0001             __pcstackBANK0 00A2  
        ?_HandleInterrupt 0023                 __pintcode 0008                  ?___lwmod 0023  
                ?_canMove 00A2                  ?_move_up 0023       __size_of_move_right 0020  
          __size_of_blink 003C                 _busy_wait 147C    i2move_down@newPosition 002E  
             canMove@left 00A6               ??i2_canMove 0025           move@newPosition 00AB  
               draw@F4651 00A0                 draw@F4653 009E                 draw@F4661 0096  
               draw@F4655 009C                 draw@F4663 0094                 draw@F4671 008C  
               draw@F4657 009A                 draw@F4665 0092                 draw@F4673 008A  
               draw@F4681 0082                 draw@F4659 0098                 draw@F4667 0090  
               draw@F4675 0088                 draw@F4683 0080                 draw@F4669 008E  
               draw@F4677 0086                 draw@F4679 0084                  i2u100_40 1574  
                i2u100_41 1570                  i2u101_40 004E                  i2u101_41 004A  
                i2u110_40 020E                  i2u102_40 008E                  i2u110_41 020A  
                i2u102_41 008A                  i2u111_40 025A                  i2u103_40 00AA  
                i2u111_41 0256                  i2u103_41 00A6                  i2u120_40 0436  
                i2u112_40 0276                  i2u104_40 00F6                  i2u120_41 0432  
                i2u112_41 0272                  i2u104_41 00F2                  i2u121_40 046E  
                i2u113_40 02C2                  i2u105_40 0112                  i2u121_41 046A  
                i2u113_41 02BE                  i2u105_41 010E                  i2u130_40 065E  
                i2u122_40 048A                  i2u114_40 031E                  i2u106_40 014A  
                i2u122_41 0486                  i2u114_41 031A                  i2u106_41 0146  
                i2u123_40 04D6                  i2u115_40 033A                  i2u107_40 0166  
                i2u123_41 04D2                  i2u115_41 0336                  i2u107_41 0162  
                i2u124_40 0516                  i2u116_40 0372                  i2u108_40 01B2  
                i2u124_41 0512                  i2u116_41 036E                  i2u108_41 01AE  
                i2u125_40 0532                  i2u117_40 038E                  i2u109_40 01F2  
                i2u125_41 052E                  i2u117_41 038A                  i2u109_41 01EE  
                i2u126_40 057E                  i2u118_40 03DA                  i2u126_41 057A  
                i2u118_41 03D6                  i2u143_40 142A                  i2u127_40 059A  
                i2u119_40 041A                  i2u143_41 1426                  i2u127_41 0596  
                i2u119_41 0416                  i2u144_40 1448                  i2u128_40 05D2  
                i2u144_41 1444                  i2u128_41 05CE                  i2u145_40 145E  
                i2u129_40 065C                  i2u145_41 145A                  i2u129_41 0656  
                i2u146_40 14D6                  i2u146_41 14D2                  i2u147_40 14F8  
                i2u147_41 14F2                  i2u148_40 14FA                 _move_left 15BE  
               _move_down 15DE                  i2u149_40 0ABE                  i2u149_41 0ABA  
                i2u174_40 1394                  i2u174_41 1390                  i2u175_40 13AC  
                i2u175_41 13A8                  i2u176_40 13C6                  i2u176_41 13C2  
                i2u177_40 13D4                  i2u177_41 13D0                  i2u178_40 13E8  
                i2u178_41 13E4                  i2u179_40 13F6                  i2u179_41 13F2  
           _blink_counter 001D             _PORTA_current 0007                 init@F4605 0019  
              ?_busy_wait 0023                 init@i_116 00AC                submit@4720 003D  
                __Hrparam 0000                ?_move_left 0023                ?_move_down 0023  
                __Lrparam 0000           move_right@F4750 0013          __size_of___lwmod 0064  
        __size_of_canMove 00AC              move_up@F4753 0011                 setLed@pos 00A2  
                _blink_on 0043                  __ptext10 0E5C                  __ptext11 147C  
                __ptext20 12CA                  __ptext13 0AAA                  __ptext14 0012  
                __ptext15 1418                  __ptext16 1634                  __ptext17 14C2  
                __ptext18 15FE                  __ptext19 1558          __size_of_move_up 0020  
    move_left@newPosition 00AD             __size_of_draw 044A             __size_of_main 0018  
           __size_of_init 014A             __size_of_move 0026                  draw@4660 00B7  
                draw@4652 00AF                  draw@4670 00C1                  draw@4662 00B9  
                draw@4654 00B1                  draw@4680 00CB                  draw@4672 00C3  
                draw@4664 00BB                  draw@4656 00B3                  draw@4682 00CD  
                draw@4674 00C5                  draw@4666 00BD                  draw@4658 00B5  
                draw@4684 00CF                  draw@4676 00C7                  draw@4668 00BF  
                draw@4678 00C9              ??_move_right 00AD                  int$flags 0044  
                _position 001B                  _rotation 0021          ??_not_intersects 0023  
                init@4606 00A6               ??_busy_wait 00A2        __end_of_move_right 15BE  
                intlevel2 0000          ___lwmod@dividend 0023             ??i2_move_down 002E  
             ??_move_left 00AD               ??_move_down 00AD           ___lwmod@divisor 0025  
         ___lwmod@counter 0027               _prev_submit 001F  __size_of_HandleInterrupt 1410  
